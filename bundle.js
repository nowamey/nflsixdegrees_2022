(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
module.exports={"edges": [{"source": 817057, "target": 885248}, {"source": 817057, "target": 885250}, {"source": 817057, "target": 885251}, {"source": 817057, "target": 940804}, {"source": 817057, "target": 817412}, {"source": 817057, "target": 1181319}, {"source": 817057, "target": 940809}, {"source": 817057, "target": 817423}, {"source": 817057, "target": 861455}, {"source": 817057, "target": 1092881}, {"source": 817057, "target": 1132153}, {"source": 817057, "target": 1092880}, {"source": 817057, "target": 817172}, {"source": 817057, "target": 987552}, {"source": 817057, "target": 987559}, {"source": 817057, "target": 817063}, {"source": 817057, "target": 817191}, {"source": 817057, "target": 817068}, {"source": 817057, "target": 817069}, {"source": 817057, "target": 817196}, {"source": 817057, "target": 855985}, {"source": 817057, "target": 817458}, {"source": 817057, "target": 817332}, {"source": 817057, "target": 817206}, {"source": 817057, "target": 817463}, {"source": 817057, "target": 1092921}, {"source": 817057, "target": 963001}, {"source": 817057, "target": 817218}, {"source": 817057, "target": 817352}, {"source": 817057, "target": 954825}, {"source": 817057, "target": 817106}, {"source": 817057, "target": 1092947}, {"source": 817057, "target": 940758}, {"source": 817057, "target": 989015}, {"source": 817057, "target": 1133911}, {"source": 817057, "target": 885207}, {"source": 817057, "target": 1133914}, {"source": 817057, "target": 817240}, {"source": 817057, "target": 817239}, {"source": 817057, "target": 1133917}, {"source": 817057, "target": 816989}, {"source": 817057, "target": 816990}, {"source": 817057, "target": 885217}, {"source": 817057, "target": 940778}, {"source": 817057, "target": 1133165}, {"source": 817057, "target": 846963}, {"source": 817057, "target": 846964}, {"source": 817057, "target": 846965}, {"source": 817057, "target": 817270}, {"source": 817057, "target": 855801}, {"source": 817057, "target": 885242}, {"source": 817057, "target": 846971}, {"source": 817057, "target": 846972}, {"source": 817057, "target": 846973}, {"source": 817057, "target": 817406}, {"source": 817218, "target": 940800}, {"source": 817218, "target": 817025}, {"source": 817218, "target": 817410}, {"source": 817218, "target": 885251}, {"source": 817218, "target": 940804}, {"source": 817218, "target": 1181319}, {"source": 817218, "target": 817160}, {"source": 817218, "target": 817422}, {"source": 817218, "target": 817423}, {"source": 817218, "target": 861455}, {"source": 817218, "target": 1092881}, {"source": 817218, "target": 1132153}, {"source": 817218, "target": 905877}, {"source": 817218, "target": 817057}, {"source": 817218, "target": 817442}, {"source": 817218, "target": 817317}, {"source": 817218, "target": 817063}, {"source": 817218, "target": 905898}, {"source": 817218, "target": 817068}, {"source": 817218, "target": 817069}, {"source": 817218, "target": 817196}, {"source": 817218, "target": 817328}, {"source": 817218, "target": 855985}, {"source": 817218, "target": 990002}, {"source": 817218, "target": 817329}, {"source": 817218, "target": 817204}, {"source": 817218, "target": 817463}, {"source": 817218, "target": 1092921}, {"source": 817218, "target": 963001}, {"source": 817218, "target": 954825}, {"source": 817218, "target": 817354}, {"source": 817218, "target": 846933}, {"source": 817218, "target": 817237}, {"source": 817218, "target": 989015}, {"source": 817218, "target": 1133911}, {"source": 817218, "target": 885207}, {"source": 817218, "target": 1133914}, {"source": 817218, "target": 817238}, {"source": 817218, "target": 1133917}, {"source": 817218, "target": 816989}, {"source": 817218, "target": 885217}, {"source": 817218, "target": 846963}, {"source": 817218, "target": 855801}, {"source": 817218, "target": 817406}, {"source": 885251, "target": 817154}, {"source": 885251, "target": 885252}, {"source": 885251, "target": 817165}, {"source": 885251, "target": 817175}, {"source": 885251, "target": 957474}, {"source": 885251, "target": 817196}, {"source": 885251, "target": 817218}, {"source": 885251, "target": 817230}, {"source": 885251, "target": 846927}, {"source": 885251, "target": 846928}, {"source": 885251, "target": 846946}, {"source": 885251, "target": 846949}, {"source": 885251, "target": 846950}, {"source": 885251, "target": 846963}, {"source": 885251, "target": 1132153}, {"source": 885251, "target": 1181319}, {"source": 885251, "target": 817287}, {"source": 885251, "target": 988301}, {"source": 885251, "target": 817293}, {"source": 885251, "target": 817324}, {"source": 885251, "target": 817338}, {"source": 885251, "target": 905919}, {"source": 885251, "target": 817344}, {"source": 885251, "target": 817351}, {"source": 885251, "target": 817354}, {"source": 885251, "target": 817357}, {"source": 885251, "target": 940776}, {"source": 885251, "target": 940777}, {"source": 885251, "target": 998636}, {"source": 885251, "target": 1133812}, {"source": 885251, "target": 1133815}, {"source": 885251, "target": 855801}, {"source": 885251, "target": 940794}, {"source": 885251, "target": 817406}, {"source": 885251, "target": 1133825}, {"source": 885251, "target": 1092867}, {"source": 885251, "target": 940804}, {"source": 885251, "target": 972550}, {"source": 885251, "target": 940814}, {"source": 885251, "target": 817423}, {"source": 885251, "target": 1092881}, {"source": 885251, "target": 1133847}, {"source": 885251, "target": 940841}, {"source": 885251, "target": 1092906}, {"source": 885251, "target": 817455}, {"source": 885251, "target": 817458}, {"source": 885251, "target": 996152}, {"source": 885251, "target": 1092921}, {"source": 885251, "target": 1092926}, {"source": 885251, "target": 988996}, {"source": 885251, "target": 1092943}, {"source": 885251, "target": 1092950}, {"source": 885251, "target": 989015}, {"source": 885251, "target": 1133911}, {"source": 885251, "target": 1133914}, {"source": 885251, "target": 1133917}, {"source": 885251, "target": 816989}, {"source": 885251, "target": 989029}, {"source": 885251, "target": 989030}, {"source": 885251, "target": 816997}, {"source": 885251, "target": 903020}, {"source": 885251, "target": 817014}, {"source": 885251, "target": 817034}, {"source": 885251, "target": 817038}, {"source": 885251, "target": 817047}, {"source": 885251, "target": 817049}, {"source": 885251, "target": 989085}, {"source": 885251, "target": 817057}, {"source": 885251, "target": 817058}, {"source": 885251, "target": 817147}, {"source": 885251, "target": 817068}, {"source": 885251, "target": 817069}, {"source": 885251, "target": 855985}, {"source": 885251, "target": 963001}, {"source": 885251, "target": 817081}, {"source": 885251, "target": 817091}, {"source": 885251, "target": 954825}, {"source": 885251, "target": 885207}, {"source": 885251, "target": 817111}, {"source": 885251, "target": 987611}, {"source": 885251, "target": 885216}, {"source": 885251, "target": 885217}, {"source": 885251, "target": 817121}, {"source": 885251, "target": 817126}, {"source": 885251, "target": 817127}, {"source": 885251, "target": 817141}, {"source": 885251, "target": 885243}, {"source": 885217, "target": 885251}, {"source": 885217, "target": 940804}, {"source": 885217, "target": 1181319}, {"source": 885217, "target": 817159}, {"source": 885217, "target": 817287}, {"source": 885217, "target": 817034}, {"source": 885217, "target": 988300}, {"source": 885217, "target": 1136397}, {"source": 885217, "target": 817423}, {"source": 885217, "target": 861455}, {"source": 885217, "target": 1092881}, {"source": 885217, "target": 1132153}, {"source": 885217, "target": 957469}, {"source": 885217, "target": 817181}, {"source": 885217, "target": 817057}, {"source": 885217, "target": 817191}, {"source": 885217, "target": 816938}, {"source": 885217, "target": 817068}, {"source": 885217, "target": 817069}, {"source": 885217, "target": 817196}, {"source": 885217, "target": 817455}, {"source": 885217, "target": 855982}, {"source": 885217, "target": 855985}, {"source": 885217, "target": 817463}, {"source": 885217, "target": 1092921}, {"source": 885217, "target": 963001}, {"source": 885217, "target": 817338}, {"source": 885217, "target": 817218}, {"source": 885217, "target": 988994}, {"source": 885217, "target": 817091}, {"source": 885217, "target": 954825}, {"source": 885217, "target": 817357}, {"source": 885217, "target": 846927}, {"source": 885217, "target": 817236}, {"source": 885217, "target": 885206}, {"source": 885217, "target": 989015}, {"source": 885217, "target": 1133911}, {"source": 885217, "target": 885207}, {"source": 885217, "target": 1133914}, {"source": 885217, "target": 940759}, {"source": 885217, "target": 1133917}, {"source": 885217, "target": 816989}, {"source": 885217, "target": 885214}, {"source": 885217, "target": 885215}, {"source": 885217, "target": 885216}, {"source": 885217, "target": 940776}, {"source": 885217, "target": 817258}, {"source": 885217, "target": 846963}, {"source": 885217, "target": 817012}, {"source": 885217, "target": 855801}, {"source": 885217, "target": 817020}, {"source": 885217, "target": 817406}, {"source": 1181319, "target": 817057}, {"source": 1181319, "target": 817218}, {"source": 1181319, "target": 885251}, {"source": 1181319, "target": 885217}, {"source": 1181319, "target": 954825}, {"source": 1181319, "target": 963001}, {"source": 1181319, "target": 817069}, {"source": 1181319, "target": 989015}, {"source": 1181319, "target": 817423}, {"source": 1181319, "target": 855985}, {"source": 1181319, "target": 1092881}, {"source": 1181319, "target": 1133911}, {"source": 1181319, "target": 855801}, {"source": 1181319, "target": 1133914}, {"source": 1181319, "target": 1133917}, {"source": 1181319, "target": 816989}, {"source": 1181319, "target": 817406}, {"source": 954825, "target": 885251}, {"source": 954825, "target": 940804}, {"source": 954825, "target": 1181319}, {"source": 954825, "target": 1092872}, {"source": 954825, "target": 817423}, {"source": 954825, "target": 861455}, {"source": 954825, "target": 1092881}, {"source": 954825, "target": 1132153}, {"source": 954825, "target": 989079}, {"source": 954825, "target": 817057}, {"source": 954825, "target": 817068}, {"source": 954825, "target": 817069}, {"source": 954825, "target": 817196}, {"source": 954825, "target": 1092911}, {"source": 954825, "target": 855985}, {"source": 954825, "target": 1092913}, {"source": 954825, "target": 846898}, {"source": 954825, "target": 817463}, {"source": 954825, "target": 1092921}, {"source": 954825, "target": 963001}, {"source": 954825, "target": 817218}, {"source": 954825, "target": 885203}, {"source": 954825, "target": 940756}, {"source": 954825, "target": 989015}, {"source": 954825, "target": 1133911}, {"source": 954825, "target": 885207}, {"source": 954825, "target": 1133914}, {"source": 954825, "target": 1133917}, {"source": 954825, "target": 816989}, {"source": 954825, "target": 987101}, {"source": 954825, "target": 817375}, {"source": 954825, "target": 885217}, {"source": 954825, "target": 846963}, {"source": 954825, "target": 855801}, {"source": 954825, "target": 817147}, {"source": 954825, "target": 817406}, {"source": 1133911, "target": 885251}, {"source": 1133911, "target": 940804}, {"source": 1133911, "target": 1181319}, {"source": 1133911, "target": 817423}, {"source": 1133911, "target": 861455}, {"source": 1133911, "target": 1092881}, {"source": 1133911, "target": 1132153}, {"source": 1133911, "target": 817057}, {"source": 1133911, "target": 817068}, {"source": 1133911, "target": 817069}, {"source": 1133911, "target": 817196}, {"source": 1133911, "target": 855985}, {"source": 1133911, "target": 817463}, {"source": 1133911, "target": 1092921}, {"source": 1133911, "target": 963001}, {"source": 1133911, "target": 817218}, {"source": 1133911, "target": 954825}, {"source": 1133911, "target": 989015}, {"source": 1133911, "target": 885207}, {"source": 1133911, "target": 1133914}, {"source": 1133911, "target": 1133917}, {"source": 1133911, "target": 816989}, {"source": 1133911, "target": 885217}, {"source": 1133911, "target": 846963}, {"source": 1133911, "target": 855801}, {"source": 1133911, "target": 817406}, {"source": 816989, "target": 885251}, {"source": 816989, "target": 885252}, {"source": 816989, "target": 885254}, {"source": 816989, "target": 885256}, {"source": 816989, "target": 817172}, {"source": 816989, "target": 817180}, {"source": 816989, "target": 957469}, {"source": 816989, "target": 817181}, {"source": 816989, "target": 817196}, {"source": 816989, "target": 846893}, {"source": 816989, "target": 1181231}, {"source": 816989, "target": 817204}, {"source": 816989, "target": 817205}, {"source": 816989, "target": 817218}, {"source": 816989, "target": 846915}, {"source": 816989, "target": 846918}, {"source": 816989, "target": 846919}, {"source": 816989, "target": 1415757}, {"source": 816989, "target": 817229}, {"source": 816989, "target": 846927}, {"source": 816989, "target": 846928}, {"source": 816989, "target": 1132119}, {"source": 816989, "target": 817244}, {"source": 816989, "target": 956516}, {"source": 816989, "target": 988788}, {"source": 816989, "target": 1132153}, {"source": 816989, "target": 817279}, {"source": 816989, "target": 1181319}, {"source": 816989, "target": 817287}, {"source": 816989, "target": 817344}, {"source": 816989, "target": 817352}, {"source": 816989, "target": 817357}, {"source": 816989, "target": 987343}, {"source": 816989, "target": 817361}, {"source": 816989, "target": 940758}, {"source": 816989, "target": 940759}, {"source": 816989, "target": 940760}, {"source": 816989, "target": 987872}, {"source": 816989, "target": 940768}, {"source": 816989, "target": 817376}, {"source": 816989, "target": 940774}, {"source": 816989, "target": 940779}, {"source": 816989, "target": 940785}, {"source": 816989, "target": 855801}, {"source": 816989, "target": 940794}, {"source": 816989, "target": 817406}, {"source": 816989, "target": 940800}, {"source": 816989, "target": 1092865}, {"source": 816989, "target": 817410}, {"source": 816989, "target": 1092867}, {"source": 816989, "target": 940804}, {"source": 816989, "target": 1092872}, {"source": 816989, "target": 1092873}, {"source": 816989, "target": 1136397}, {"source": 816989, "target": 817423}, {"source": 816989, "target": 1092881}, {"source": 816989, "target": 817437}, {"source": 816989, "target": 987934}, {"source": 816989, "target": 816938}, {"source": 816989, "target": 817453}, {"source": 816989, "target": 958769}, {"source": 816989, "target": 951089}, {"source": 816989, "target": 816958}, {"source": 816989, "target": 1092929}, {"source": 816989, "target": 988994}, {"source": 816989, "target": 1092930}, {"source": 816989, "target": 861512}, {"source": 816989, "target": 816970}, {"source": 816989, "target": 989007}, {"source": 816989, "target": 1092948}, {"source": 816989, "target": 1092949}, {"source": 816989, "target": 816981}, {"source": 816989, "target": 989015}, {"source": 816989, "target": 1133911}, {"source": 816989, "target": 989017}, {"source": 816989, "target": 1133914}, {"source": 816989, "target": 1133917}, {"source": 816989, "target": 989029}, {"source": 816989, "target": 817022}, {"source": 816989, "target": 817025}, {"source": 816989, "target": 817034}, {"source": 816989, "target": 817038}, {"source": 816989, "target": 817044}, {"source": 816989, "target": 817054}, {"source": 816989, "target": 817057}, {"source": 816989, "target": 1133988}, {"source": 816989, "target": 1133989}, {"source": 816989, "target": 817068}, {"source": 816989, "target": 817069}, {"source": 816989, "target": 855985}, {"source": 816989, "target": 1134001}, {"source": 816989, "target": 963001}, {"source": 816989, "target": 1134017}, {"source": 816989, "target": 1134024}, {"source": 816989, "target": 954825}, {"source": 816989, "target": 998860}, {"source": 816989, "target": 817101}, {"source": 816989, "target": 817106}, {"source": 816989, "target": 817108}, {"source": 816989, "target": 987099}, {"source": 816989, "target": 817115}, {"source": 816989, "target": 987102}, {"source": 816989, "target": 987103}, {"source": 816989, "target": 885216}, {"source": 816989, "target": 885217}, {"source": 816989, "target": 1178591}, {"source": 816989, "target": 988643}, {"source": 816989, "target": 817125}, {"source": 816989, "target": 905191}, {"source": 816989, "target": 817127}, {"source": 816989, "target": 885228}, {"source": 816989, "target": 817133}, {"source": 816989, "target": 817136}, {"source": 816989, "target": 817139}, {"source": 816989, "target": 885237}, {"source": 816989, "target": 817141}, {"source": 817069, "target": 817154}, {"source": 817069, "target": 885251}, {"source": 817069, "target": 885256}, {"source": 817069, "target": 817177}, {"source": 817069, "target": 987161}, {"source": 817069, "target": 817180}, {"source": 817069, "target": 817181}, {"source": 817069, "target": 817191}, {"source": 817069, "target": 817196}, {"source": 817069, "target": 846893}, {"source": 817069, "target": 817218}, {"source": 817069, "target": 846919}, {"source": 817069, "target": 817238}, {"source": 817069, "target": 817244}, {"source": 817069, "target": 817249}, {"source": 817069, "target": 846946}, {"source": 817069, "target": 846949}, {"source": 817069, "target": 846950}, {"source": 817069, "target": 817258}, {"source": 817069, "target": 817265}, {"source": 817069, "target": 817270}, {"source": 817069, "target": 817279}, {"source": 817069, "target": 817280}, {"source": 817069, "target": 1181319}, {"source": 817069, "target": 905877}, {"source": 817069, "target": 905919}, {"source": 817069, "target": 817351}, {"source": 817069, "target": 987343}, {"source": 817069, "target": 817361}, {"source": 817069, "target": 817376}, {"source": 817069, "target": 940769}, {"source": 817069, "target": 940776}, {"source": 817069, "target": 940777}, {"source": 817069, "target": 855801}, {"source": 817069, "target": 817406}, {"source": 817069, "target": 940801}, {"source": 817069, "target": 940805}, {"source": 817069, "target": 972549}, {"source": 817069, "target": 817422}, {"source": 817069, "target": 817423}, {"source": 817069, "target": 1092881}, {"source": 817069, "target": 817437}, {"source": 817069, "target": 1092900}, {"source": 817069, "target": 1092906}, {"source": 817069, "target": 817455}, {"source": 817069, "target": 1092915}, {"source": 817069, "target": 1092921}, {"source": 817069, "target": 1092926}, {"source": 817069, "target": 816970}, {"source": 817069, "target": 989006}, {"source": 817069, "target": 1092943}, {"source": 817069, "target": 1133907}, {"source": 817069, "target": 989015}, {"source": 817069, "target": 1133911}, {"source": 817069, "target": 1133914}, {"source": 817069, "target": 1133917}, {"source": 817069, "target": 816989}, {"source": 817069, "target": 989030}, {"source": 817069, "target": 1133927}, {"source": 817069, "target": 817012}, {"source": 817069, "target": 817020}, {"source": 817069, "target": 817049}, {"source": 817069, "target": 989085}, {"source": 817069, "target": 817054}, {"source": 817069, "target": 817057}, {"source": 817069, "target": 817060}, {"source": 817069, "target": 987558}, {"source": 817069, "target": 987560}, {"source": 817069, "target": 817065}, {"source": 817069, "target": 1133995}, {"source": 817069, "target": 817068}, {"source": 817069, "target": 987564}, {"source": 817069, "target": 855985}, {"source": 817069, "target": 817074}, {"source": 817069, "target": 963001}, {"source": 817069, "target": 817081}, {"source": 817069, "target": 1134015}, {"source": 817069, "target": 1134019}, {"source": 817069, "target": 861639}, {"source": 817069, "target": 954825}, {"source": 817069, "target": 885215}, {"source": 817069, "target": 885217}, {"source": 817069, "target": 817121}, {"source": 817069, "target": 885222}, {"source": 817069, "target": 817127}, {"source": 817069, "target": 885229}, {"source": 817069, "target": 817136}, {"source": 817069, "target": 817140}, {"source": 817069, "target": 817141}, {"source": 817423, "target": 1092865}, {"source": 817423, "target": 817025}, {"source": 817423, "target": 885251}, {"source": 817423, "target": 940804}, {"source": 817423, "target": 1181319}, {"source": 817423, "target": 817159}, {"source": 817423, "target": 940810}, {"source": 817423, "target": 861455}, {"source": 817423, "target": 1092881}, {"source": 817423, "target": 1132153}, {"source": 817423, "target": 817172}, {"source": 817423, "target": 817173}, {"source": 817423, "target": 817305}, {"source": 817423, "target": 817049}, {"source": 817423, "target": 817057}, {"source": 817423, "target": 817058}, {"source": 817423, "target": 817068}, {"source": 817423, "target": 817069}, {"source": 817423, "target": 817196}, {"source": 817423, "target": 905900}, {"source": 817423, "target": 855985}, {"source": 817423, "target": 817463}, {"source": 817423, "target": 1092921}, {"source": 817423, "target": 963001}, {"source": 817423, "target": 817218}, {"source": 817423, "target": 817094}, {"source": 817423, "target": 817352}, {"source": 817423, "target": 954825}, {"source": 817423, "target": 816970}, {"source": 817423, "target": 987343}, {"source": 817423, "target": 989015}, {"source": 817423, "target": 1133911}, {"source": 817423, "target": 885207}, {"source": 817423, "target": 1133914}, {"source": 817423, "target": 817114}, {"source": 817423, "target": 940760}, {"source": 817423, "target": 1133917}, {"source": 817423, "target": 816989}, {"source": 817423, "target": 987103}, {"source": 817423, "target": 816990}, {"source": 817423, "target": 885217}, {"source": 817423, "target": 817126}, {"source": 817423, "target": 885228}, {"source": 817423, "target": 846963}, {"source": 817423, "target": 885237}, {"source": 817423, "target": 817141}, {"source": 817423, "target": 855801}, {"source": 817423, "target": 817406}, {"source": 855985, "target": 885251}, {"source": 855985, "target": 940804}, {"source": 855985, "target": 817412}, {"source": 855985, "target": 988678}, {"source": 855985, "target": 1181319}, {"source": 855985, "target": 846983}, {"source": 855985, "target": 817423}, {"source": 855985, "target": 1092881}, {"source": 855985, "target": 1132153}, {"source": 855985, "target": 817044}, {"source": 855985, "target": 817300}, {"source": 855985, "target": 817173}, {"source": 855985, "target": 817047}, {"source": 855985, "target": 817429}, {"source": 855985, "target": 817017}, {"source": 855985, "target": 817306}, {"source": 855985, "target": 957469}, {"source": 855985, "target": 1391264}, {"source": 855985, "target": 817057}, {"source": 855985, "target": 817191}, {"source": 855985, "target": 817068}, {"source": 855985, "target": 817069}, {"source": 855985, "target": 817196}, {"source": 855985, "target": 817453}, {"source": 855985, "target": 958896}, {"source": 855985, "target": 817332}, {"source": 855985, "target": 817464}, {"source": 855985, "target": 1092921}, {"source": 855985, "target": 963001}, {"source": 855985, "target": 817218}, {"source": 855985, "target": 945092}, {"source": 855985, "target": 954825}, {"source": 855985, "target": 817228}, {"source": 855985, "target": 817230}, {"source": 855985, "target": 817232}, {"source": 855985, "target": 846928}, {"source": 855985, "target": 1133781}, {"source": 855985, "target": 989015}, {"source": 855985, "target": 1133911}, {"source": 855985, "target": 940761}, {"source": 855985, "target": 1133914}, {"source": 855985, "target": 1133917}, {"source": 855985, "target": 816989}, {"source": 855985, "target": 940767}, {"source": 855985, "target": 885217}, {"source": 855985, "target": 885218}, {"source": 855985, "target": 956516}, {"source": 855985, "target": 817000}, {"source": 855985, "target": 846963}, {"source": 855985, "target": 988789}, {"source": 855985, "target": 885239}, {"source": 855985, "target": 817144}, {"source": 855985, "target": 855801}, {"source": 855985, "target": 885242}, {"source": 855985, "target": 817406}, {"source": 855985, "target": 1092863}, {"source": 1092881, "target": 940800}, {"source": 1092881, "target": 885251}, {"source": 1092881, "target": 940804}, {"source": 1092881, "target": 1181319}, {"source": 1092881, "target": 817422}, {"source": 1092881, "target": 817423}, {"source": 1092881, "target": 861455}, {"source": 1092881, "target": 1132153}, {"source": 1092881, "target": 817057}, {"source": 1092881, "target": 905898}, {"source": 1092881, "target": 817068}, {"source": 1092881, "target": 817069}, {"source": 1092881, "target": 817196}, {"source": 1092881, "target": 817328}, {"source": 1092881, "target": 855985}, {"source": 1092881, "target": 817463}, {"source": 1092881, "target": 1092921}, {"source": 1092881, "target": 963001}, {"source": 1092881, "target": 817218}, {"source": 1092881, "target": 954825}, {"source": 1092881, "target": 989015}, {"source": 1092881, "target": 1133911}, {"source": 1092881, "target": 885207}, {"source": 1092881, "target": 1133914}, {"source": 1092881, "target": 1133917}, {"source": 1092881, "target": 816989}, {"source": 1092881, "target": 885217}, {"source": 1092881, "target": 846963}, {"source": 1092881, "target": 855801}, {"source": 1092881, "target": 817406}, {"source": 855801, "target": 817280}, {"source": 855801, "target": 885251}, {"source": 855801, "target": 940804}, {"source": 855801, "target": 1181319}, {"source": 855801, "target": 817287}, {"source": 855801, "target": 817034}, {"source": 855801, "target": 988300}, {"source": 855801, "target": 817423}, {"source": 855801, "target": 861455}, {"source": 855801, "target": 1092881}, {"source": 855801, "target": 817181}, {"source": 855801, "target": 817054}, {"source": 855801, "target": 817437}, {"source": 855801, "target": 817057}, {"source": 855801, "target": 817068}, {"source": 855801, "target": 817069}, {"source": 855801, "target": 817196}, {"source": 855801, "target": 855982}, {"source": 855801, "target": 855985}, {"source": 855801, "target": 817463}, {"source": 855801, "target": 1092921}, {"source": 855801, "target": 963001}, {"source": 855801, "target": 817338}, {"source": 855801, "target": 817218}, {"source": 855801, "target": 846919}, {"source": 855801, "target": 954825}, {"source": 855801, "target": 987343}, {"source": 855801, "target": 846927}, {"source": 855801, "target": 817361}, {"source": 855801, "target": 817236}, {"source": 855801, "target": 989015}, {"source": 855801, "target": 1133911}, {"source": 855801, "target": 885207}, {"source": 855801, "target": 1133914}, {"source": 855801, "target": 940759}, {"source": 855801, "target": 1133917}, {"source": 855801, "target": 816989}, {"source": 855801, "target": 885215}, {"source": 855801, "target": 885214}, {"source": 855801, "target": 885217}, {"source": 855801, "target": 817249}, {"source": 855801, "target": 817121}, {"source": 855801, "target": 885216}, {"source": 855801, "target": 940776}, {"source": 855801, "target": 817258}, {"source": 855801, "target": 817136}, {"source": 855801, "target": 846963}, {"source": 855801, "target": 817012}, {"source": 855801, "target": 1132153}, {"source": 855801, "target": 817020}, {"source": 855801, "target": 817406}, {"source": 989015, "target": 940800}, {"source": 989015, "target": 885251}, {"source": 989015, "target": 940804}, {"source": 989015, "target": 1181319}, {"source": 989015, "target": 817422}, {"source": 989015, "target": 817423}, {"source": 989015, "target": 861455}, {"source": 989015, "target": 1092881}, {"source": 989015, "target": 1132153}, {"source": 989015, "target": 817057}, {"source": 989015, "target": 905898}, {"source": 989015, "target": 817068}, {"source": 989015, "target": 817069}, {"source": 989015, "target": 817196}, {"source": 989015, "target": 817328}, {"source": 989015, "target": 855985}, {"source": 989015, "target": 990002}, {"source": 989015, "target": 817463}, {"source": 989015, "target": 1092921}, {"source": 989015, "target": 963001}, {"source": 989015, "target": 817218}, {"source": 989015, "target": 954825}, {"source": 989015, "target": 846933}, {"source": 989015, "target": 817237}, {"source": 989015, "target": 1133911}, {"source": 989015, "target": 885207}, {"source": 989015, "target": 1133914}, {"source": 989015, "target": 1133917}, {"source": 989015, "target": 816989}, {"source": 989015, "target": 885217}, {"source": 989015, "target": 846963}, {"source": 989015, "target": 855801}, {"source": 989015, "target": 817406}, {"source": 963001, "target": 940800}, {"source": 963001, "target": 885251}, {"source": 963001, "target": 940804}, {"source": 963001, "target": 1181319}, {"source": 963001, "target": 817422}, {"source": 963001, "target": 817423}, {"source": 963001, "target": 861455}, {"source": 963001, "target": 1092881}, {"source": 963001, "target": 1132153}, {"source": 963001, "target": 817057}, {"source": 963001, "target": 905898}, {"source": 963001, "target": 817068}, {"source": 963001, "target": 817069}, {"source": 963001, "target": 817196}, {"source": 963001, "target": 817328}, {"source": 963001, "target": 855985}, {"source": 963001, "target": 990002}, {"source": 963001, "target": 817463}, {"source": 963001, "target": 1092921}, {"source": 963001, "target": 817218}, {"source": 963001, "target": 954825}, {"source": 963001, "target": 846933}, {"source": 963001, "target": 989015}, {"source": 963001, "target": 1133911}, {"source": 963001, "target": 885207}, {"source": 963001, "target": 1133914}, {"source": 963001, "target": 1133917}, {"source": 963001, "target": 816989}, {"source": 963001, "target": 885217}, {"source": 963001, "target": 846963}, {"source": 963001, "target": 855801}, {"source": 963001, "target": 817406}, {"source": 1133914, "target": 885251}, {"source": 1133914, "target": 940804}, {"source": 1133914, "target": 1181319}, {"source": 1133914, "target": 817423}, {"source": 1133914, "target": 1092881}, {"source": 1133914, "target": 1132153}, {"source": 1133914, "target": 817057}, {"source": 1133914, "target": 817068}, {"source": 1133914, "target": 817069}, {"source": 1133914, "target": 855985}, {"source": 1133914, "target": 1092921}, {"source": 1133914, "target": 963001}, {"source": 1133914, "target": 817218}, {"source": 1133914, "target": 954825}, {"source": 1133914, "target": 989015}, {"source": 1133914, "target": 1133911}, {"source": 1133914, "target": 1133917}, {"source": 1133914, "target": 816989}, {"source": 1133914, "target": 885217}, {"source": 1133914, "target": 855801}, {"source": 1133914, "target": 817406}, {"source": 1133917, "target": 885251}, {"source": 1133917, "target": 1181319}, {"source": 1133917, "target": 817423}, {"source": 1133917, "target": 1092881}, {"source": 1133917, "target": 817057}, {"source": 1133917, "target": 817068}, {"source": 1133917, "target": 817069}, {"source": 1133917, "target": 817199}, {"source": 1133917, "target": 855985}, {"source": 1133917, "target": 1092914}, {"source": 1133917, "target": 963001}, {"source": 1133917, "target": 817344}, {"source": 1133917, "target": 817218}, {"source": 1133917, "target": 846917}, {"source": 1133917, "target": 954825}, {"source": 1133917, "target": 816979}, {"source": 1133917, "target": 989015}, {"source": 1133917, "target": 1133911}, {"source": 1133917, "target": 885209}, {"source": 1133917, "target": 1133914}, {"source": 1133917, "target": 817114}, {"source": 1133917, "target": 885211}, {"source": 1133917, "target": 816989}, {"source": 1133917, "target": 885217}, {"source": 1133917, "target": 940773}, {"source": 1133917, "target": 817126}, {"source": 1133917, "target": 817125}, {"source": 1133917, "target": 1133811}, {"source": 1133917, "target": 885239}, {"source": 1133917, "target": 855801}, {"source": 1133917, "target": 817406}, {"source": 817406, "target": 817154}, {"source": 817406, "target": 885251}, {"source": 817406, "target": 817160}, {"source": 817406, "target": 817163}, {"source": 817406, "target": 817165}, {"source": 817406, "target": 987161}, {"source": 817406, "target": 817177}, {"source": 817406, "target": 817181}, {"source": 817406, "target": 823344}, {"source": 817406, "target": 846898}, {"source": 817406, "target": 846905}, {"source": 817406, "target": 817218}, {"source": 817406, "target": 846919}, {"source": 817406, "target": 817228}, {"source": 817406, "target": 846931}, {"source": 817406, "target": 817238}, {"source": 817406, "target": 1132132}, {"source": 817406, "target": 1132138}, {"source": 817406, "target": 817258}, {"source": 817406, "target": 1000050}, {"source": 817406, "target": 905846}, {"source": 817406, "target": 1132153}, {"source": 817406, "target": 1181319}, {"source": 817406, "target": 905866}, {"source": 817406, "target": 988300}, {"source": 817406, "target": 905877}, {"source": 817406, "target": 817317}, {"source": 817406, "target": 905898}, {"source": 817406, "target": 905908}, {"source": 817406, "target": 817351}, {"source": 817406, "target": 817354}, {"source": 817406, "target": 989900}, {"source": 817406, "target": 940755}, {"source": 817406, "target": 940756}, {"source": 817406, "target": 940759}, {"source": 817406, "target": 1133787}, {"source": 817406, "target": 817375}, {"source": 817406, "target": 940769}, {"source": 817406, "target": 940778}, {"source": 817406, "target": 940788}, {"source": 817406, "target": 855801}, {"source": 817406, "target": 940804}, {"source": 817406, "target": 817414}, {"source": 817406, "target": 1092872}, {"source": 817406, "target": 940811}, {"source": 817406, "target": 817423}, {"source": 817406, "target": 861455}, {"source": 817406, "target": 1092881}, {"source": 817406, "target": 817429}, {"source": 817406, "target": 1092897}, {"source": 817406, "target": 1092911}, {"source": 817406, "target": 958769}, {"source": 817406, "target": 817458}, {"source": 817406, "target": 1092913}, {"source": 817406, "target": 996152}, {"source": 817406, "target": 1092921}, {"source": 817406, "target": 1092928}, {"source": 817406, "target": 989005}, {"source": 817406, "target": 1092944}, {"source": 817406, "target": 816977}, {"source": 817406, "target": 1092948}, {"source": 817406, "target": 989015}, {"source": 817406, "target": 1133911}, {"source": 817406, "target": 1133914}, {"source": 817406, "target": 1133916}, {"source": 817406, "target": 1133917}, {"source": 817406, "target": 816989}, {"source": 817406, "target": 1133920}, {"source": 817406, "target": 817014}, {"source": 817406, "target": 817022}, {"source": 817406, "target": 817034}, {"source": 817406, "target": 989078}, {"source": 817406, "target": 989079}, {"source": 817406, "target": 817047}, {"source": 817406, "target": 817049}, {"source": 817406, "target": 817057}, {"source": 817406, "target": 817060}, {"source": 817406, "target": 987558}, {"source": 817406, "target": 987560}, {"source": 817406, "target": 817068}, {"source": 817406, "target": 817069}, {"source": 817406, "target": 987564}, {"source": 817406, "target": 855985}, {"source": 817406, "target": 963001}, {"source": 817406, "target": 817094}, {"source": 817406, "target": 954825}, {"source": 817406, "target": 817101}, {"source": 817406, "target": 885200}, {"source": 817406, "target": 885203}, {"source": 817406, "target": 987101}, {"source": 817406, "target": 885217}, {"source": 817406, "target": 988643}, {"source": 817406, "target": 817126}, {"source": 817406, "target": 817140}, {"source": 817406, "target": 885244}, {"source": 1092928, "target": 1092866}, {"source": 1092928, "target": 817160}, {"source": 1092928, "target": 1092874}, {"source": 1092928, "target": 988300}, {"source": 1092928, "target": 989078}, {"source": 1092928, "target": 1179043}, {"source": 1092928, "target": 817063}, {"source": 1092928, "target": 1181233}, {"source": 1092928, "target": 817458}, {"source": 1092928, "target": 905908}, {"source": 1092928, "target": 817406}, {"source": 1092928, "target": 1092036}, {"source": 1092928, "target": 817101}, {"source": 1092928, "target": 885200}, {"source": 1092928, "target": 940755}, {"source": 1092928, "target": 1092948}, {"source": 1092928, "target": 846933}, {"source": 1092928, "target": 1178199}, {"source": 1092928, "target": 1133787}, {"source": 1092928, "target": 989020}, {"source": 1092928, "target": 940782}, {"source": 1092928, "target": 846964}, {"source": 1092928, "target": 940789}, {"source": 1092928, "target": 940788}, {"source": 1092928, "target": 817022}, {"source": 1092866, "target": 1092928}, {"source": 1092866, "target": 1179043}, {"source": 1092866, "target": 1092036}, {"source": 1092866, "target": 1092874}, {"source": 1092866, "target": 988300}, {"source": 1092866, "target": 885200}, {"source": 1092866, "target": 1181233}, {"source": 1092866, "target": 940755}, {"source": 1092866, "target": 905908}, {"source": 1092866, "target": 940789}, {"source": 1092866, "target": 989078}, {"source": 1092866, "target": 1178199}, {"source": 1092866, "target": 846964}, {"source": 1092866, "target": 1133787}, {"source": 1092866, "target": 989020}, {"source": 1092866, "target": 817022}, {"source": 1179043, "target": 1092928}, {"source": 1179043, "target": 1092866}, {"source": 1179043, "target": 1092036}, {"source": 1179043, "target": 1092874}, {"source": 1179043, "target": 988300}, {"source": 1179043, "target": 885200}, {"source": 1179043, "target": 1181233}, {"source": 1179043, "target": 940755}, {"source": 1179043, "target": 905908}, {"source": 1179043, "target": 940789}, {"source": 1179043, "target": 989078}, {"source": 1179043, "target": 1178199}, {"source": 1179043, "target": 846964}, {"source": 1179043, "target": 1133787}, {"source": 1179043, "target": 989020}, {"source": 1179043, "target": 817022}, {"source": 1092036, "target": 1092928}, {"source": 1092036, "target": 1092866}, {"source": 1092036, "target": 1179043}, {"source": 1092036, "target": 1092874}, {"source": 1092036, "target": 988300}, {"source": 1092036, "target": 885200}, {"source": 1092036, "target": 1181233}, {"source": 1092036, "target": 940755}, {"source": 1092036, "target": 905908}, {"source": 1092036, "target": 940789}, {"source": 1092036, "target": 989078}, {"source": 1092036, "target": 1178199}, {"source": 1092036, "target": 846964}, {"source": 1092036, "target": 1133787}, {"source": 1092036, "target": 989020}, {"source": 1092036, "target": 817022}, {"source": 1092874, "target": 1092866}, {"source": 1092874, "target": 940811}, {"source": 1092874, "target": 988300}, {"source": 1092874, "target": 817296}, {"source": 1092874, "target": 1133845}, {"source": 1092874, "target": 989078}, {"source": 1092874, "target": 817306}, {"source": 1092874, "target": 1133854}, {"source": 1092874, "target": 817058}, {"source": 1092874, "target": 1179043}, {"source": 1092874, "target": 1092901}, {"source": 1092874, "target": 1178536}, {"source": 1092874, "target": 817324}, {"source": 1092874, "target": 1181233}, {"source": 1092874, "target": 817458}, {"source": 1092874, "target": 905908}, {"source": 1092874, "target": 817206}, {"source": 1092874, "target": 1092928}, {"source": 1092874, "target": 1092036}, {"source": 1092874, "target": 817351}, {"source": 1092874, "target": 1178570}, {"source": 1092874, "target": 940798}, {"source": 1092874, "target": 885200}, {"source": 1092874, "target": 846928}, {"source": 1092874, "target": 940755}, {"source": 1092874, "target": 885206}, {"source": 1092874, "target": 1178199}, {"source": 1092874, "target": 1092952}, {"source": 1092874, "target": 817240}, {"source": 1092874, "target": 885208}, {"source": 1092874, "target": 1133787}, {"source": 1092874, "target": 989020}, {"source": 1092874, "target": 1092951}, {"source": 1092874, "target": 817119}, {"source": 1092874, "target": 816997}, {"source": 1092874, "target": 817127}, {"source": 1092874, "target": 940776}, {"source": 1092874, "target": 1132139}, {"source": 1092874, "target": 998636}, {"source": 1092874, "target": 846964}, {"source": 1092874, "target": 940789}, {"source": 1092874, "target": 817014}, {"source": 1092874, "target": 817022}, {"source": 988300, "target": 1092866}, {"source": 988300, "target": 817159}, {"source": 988300, "target": 817160}, {"source": 988300, "target": 817287}, {"source": 988300, "target": 1092874}, {"source": 988300, "target": 989078}, {"source": 988300, "target": 817181}, {"source": 988300, "target": 817054}, {"source": 988300, "target": 817058}, {"source": 988300, "target": 1179043}, {"source": 988300, "target": 817063}, {"source": 988300, "target": 817196}, {"source": 988300, "target": 817455}, {"source": 988300, "target": 1181233}, {"source": 988300, "target": 817458}, {"source": 988300, "target": 905908}, {"source": 988300, "target": 817338}, {"source": 988300, "target": 817406}, {"source": 988300, "target": 1092928}, {"source": 988300, "target": 988994}, {"source": 988300, "target": 1092036}, {"source": 988300, "target": 846919}, {"source": 988300, "target": 817228}, {"source": 988300, "target": 817101}, {"source": 988300, "target": 885200}, {"source": 988300, "target": 940755}, {"source": 988300, "target": 1092948}, {"source": 988300, "target": 846933}, {"source": 988300, "target": 885206}, {"source": 988300, "target": 1178199}, {"source": 988300, "target": 940759}, {"source": 988300, "target": 1133787}, {"source": 988300, "target": 989020}, {"source": 988300, "target": 885214}, {"source": 988300, "target": 885215}, {"source": 988300, "target": 885217}, {"source": 988300, "target": 817258}, {"source": 988300, "target": 940782}, {"source": 988300, "target": 846964}, {"source": 988300, "target": 940789}, {"source": 988300, "target": 940788}, {"source": 988300, "target": 817012}, {"source": 988300, "target": 855801}, {"source": 988300, "target": 817020}, {"source": 988300, "target": 817022}, {"source": 885200, "target": 1092866}, {"source": 885200, "target": 817287}, {"source": 885200, "target": 817160}, {"source": 885200, "target": 1092874}, {"source": 885200, "target": 988300}, {"source": 885200, "target": 989078}, {"source": 885200, "target": 817058}, {"source": 885200, "target": 1179043}, {"source": 885200, "target": 817063}, {"source": 885200, "target": 861608}, {"source": 885200, "target": 846893}, {"source": 885200, "target": 1181233}, {"source": 885200, "target": 817458}, {"source": 885200, "target": 905908}, {"source": 885200, "target": 817406}, {"source": 885200, "target": 1092928}, {"source": 885200, "target": 988994}, {"source": 885200, "target": 1092036}, {"source": 885200, "target": 846919}, {"source": 885200, "target": 817228}, {"source": 885200, "target": 817101}, {"source": 885200, "target": 817361}, {"source": 885200, "target": 940755}, {"source": 885200, "target": 1092948}, {"source": 885200, "target": 846933}, {"source": 885200, "target": 1178199}, {"source": 885200, "target": 1133787}, {"source": 885200, "target": 989020}, {"source": 885200, "target": 817132}, {"source": 885200, "target": 940782}, {"source": 885200, "target": 846964}, {"source": 885200, "target": 940789}, {"source": 885200, "target": 940788}, {"source": 885200, "target": 940793}, {"source": 885200, "target": 817022}, {"source": 1181233, "target": 1092928}, {"source": 1181233, "target": 1092866}, {"source": 1181233, "target": 1179043}, {"source": 1181233, "target": 1092036}, {"source": 1181233, "target": 1092874}, {"source": 1181233, "target": 988300}, {"source": 1181233, "target": 885200}, {"source": 1181233, "target": 940755}, {"source": 1181233, "target": 905908}, {"source": 1181233, "target": 940789}, {"source": 1181233, "target": 989078}, {"source": 1181233, "target": 1178199}, {"source": 1181233, "target": 846964}, {"source": 1181233, "target": 1133787}, {"source": 1181233, "target": 989020}, {"source": 1181233, "target": 817022}, {"source": 940755, "target": 1092866}, {"source": 940755, "target": 940803}, {"source": 940755, "target": 817287}, {"source": 940755, "target": 817160}, {"source": 940755, "target": 1092874}, {"source": 940755, "target": 988300}, {"source": 940755, "target": 817296}, {"source": 940755, "target": 989078}, {"source": 940755, "target": 817049}, {"source": 940755, "target": 817058}, {"source": 940755, "target": 1179043}, {"source": 940755, "target": 817063}, {"source": 940755, "target": 861608}, {"source": 940755, "target": 846893}, {"source": 940755, "target": 1181233}, {"source": 940755, "target": 817458}, {"source": 940755, "target": 817331}, {"source": 940755, "target": 905908}, {"source": 940755, "target": 846909}, {"source": 940755, "target": 817406}, {"source": 940755, "target": 1092928}, {"source": 940755, "target": 988994}, {"source": 940755, "target": 1092036}, {"source": 940755, "target": 846919}, {"source": 940755, "target": 817228}, {"source": 940755, "target": 817101}, {"source": 940755, "target": 885200}, {"source": 940755, "target": 817361}, {"source": 940755, "target": 816977}, {"source": 940755, "target": 1092948}, {"source": 940755, "target": 846933}, {"source": 940755, "target": 1178199}, {"source": 940755, "target": 861655}, {"source": 940755, "target": 885208}, {"source": 940755, "target": 1133787}, {"source": 940755, "target": 989020}, {"source": 940755, "target": 817249}, {"source": 940755, "target": 817256}, {"source": 940755, "target": 940777}, {"source": 940755, "target": 940782}, {"source": 940755, "target": 846964}, {"source": 940755, "target": 940789}, {"source": 940755, "target": 940788}, {"source": 940755, "target": 817022}, {"source": 905908, "target": 1092866}, {"source": 905908, "target": 817154}, {"source": 905908, "target": 817160}, {"source": 905908, "target": 1092873}, {"source": 905908, "target": 1092874}, {"source": 905908, "target": 817163}, {"source": 905908, "target": 988300}, {"source": 905908, "target": 940811}, {"source": 905908, "target": 989078}, {"source": 905908, "target": 817058}, {"source": 905908, "target": 1179043}, {"source": 905908, "target": 817063}, {"source": 905908, "target": 1181233}, {"source": 905908, "target": 817458}, {"source": 905908, "target": 817206}, {"source": 905908, "target": 846905}, {"source": 905908, "target": 817406}, {"source": 905908, "target": 1092928}, {"source": 905908, "target": 1092036}, {"source": 905908, "target": 846919}, {"source": 905908, "target": 817228}, {"source": 905908, "target": 817101}, {"source": 905908, "target": 885200}, {"source": 905908, "target": 816977}, {"source": 905908, "target": 940755}, {"source": 905908, "target": 1092948}, {"source": 905908, "target": 846933}, {"source": 905908, "target": 1178199}, {"source": 905908, "target": 940761}, {"source": 905908, "target": 1133787}, {"source": 905908, "target": 989020}, {"source": 905908, "target": 940782}, {"source": 905908, "target": 846964}, {"source": 905908, "target": 940789}, {"source": 905908, "target": 940788}, {"source": 905908, "target": 817014}, {"source": 905908, "target": 885243}, {"source": 905908, "target": 885244}, {"source": 905908, "target": 817022}, {"source": 940789, "target": 1092866}, {"source": 940789, "target": 817414}, {"source": 940789, "target": 940807}, {"source": 940789, "target": 817160}, {"source": 940789, "target": 1092874}, {"source": 940789, "target": 988300}, {"source": 940789, "target": 940812}, {"source": 940789, "target": 988302}, {"source": 940789, "target": 817293}, {"source": 940789, "target": 817429}, {"source": 940789, "target": 989078}, {"source": 940789, "target": 817047}, {"source": 940789, "target": 817305}, {"source": 940789, "target": 1134112}, {"source": 940789, "target": 1179043}, {"source": 940789, "target": 817315}, {"source": 940789, "target": 817317}, {"source": 940789, "target": 1134115}, {"source": 940789, "target": 817063}, {"source": 940789, "target": 1134118}, {"source": 940789, "target": 817065}, {"source": 940789, "target": 817249}, {"source": 940789, "target": 823344}, {"source": 940789, "target": 1181233}, {"source": 940789, "target": 817330}, {"source": 940789, "target": 958769}, {"source": 940789, "target": 905908}, {"source": 940789, "target": 817206}, {"source": 940789, "target": 817463}, {"source": 940789, "target": 817208}, {"source": 940789, "target": 1092928}, {"source": 940789, "target": 1092036}, {"source": 940789, "target": 817228}, {"source": 940789, "target": 989900}, {"source": 940789, "target": 885200}, {"source": 940789, "target": 905681}, {"source": 940789, "target": 940755}, {"source": 940789, "target": 846931}, {"source": 940789, "target": 987611}, {"source": 940789, "target": 1178199}, {"source": 940789, "target": 846936}, {"source": 940789, "target": 816985}, {"source": 940789, "target": 1133787}, {"source": 940789, "target": 989020}, {"source": 940789, "target": 913627}, {"source": 940789, "target": 816990}, {"source": 940789, "target": 885215}, {"source": 940789, "target": 940768}, {"source": 940789, "target": 885216}, {"source": 940789, "target": 817376}, {"source": 940789, "target": 846947}, {"source": 940789, "target": 989026}, {"source": 940789, "target": 1133916}, {"source": 940789, "target": 1133920}, {"source": 940789, "target": 885239}, {"source": 940789, "target": 817000}, {"source": 940789, "target": 817256}, {"source": 940789, "target": 817258}, {"source": 940789, "target": 816997}, {"source": 940789, "target": 885229}, {"source": 940789, "target": 940782}, {"source": 940789, "target": 817136}, {"source": 940789, "target": 846964}, {"source": 940789, "target": 988788}, {"source": 940789, "target": 905846}, {"source": 940789, "target": 846965}, {"source": 940789, "target": 846968}, {"source": 940789, "target": 885243}, {"source": 940789, "target": 817020}, {"source": 940789, "target": 817022}, {"source": 989078, "target": 1092866}, {"source": 989078, "target": 972549}, {"source": 989078, "target": 957958}, {"source": 989078, "target": 1092874}, {"source": 989078, "target": 988300}, {"source": 989078, "target": 817165}, {"source": 989078, "target": 905364}, {"source": 989078, "target": 817428}, {"source": 989078, "target": 1092887}, {"source": 989078, "target": 989079}, {"source": 989078, "target": 1133853}, {"source": 989078, "target": 817058}, {"source": 989078, "target": 1179043}, {"source": 989078, "target": 987558}, {"source": 989078, "target": 905898}, {"source": 989078, "target": 817455}, {"source": 989078, "target": 1092911}, {"source": 989078, "target": 1181233}, {"source": 989078, "target": 817022}, {"source": 989078, "target": 1092913}, {"source": 989078, "target": 905908}, {"source": 989078, "target": 846898}, {"source": 989078, "target": 823344}, {"source": 989078, "target": 817081}, {"source": 989078, "target": 1092924}, {"source": 989078, "target": 817406}, {"source": 989078, "target": 1092928}, {"source": 989078, "target": 988994}, {"source": 989078, "target": 846915}, {"source": 989078, "target": 1092036}, {"source": 989078, "target": 846919}, {"source": 989078, "target": 816970}, {"source": 989078, "target": 817228}, {"source": 989078, "target": 817101}, {"source": 989078, "target": 885200}, {"source": 989078, "target": 817361}, {"source": 989078, "target": 940755}, {"source": 989078, "target": 885203}, {"source": 989078, "target": 940756}, {"source": 989078, "target": 846933}, {"source": 989078, "target": 1178199}, {"source": 989078, "target": 1092951}, {"source": 989078, "target": 1092948}, {"source": 989078, "target": 1133787}, {"source": 989078, "target": 989020}, {"source": 989078, "target": 817115}, {"source": 989078, "target": 817244}, {"source": 989078, "target": 987099}, {"source": 989078, "target": 987101}, {"source": 989078, "target": 817375}, {"source": 989078, "target": 846949}, {"source": 989078, "target": 846950}, {"source": 989078, "target": 940777}, {"source": 989078, "target": 1133934}, {"source": 989078, "target": 846963}, {"source": 989078, "target": 846964}, {"source": 989078, "target": 940789}, {"source": 989078, "target": 940788}, {"source": 989078, "target": 817141}, {"source": 989078, "target": 817017}, {"source": 989078, "target": 885243}, {"source": 989078, "target": 1133822}, {"source": 1178199, "target": 1092928}, {"source": 1178199, "target": 1092866}, {"source": 1178199, "target": 1179043}, {"source": 1178199, "target": 1092036}, {"source": 1178199, "target": 1092874}, {"source": 1178199, "target": 988300}, {"source": 1178199, "target": 885200}, {"source": 1178199, "target": 1181233}, {"source": 1178199, "target": 940755}, {"source": 1178199, "target": 905908}, {"source": 1178199, "target": 940789}, {"source": 1178199, "target": 989078}, {"source": 1178199, "target": 846964}, {"source": 1178199, "target": 1133787}, {"source": 1178199, "target": 989020}, {"source": 1178199, "target": 817022}, {"source": 846964, "target": 885248}, {"source": 846964, "target": 1092866}, {"source": 846964, "target": 817160}, {"source": 846964, "target": 940809}, {"source": 846964, "target": 1092874}, {"source": 846964, "target": 988300}, {"source": 846964, "target": 1092880}, {"source": 846964, "target": 989078}, {"source": 846964, "target": 987552}, {"source": 846964, "target": 817057}, {"source": 846964, "target": 817058}, {"source": 846964, "target": 1179043}, {"source": 846964, "target": 817063}, {"source": 846964, "target": 987559}, {"source": 846964, "target": 817068}, {"source": 846964, "target": 1179822}, {"source": 846964, "target": 1181233}, {"source": 846964, "target": 817458}, {"source": 846964, "target": 905908}, {"source": 846964, "target": 817463}, {"source": 846964, "target": 816958}, {"source": 846964, "target": 1092928}, {"source": 846964, "target": 846915}, {"source": 846964, "target": 1092036}, {"source": 846964, "target": 954950}, {"source": 846964, "target": 817229}, {"source": 846964, "target": 885200}, {"source": 846964, "target": 817106}, {"source": 846964, "target": 940755}, {"source": 846964, "target": 1092947}, {"source": 846964, "target": 940758}, {"source": 846964, "target": 1178199}, {"source": 846964, "target": 1092951}, {"source": 846964, "target": 817240}, {"source": 846964, "target": 1133787}, {"source": 846964, "target": 989020}, {"source": 846964, "target": 987101}, {"source": 846964, "target": 817121}, {"source": 846964, "target": 817256}, {"source": 846964, "target": 940778}, {"source": 846964, "target": 1133165}, {"source": 846964, "target": 940782}, {"source": 846964, "target": 846963}, {"source": 846964, "target": 940788}, {"source": 846964, "target": 940789}, {"source": 846964, "target": 817270}, {"source": 846964, "target": 846965}, {"source": 846964, "target": 885242}, {"source": 846964, "target": 846973}, {"source": 846964, "target": 817022}, {"source": 1133787, "target": 1092866}, {"source": 1133787, "target": 817160}, {"source": 1133787, "target": 1092874}, {"source": 1133787, "target": 988300}, {"source": 1133787, "target": 989078}, {"source": 1133787, "target": 1179043}, {"source": 1133787, "target": 817063}, {"source": 1133787, "target": 1181233}, {"source": 1133787, "target": 817458}, {"source": 1133787, "target": 905908}, {"source": 1133787, "target": 817406}, {"source": 1133787, "target": 1092928}, {"source": 1133787, "target": 1092036}, {"source": 1133787, "target": 817101}, {"source": 1133787, "target": 885200}, {"source": 1133787, "target": 940755}, {"source": 1133787, "target": 1092948}, {"source": 1133787, "target": 846933}, {"source": 1133787, "target": 1178199}, {"source": 1133787, "target": 989020}, {"source": 1133787, "target": 940782}, {"source": 1133787, "target": 846964}, {"source": 1133787, "target": 940789}, {"source": 1133787, "target": 940788}, {"source": 1133787, "target": 817022}, {"source": 989020, "target": 1092866}, {"source": 989020, "target": 957958}, {"source": 989020, "target": 846983}, {"source": 989020, "target": 1092874}, {"source": 989020, "target": 988300}, {"source": 989020, "target": 817165}, {"source": 989020, "target": 861455}, {"source": 989020, "target": 905364}, {"source": 989020, "target": 817428}, {"source": 989020, "target": 989078}, {"source": 989020, "target": 1092887}, {"source": 989020, "target": 989079}, {"source": 989020, "target": 1133853}, {"source": 989020, "target": 1179043}, {"source": 989020, "target": 987558}, {"source": 989020, "target": 905898}, {"source": 989020, "target": 817455}, {"source": 989020, "target": 1092911}, {"source": 989020, "target": 1181233}, {"source": 989020, "target": 817022}, {"source": 989020, "target": 1092913}, {"source": 989020, "target": 905908}, {"source": 989020, "target": 846898}, {"source": 989020, "target": 1092924}, {"source": 989020, "target": 1092928}, {"source": 989020, "target": 846915}, {"source": 989020, "target": 1092036}, {"source": 989020, "target": 816970}, {"source": 989020, "target": 885200}, {"source": 989020, "target": 817361}, {"source": 989020, "target": 940755}, {"source": 989020, "target": 885203}, {"source": 989020, "target": 940756}, {"source": 989020, "target": 1178199}, {"source": 989020, "target": 1092951}, {"source": 989020, "target": 1133787}, {"source": 989020, "target": 817115}, {"source": 989020, "target": 817244}, {"source": 989020, "target": 987101}, {"source": 989020, "target": 817375}, {"source": 989020, "target": 1133934}, {"source": 989020, "target": 846963}, {"source": 989020, "target": 846964}, {"source": 989020, "target": 940789}, {"source": 989020, "target": 1133822}, {"source": 817022, "target": 817025}, {"source": 817022, "target": 1092866}, {"source": 817022, "target": 817412}, {"source": 817022, "target": 885254}, {"source": 817022, "target": 846983}, {"source": 817022, "target": 817160}, {"source": 817022, "target": 1092874}, {"source": 817022, "target": 988300}, {"source": 817022, "target": 817044}, {"source": 817022, "target": 989078}, {"source": 817022, "target": 817437}, {"source": 817022, "target": 817058}, {"source": 817022, "target": 1179043}, {"source": 817022, "target": 817315}, {"source": 817022, "target": 817063}, {"source": 817022, "target": 1181233}, {"source": 817022, "target": 817458}, {"source": 817022, "target": 905908}, {"source": 817022, "target": 1092928}, {"source": 817022, "target": 817344}, {"source": 817022, "target": 1092036}, {"source": 817022, "target": 846919}, {"source": 817022, "target": 861639}, {"source": 817022, "target": 817228}, {"source": 817022, "target": 817101}, {"source": 817022, "target": 885200}, {"source": 817022, "target": 940755}, {"source": 817022, "target": 1092948}, {"source": 817022, "target": 846933}, {"source": 817022, "target": 1178199}, {"source": 817022, "target": 1133787}, {"source": 817022, "target": 989020}, {"source": 817022, "target": 817115}, {"source": 817022, "target": 816989}, {"source": 817022, "target": 817126}, {"source": 817022, "target": 940779}, {"source": 817022, "target": 817133}, {"source": 817022, "target": 940782}, {"source": 817022, "target": 817136}, {"source": 817022, "target": 846964}, {"source": 817022, "target": 940789}, {"source": 817022, "target": 940788}, {"source": 817022, "target": 817406}, {"source": 1181091, "target": 1133988}, {"source": 1181091, "target": 885254}, {"source": 1181091, "target": 885256}, {"source": 1181091, "target": 1092873}, {"source": 1181091, "target": 816938}, {"source": 1181091, "target": 988875}, {"source": 1181091, "target": 1178858}, {"source": 1181091, "target": 1134024}, {"source": 1181091, "target": 1092872}, {"source": 1181091, "target": 987934}, {"source": 1181091, "target": 1179536}, {"source": 1181091, "target": 940785}, {"source": 1181091, "target": 1178033}, {"source": 1181091, "target": 1180179}, {"source": 1181091, "target": 817204}, {"source": 1181091, "target": 987933}, {"source": 1181091, "target": 987102}, {"source": 1133988, "target": 885254}, {"source": 1133988, "target": 885256}, {"source": 1133988, "target": 1092873}, {"source": 1133988, "target": 1092872}, {"source": 1133988, "target": 1179536}, {"source": 1133988, "target": 1180179}, {"source": 1133988, "target": 987933}, {"source": 1133988, "target": 987934}, {"source": 1133988, "target": 1181091}, {"source": 1133988, "target": 816938}, {"source": 1133988, "target": 817453}, {"source": 1133988, "target": 1178033}, {"source": 1133988, "target": 817204}, {"source": 1133988, "target": 816958}, {"source": 1133988, "target": 846915}, {"source": 1133988, "target": 1134024}, {"source": 1133988, "target": 988875}, {"source": 1133988, "target": 846933}, {"source": 1133988, "target": 816989}, {"source": 1133988, "target": 987102}, {"source": 1133988, "target": 817121}, {"source": 1133988, "target": 1178858}, {"source": 1133988, "target": 940779}, {"source": 1133988, "target": 940785}, {"source": 885254, "target": 940801}, {"source": 885254, "target": 885256}, {"source": 885254, "target": 1092873}, {"source": 885254, "target": 1092872}, {"source": 885254, "target": 817160}, {"source": 885254, "target": 905866}, {"source": 885254, "target": 940814}, {"source": 885254, "target": 817038}, {"source": 885254, "target": 1179536}, {"source": 885254, "target": 1180179}, {"source": 885254, "target": 817173}, {"source": 885254, "target": 817047}, {"source": 885254, "target": 987933}, {"source": 885254, "target": 987934}, {"source": 885254, "target": 1181091}, {"source": 885254, "target": 1133988}, {"source": 885254, "target": 817063}, {"source": 885254, "target": 816938}, {"source": 885254, "target": 817453}, {"source": 885254, "target": 1178033}, {"source": 885254, "target": 817458}, {"source": 885254, "target": 817204}, {"source": 885254, "target": 816958}, {"source": 885254, "target": 846915}, {"source": 885254, "target": 988996}, {"source": 885254, "target": 1134024}, {"source": 885254, "target": 988875}, {"source": 885254, "target": 846933}, {"source": 885254, "target": 817115}, {"source": 885254, "target": 816989}, {"source": 885254, "target": 987102}, {"source": 885254, "target": 817121}, {"source": 885254, "target": 817125}, {"source": 885254, "target": 1178858}, {"source": 885254, "target": 940779}, {"source": 885254, "target": 817133}, {"source": 885254, "target": 817136}, {"source": 885254, "target": 940785}, {"source": 885254, "target": 817022}, {"source": 885256, "target": 817280}, {"source": 885256, "target": 940805}, {"source": 885256, "target": 885254}, {"source": 885256, "target": 1092872}, {"source": 885256, "target": 1092873}, {"source": 885256, "target": 1179536}, {"source": 885256, "target": 1180179}, {"source": 885256, "target": 817044}, {"source": 885256, "target": 817428}, {"source": 885256, "target": 817172}, {"source": 885256, "target": 817180}, {"source": 885256, "target": 987933}, {"source": 885256, "target": 987934}, {"source": 885256, "target": 957469}, {"source": 885256, "target": 817058}, {"source": 885256, "target": 1181091}, {"source": 885256, "target": 1133988}, {"source": 885256, "target": 1133989}, {"source": 885256, "target": 816938}, {"source": 885256, "target": 817196}, {"source": 885256, "target": 817453}, {"source": 885256, "target": 817069}, {"source": 885256, "target": 817455}, {"source": 885256, "target": 1178033}, {"source": 885256, "target": 1134001}, {"source": 885256, "target": 817458}, {"source": 885256, "target": 817204}, {"source": 885256, "target": 817332}, {"source": 885256, "target": 861639}, {"source": 885256, "target": 1134024}, {"source": 885256, "target": 817351}, {"source": 885256, "target": 988875}, {"source": 885256, "target": 817229}, {"source": 885256, "target": 989007}, {"source": 885256, "target": 846927}, {"source": 885256, "target": 817108}, {"source": 885256, "target": 816981}, {"source": 885256, "target": 989017}, {"source": 885256, "target": 817244}, {"source": 885256, "target": 816989}, {"source": 885256, "target": 987102}, {"source": 885256, "target": 817376}, {"source": 885256, "target": 989030}, {"source": 885256, "target": 817127}, {"source": 885256, "target": 940776}, {"source": 885256, "target": 1178858}, {"source": 885256, "target": 998636}, {"source": 885256, "target": 940785}, {"source": 885256, "target": 817012}, {"source": 885256, "target": 817141}, {"source": 885256, "target": 817020}, {"source": 885256, "target": 817279}, {"source": 1092873, "target": 885254}, {"source": 1092873, "target": 885256}, {"source": 1092873, "target": 1092872}, {"source": 1092873, "target": 817163}, {"source": 1092873, "target": 940811}, {"source": 1092873, "target": 940814}, {"source": 1092873, "target": 1179536}, {"source": 1092873, "target": 1180179}, {"source": 1092873, "target": 987933}, {"source": 1092873, "target": 987934}, {"source": 1092873, "target": 1181091}, {"source": 1092873, "target": 1133988}, {"source": 1092873, "target": 817063}, {"source": 1092873, "target": 816938}, {"source": 1092873, "target": 817453}, {"source": 1092873, "target": 1178033}, {"source": 1092873, "target": 817204}, {"source": 1092873, "target": 905908}, {"source": 1092873, "target": 817206}, {"source": 1092873, "target": 846905}, {"source": 1092873, "target": 816958}, {"source": 1092873, "target": 846915}, {"source": 1092873, "target": 1134024}, {"source": 1092873, "target": 988875}, {"source": 1092873, "target": 817228}, {"source": 1092873, "target": 816977}, {"source": 1092873, "target": 846933}, {"source": 1092873, "target": 816989}, {"source": 1092873, "target": 987102}, {"source": 1092873, "target": 817121}, {"source": 1092873, "target": 1178858}, {"source": 1092873, "target": 940779}, {"source": 1092873, "target": 940785}, {"source": 1092873, "target": 885244}, {"source": 816938, "target": 817280}, {"source": 816938, "target": 885254}, {"source": 816938, "target": 817287}, {"source": 816938, "target": 885256}, {"source": 816938, "target": 1092873}, {"source": 816938, "target": 1092872}, {"source": 816938, "target": 1136397}, {"source": 816938, "target": 988301}, {"source": 816938, "target": 817165}, {"source": 816938, "target": 1179536}, {"source": 816938, "target": 817296}, {"source": 816938, "target": 1180179}, {"source": 816938, "target": 817172}, {"source": 816938, "target": 817305}, {"source": 816938, "target": 817307}, {"source": 816938, "target": 817180}, {"source": 816938, "target": 987933}, {"source": 816938, "target": 987934}, {"source": 816938, "target": 957469}, {"source": 816938, "target": 817437}, {"source": 816938, "target": 1181091}, {"source": 816938, "target": 1133988}, {"source": 816938, "target": 817315}, {"source": 816938, "target": 817317}, {"source": 816938, "target": 817191}, {"source": 816938, "target": 940841}, {"source": 816938, "target": 817453}, {"source": 816938, "target": 1178033}, {"source": 816938, "target": 817074}, {"source": 816938, "target": 817204}, {"source": 816938, "target": 816958}, {"source": 816938, "target": 988994}, {"source": 816938, "target": 846915}, {"source": 816938, "target": 817091}, {"source": 816938, "target": 988996}, {"source": 816938, "target": 1134024}, {"source": 816938, "target": 817354}, {"source": 816938, "target": 988875}, {"source": 816938, "target": 816970}, {"source": 816938, "target": 817101}, {"source": 816938, "target": 817361}, {"source": 816938, "target": 817108}, {"source": 816938, "target": 846933}, {"source": 816938, "target": 885206}, {"source": 816938, "target": 817109}, {"source": 816938, "target": 816989}, {"source": 816938, "target": 987102}, {"source": 816938, "target": 885214}, {"source": 816938, "target": 817119}, {"source": 816938, "target": 817121}, {"source": 816938, "target": 885217}, {"source": 816938, "target": 817376}, {"source": 816938, "target": 989030}, {"source": 816938, "target": 817256}, {"source": 816938, "target": 1178858}, {"source": 816938, "target": 940779}, {"source": 816938, "target": 940785}, {"source": 816938, "target": 846968}, {"source": 816938, "target": 940794}, {"source": 816938, "target": 940798}, {"source": 988875, "target": 1181091}, {"source": 988875, "target": 1133988}, {"source": 988875, "target": 885254}, {"source": 988875, "target": 885256}, {"source": 988875, "target": 1092873}, {"source": 988875, "target": 816938}, {"source": 988875, "target": 1178858}, {"source": 988875, "target": 1134024}, {"source": 988875, "target": 1092872}, {"source": 988875, "target": 987934}, {"source": 988875, "target": 1179536}, {"source": 988875, "target": 940785}, {"source": 988875, "target": 1178033}, {"source": 988875, "target": 1180179}, {"source": 988875, "target": 817204}, {"source": 988875, "target": 987933}, {"source": 988875, "target": 987102}, {"source": 1178858, "target": 1181091}, {"source": 1178858, "target": 1133988}, {"source": 1178858, "target": 885254}, {"source": 1178858, "target": 885256}, {"source": 1178858, "target": 1092873}, {"source": 1178858, "target": 816938}, {"source": 1178858, "target": 988875}, {"source": 1178858, "target": 1134024}, {"source": 1178858, "target": 1092872}, {"source": 1178858, "target": 987934}, {"source": 1178858, "target": 1179536}, {"source": 1178858, "target": 940785}, {"source": 1178858, "target": 1178033}, {"source": 1178858, "target": 1180179}, {"source": 1178858, "target": 817204}, {"source": 1178858, "target": 987933}, {"source": 1178858, "target": 987102}, {"source": 1134024, "target": 885254}, {"source": 1134024, "target": 885256}, {"source": 1134024, "target": 1092873}, {"source": 1134024, "target": 1092872}, {"source": 1134024, "target": 1179536}, {"source": 1134024, "target": 1180179}, {"source": 1134024, "target": 987933}, {"source": 1134024, "target": 987934}, {"source": 1134024, "target": 1181091}, {"source": 1134024, "target": 1133988}, {"source": 1134024, "target": 816938}, {"source": 1134024, "target": 817453}, {"source": 1134024, "target": 1178033}, {"source": 1134024, "target": 817204}, {"source": 1134024, "target": 816958}, {"source": 1134024, "target": 846915}, {"source": 1134024, "target": 988875}, {"source": 1134024, "target": 846933}, {"source": 1134024, "target": 816989}, {"source": 1134024, "target": 987102}, {"source": 1134024, "target": 817121}, {"source": 1134024, "target": 1178858}, {"source": 1134024, "target": 940779}, {"source": 1134024, "target": 940785}, {"source": 1092872, "target": 885254}, {"source": 1092872, "target": 885256}, {"source": 1092872, "target": 1092873}, {"source": 1092872, "target": 940814}, {"source": 1092872, "target": 861455}, {"source": 1092872, "target": 1179536}, {"source": 1092872, "target": 1180179}, {"source": 1092872, "target": 989079}, {"source": 1092872, "target": 987933}, {"source": 1092872, "target": 987934}, {"source": 1092872, "target": 1181091}, {"source": 1092872, "target": 1133988}, {"source": 1092872, "target": 817063}, {"source": 1092872, "target": 816938}, {"source": 1092872, "target": 817453}, {"source": 1092872, "target": 1178033}, {"source": 1092872, "target": 846898}, {"source": 1092872, "target": 817204}, {"source": 1092872, "target": 816958}, {"source": 1092872, "target": 846915}, {"source": 1092872, "target": 1134024}, {"source": 1092872, "target": 954825}, {"source": 1092872, "target": 988875}, {"source": 1092872, "target": 885203}, {"source": 1092872, "target": 940756}, {"source": 1092872, "target": 846933}, {"source": 1092872, "target": 816989}, {"source": 1092872, "target": 987102}, {"source": 1092872, "target": 987101}, {"source": 1092872, "target": 817375}, {"source": 1092872, "target": 817121}, {"source": 1092872, "target": 1178858}, {"source": 1092872, "target": 940779}, {"source": 1092872, "target": 940785}, {"source": 1092872, "target": 817147}, {"source": 1092872, "target": 817406}, {"source": 1179536, "target": 1181091}, {"source": 1179536, "target": 1133988}, {"source": 1179536, "target": 885254}, {"source": 1179536, "target": 885256}, {"source": 1179536, "target": 1092873}, {"source": 1179536, "target": 816938}, {"source": 1179536, "target": 988875}, {"source": 1179536, "target": 1178858}, {"source": 1179536, "target": 1134024}, {"source": 1179536, "target": 1092872}, {"source": 1179536, "target": 987934}, {"source": 1179536, "target": 940785}, {"source": 1179536, "target": 1178033}, {"source": 1179536, "target": 1180179}, {"source": 1179536, "target": 817204}, {"source": 1179536, "target": 987933}, {"source": 1179536, "target": 987102}, {"source": 940785, "target": 940801}, {"source": 940785, "target": 885254}, {"source": 940785, "target": 885256}, {"source": 940785, "target": 1092873}, {"source": 940785, "target": 1092872}, {"source": 940785, "target": 817160}, {"source": 940785, "target": 905866}, {"source": 940785, "target": 940814}, {"source": 940785, "target": 817038}, {"source": 940785, "target": 1179536}, {"source": 940785, "target": 1180179}, {"source": 940785, "target": 817173}, {"source": 940785, "target": 817047}, {"source": 940785, "target": 987933}, {"source": 940785, "target": 987934}, {"source": 940785, "target": 1181091}, {"source": 940785, "target": 1133988}, {"source": 940785, "target": 817063}, {"source": 940785, "target": 816938}, {"source": 940785, "target": 817453}, {"source": 940785, "target": 1178033}, {"source": 940785, "target": 817458}, {"source": 940785, "target": 817204}, {"source": 940785, "target": 816958}, {"source": 940785, "target": 846915}, {"source": 940785, "target": 988996}, {"source": 940785, "target": 1134024}, {"source": 940785, "target": 988875}, {"source": 940785, "target": 846933}, {"source": 940785, "target": 816989}, {"source": 940785, "target": 987102}, {"source": 940785, "target": 817121}, {"source": 940785, "target": 817125}, {"source": 940785, "target": 1178858}, {"source": 940785, "target": 940779}, {"source": 1178033, "target": 1181091}, {"source": 1178033, "target": 1133988}, {"source": 1178033, "target": 885254}, {"source": 1178033, "target": 885256}, {"source": 1178033, "target": 1092873}, {"source": 1178033, "target": 816938}, {"source": 1178033, "target": 988875}, {"source": 1178033, "target": 1178858}, {"source": 1178033, "target": 1134024}, {"source": 1178033, "target": 1092872}, {"source": 1178033, "target": 987934}, {"source": 1178033, "target": 1179536}, {"source": 1178033, "target": 940785}, {"source": 1178033, "target": 1180179}, {"source": 1178033, "target": 817204}, {"source": 1178033, "target": 987933}, {"source": 1178033, "target": 987102}, {"source": 1180179, "target": 1181091}, {"source": 1180179, "target": 1133988}, {"source": 1180179, "target": 885254}, {"source": 1180179, "target": 885256}, {"source": 1180179, "target": 1092873}, {"source": 1180179, "target": 816938}, {"source": 1180179, "target": 988875}, {"source": 1180179, "target": 1178858}, {"source": 1180179, "target": 1134024}, {"source": 1180179, "target": 1092872}, {"source": 1180179, "target": 987934}, {"source": 1180179, "target": 1179536}, {"source": 1180179, "target": 940785}, {"source": 1180179, "target": 1178033}, {"source": 1180179, "target": 817204}, {"source": 1180179, "target": 987933}, {"source": 1180179, "target": 987102}, {"source": 817204, "target": 817410}, {"source": 817204, "target": 885254}, {"source": 817204, "target": 885256}, {"source": 817204, "target": 1092873}, {"source": 817204, "target": 1092872}, {"source": 817204, "target": 817160}, {"source": 817204, "target": 940809}, {"source": 817204, "target": 940814}, {"source": 817204, "target": 817422}, {"source": 817204, "target": 1179536}, {"source": 817204, "target": 988302}, {"source": 817204, "target": 1180179}, {"source": 817204, "target": 817044}, {"source": 817204, "target": 817173}, {"source": 817204, "target": 905877}, {"source": 817204, "target": 817047}, {"source": 817204, "target": 987933}, {"source": 817204, "target": 987934}, {"source": 817204, "target": 817442}, {"source": 817204, "target": 1181091}, {"source": 817204, "target": 1133988}, {"source": 817204, "target": 817063}, {"source": 817204, "target": 816938}, {"source": 817204, "target": 817453}, {"source": 817204, "target": 1178033}, {"source": 817204, "target": 816958}, {"source": 817204, "target": 817218}, {"source": 817204, "target": 846915}, {"source": 817204, "target": 817351}, {"source": 817204, "target": 1134024}, {"source": 817204, "target": 817354}, {"source": 817204, "target": 988875}, {"source": 817204, "target": 846933}, {"source": 817204, "target": 817109}, {"source": 817204, "target": 885207}, {"source": 817204, "target": 816989}, {"source": 817204, "target": 987102}, {"source": 817204, "target": 817121}, {"source": 817204, "target": 846947}, {"source": 817204, "target": 940774}, {"source": 817204, "target": 1178858}, {"source": 817204, "target": 940779}, {"source": 817204, "target": 940785}, {"source": 817204, "target": 817017}, {"source": 987102, "target": 940801}, {"source": 987102, "target": 885254}, {"source": 987102, "target": 885256}, {"source": 987102, "target": 1092873}, {"source": 987102, "target": 1092872}, {"source": 987102, "target": 817160}, {"source": 987102, "target": 940814}, {"source": 987102, "target": 817038}, {"source": 987102, "target": 1179536}, {"source": 987102, "target": 1180179}, {"source": 987102, "target": 817173}, {"source": 987102, "target": 817047}, {"source": 987102, "target": 987933}, {"source": 987102, "target": 987934}, {"source": 987102, "target": 1181091}, {"source": 987102, "target": 1133988}, {"source": 987102, "target": 817063}, {"source": 987102, "target": 816938}, {"source": 987102, "target": 817453}, {"source": 987102, "target": 1178033}, {"source": 987102, "target": 817458}, {"source": 987102, "target": 817204}, {"source": 987102, "target": 816958}, {"source": 987102, "target": 846915}, {"source": 987102, "target": 988996}, {"source": 987102, "target": 1134024}, {"source": 987102, "target": 988875}, {"source": 987102, "target": 846933}, {"source": 987102, "target": 816989}, {"source": 987102, "target": 817121}, {"source": 987102, "target": 1178858}, {"source": 987102, "target": 940779}, {"source": 987102, "target": 940785}, {"source": 987933, "target": 817410}, {"source": 987933, "target": 885254}, {"source": 987933, "target": 972550}, {"source": 987933, "target": 885256}, {"source": 987933, "target": 1092873}, {"source": 987933, "target": 1092872}, {"source": 987933, "target": 940809}, {"source": 987933, "target": 940807}, {"source": 987933, "target": 940812}, {"source": 987933, "target": 817422}, {"source": 987933, "target": 817163}, {"source": 987933, "target": 1179536}, {"source": 987933, "target": 1180179}, {"source": 987933, "target": 817044}, {"source": 987933, "target": 817307}, {"source": 987933, "target": 987934}, {"source": 987933, "target": 1391264}, {"source": 987933, "target": 817442}, {"source": 987933, "target": 1181091}, {"source": 987933, "target": 1133988}, {"source": 987933, "target": 817191}, {"source": 987933, "target": 817063}, {"source": 987933, "target": 816938}, {"source": 987933, "target": 846893}, {"source": 987933, "target": 1178033}, {"source": 987933, "target": 951089}, {"source": 987933, "target": 817204}, {"source": 987933, "target": 817208}, {"source": 987933, "target": 816958}, {"source": 987933, "target": 1092929}, {"source": 987933, "target": 1092930}, {"source": 987933, "target": 846915}, {"source": 987933, "target": 846918}, {"source": 987933, "target": 1134024}, {"source": 987933, "target": 817354}, {"source": 987933, "target": 988875}, {"source": 987933, "target": 817357}, {"source": 987933, "target": 846933}, {"source": 987933, "target": 940760}, {"source": 987933, "target": 987102}, {"source": 987933, "target": 987872}, {"source": 987933, "target": 817121}, {"source": 987933, "target": 846947}, {"source": 987933, "target": 940774}, {"source": 987933, "target": 817000}, {"source": 987933, "target": 1178858}, {"source": 987933, "target": 940779}, {"source": 987933, "target": 940785}, {"source": 987934, "target": 940801}, {"source": 987934, "target": 885254}, {"source": 987934, "target": 885256}, {"source": 987934, "target": 1092873}, {"source": 987934, "target": 1092872}, {"source": 987934, "target": 817160}, {"source": 987934, "target": 940814}, {"source": 987934, "target": 817038}, {"source": 987934, "target": 1179536}, {"source": 987934, "target": 1180179}, {"source": 987934, "target": 817173}, {"source": 987934, "target": 817047}, {"source": 987934, "target": 987933}, {"source": 987934, "target": 1181091}, {"source": 987934, "target": 1133988}, {"source": 987934, "target": 817063}, {"source": 987934, "target": 816938}, {"source": 987934, "target": 817453}, {"source": 987934, "target": 1178033}, {"source": 987934, "target": 817458}, {"source": 987934, "target": 817204}, {"source": 987934, "target": 816958}, {"source": 987934, "target": 846915}, {"source": 987934, "target": 988996}, {"source": 987934, "target": 1134024}, {"source": 987934, "target": 988875}, {"source": 987934, "target": 846933}, {"source": 987934, "target": 816989}, {"source": 987934, "target": 987102}, {"source": 987934, "target": 817121}, {"source": 987934, "target": 1178858}, {"source": 987934, "target": 940779}, {"source": 987934, "target": 940785}, {"source": 1133825, "target": 885251}, {"source": 1133825, "target": 972550}, {"source": 1133825, "target": 817287}, {"source": 1133825, "target": 988301}, {"source": 1133825, "target": 1133847}, {"source": 1133825, "target": 1409308}, {"source": 1133825, "target": 1391264}, {"source": 1133825, "target": 957474}, {"source": 1133825, "target": 940841}, {"source": 1133825, "target": 817091}, {"source": 1133825, "target": 988996}, {"source": 1133825, "target": 817230}, {"source": 1133825, "target": 1092943}, {"source": 1133825, "target": 1178575}, {"source": 1133825, "target": 1181394}, {"source": 1133825, "target": 1092950}, {"source": 1133825, "target": 1191132}, {"source": 1133825, "target": 989021}, {"source": 1133825, "target": 846947}, {"source": 1133825, "target": 1133924}, {"source": 1133825, "target": 1178085}, {"source": 1133825, "target": 989030}, {"source": 1133825, "target": 1133158}, {"source": 1133825, "target": 989029}, {"source": 1133825, "target": 940776}, {"source": 1133825, "target": 903020}, {"source": 1133825, "target": 1133812}, {"source": 1133825, "target": 1133815}, {"source": 1133825, "target": 940794}, {"source": 1133825, "target": 885243}, {"source": 1133825, "target": 1182205}, {"source": 972550, "target": 1133825}, {"source": 972550, "target": 817154}, {"source": 972550, "target": 885251}, {"source": 972550, "target": 817410}, {"source": 972550, "target": 817287}, {"source": 972550, "target": 988301}, {"source": 972550, "target": 817165}, {"source": 972550, "target": 817296}, {"source": 972550, "target": 1133847}, {"source": 972550, "target": 1409308}, {"source": 972550, "target": 987933}, {"source": 972550, "target": 1391264}, {"source": 972550, "target": 957474}, {"source": 972550, "target": 817191}, {"source": 972550, "target": 940841}, {"source": 972550, "target": 951089}, {"source": 972550, "target": 996152}, {"source": 972550, "target": 817344}, {"source": 972550, "target": 817091}, {"source": 972550, "target": 988996}, {"source": 972550, "target": 846915}, {"source": 972550, "target": 846918}, {"source": 972550, "target": 817354}, {"source": 972550, "target": 817357}, {"source": 972550, "target": 817230}, {"source": 972550, "target": 1092943}, {"source": 972550, "target": 1178575}, {"source": 972550, "target": 1181394}, {"source": 972550, "target": 1092950}, {"source": 972550, "target": 885206}, {"source": 972550, "target": 940760}, {"source": 972550, "target": 1191132}, {"source": 972550, "target": 989021}, {"source": 972550, "target": 846947}, {"source": 972550, "target": 1133924}, {"source": 972550, "target": 1178085}, {"source": 972550, "target": 989030}, {"source": 972550, "target": 1133158}, {"source": 972550, "target": 989029}, {"source": 972550, "target": 940776}, {"source": 972550, "target": 940774}, {"source": 972550, "target": 903020}, {"source": 972550, "target": 1133812}, {"source": 972550, "target": 1133815}, {"source": 972550, "target": 940794}, {"source": 972550, "target": 885243}, {"source": 972550, "target": 1182205}, {"source": 972550, "target": 940798}, {"source": 988301, "target": 1133825}, {"source": 988301, "target": 817154}, {"source": 988301, "target": 885251}, {"source": 988301, "target": 972550}, {"source": 988301, "target": 817287}, {"source": 988301, "target": 817165}, {"source": 988301, "target": 817296}, {"source": 988301, "target": 1133847}, {"source": 988301, "target": 817307}, {"source": 988301, "target": 1409308}, {"source": 988301, "target": 1391264}, {"source": 988301, "target": 957474}, {"source": 988301, "target": 817191}, {"source": 988301, "target": 940841}, {"source": 988301, "target": 816938}, {"source": 988301, "target": 996152}, {"source": 988301, "target": 817344}, {"source": 988301, "target": 817091}, {"source": 988301, "target": 988996}, {"source": 988301, "target": 817354}, {"source": 988301, "target": 817101}, {"source": 988301, "target": 817230}, {"source": 988301, "target": 1092943}, {"source": 988301, "target": 1178575}, {"source": 988301, "target": 1181394}, {"source": 988301, "target": 1092950}, {"source": 988301, "target": 885206}, {"source": 988301, "target": 1191132}, {"source": 988301, "target": 989021}, {"source": 988301, "target": 817121}, {"source": 988301, "target": 846947}, {"source": 988301, "target": 1133924}, {"source": 988301, "target": 1178085}, {"source": 988301, "target": 989030}, {"source": 988301, "target": 1133158}, {"source": 988301, "target": 989029}, {"source": 988301, "target": 940776}, {"source": 988301, "target": 903020}, {"source": 988301, "target": 1133812}, {"source": 988301, "target": 1133815}, {"source": 988301, "target": 940794}, {"source": 988301, "target": 885243}, {"source": 988301, "target": 1182205}, {"source": 988301, "target": 940798}, {"source": 1133847, "target": 1133825}, {"source": 1133847, "target": 885251}, {"source": 1133847, "target": 972550}, {"source": 1133847, "target": 817287}, {"source": 1133847, "target": 988301}, {"source": 1133847, "target": 1409308}, {"source": 1133847, "target": 1391264}, {"source": 1133847, "target": 957474}, {"source": 1133847, "target": 940841}, {"source": 1133847, "target": 817091}, {"source": 1133847, "target": 988996}, {"source": 1133847, "target": 817230}, {"source": 1133847, "target": 1092943}, {"source": 1133847, "target": 1178575}, {"source": 1133847, "target": 1181394}, {"source": 1133847, "target": 1092950}, {"source": 1133847, "target": 1191132}, {"source": 1133847, "target": 989021}, {"source": 1133847, "target": 846947}, {"source": 1133847, "target": 1133924}, {"source": 1133847, "target": 1178085}, {"source": 1133847, "target": 989030}, {"source": 1133847, "target": 1133158}, {"source": 1133847, "target": 989029}, {"source": 1133847, "target": 940776}, {"source": 1133847, "target": 903020}, {"source": 1133847, "target": 1133812}, {"source": 1133847, "target": 1133815}, {"source": 1133847, "target": 940794}, {"source": 1133847, "target": 885243}, {"source": 1133847, "target": 1182205}, {"source": 957474, "target": 1133825}, {"source": 957474, "target": 817154}, {"source": 957474, "target": 885251}, {"source": 957474, "target": 972550}, {"source": 957474, "target": 817287}, {"source": 957474, "target": 988301}, {"source": 957474, "target": 817165}, {"source": 957474, "target": 1133847}, {"source": 957474, "target": 1409308}, {"source": 957474, "target": 1391264}, {"source": 957474, "target": 940841}, {"source": 957474, "target": 996152}, {"source": 957474, "target": 817344}, {"source": 957474, "target": 817091}, {"source": 957474, "target": 988996}, {"source": 957474, "target": 817230}, {"source": 957474, "target": 1092943}, {"source": 957474, "target": 1178575}, {"source": 957474, "target": 1181394}, {"source": 957474, "target": 1092950}, {"source": 957474, "target": 885206}, {"source": 957474, "target": 1191132}, {"source": 957474, "target": 989021}, {"source": 957474, "target": 846947}, {"source": 957474, "target": 1133924}, {"source": 957474, "target": 1178085}, {"source": 957474, "target": 989030}, {"source": 957474, "target": 1133158}, {"source": 957474, "target": 989029}, {"source": 957474, "target": 940776}, {"source": 957474, "target": 903020}, {"source": 957474, "target": 1133812}, {"source": 957474, "target": 1133815}, {"source": 957474, "target": 940794}, {"source": 957474, "target": 885243}, {"source": 957474, "target": 1182205}, {"source": 957474, "target": 940798}, {"source": 940841, "target": 817280}, {"source": 940841, "target": 1133825}, {"source": 940841, "target": 817154}, {"source": 940841, "target": 885251}, {"source": 940841, "target": 972550}, {"source": 940841, "target": 817287}, {"source": 940841, "target": 988301}, {"source": 940841, "target": 817165}, {"source": 940841, "target": 817296}, {"source": 940841, "target": 1133847}, {"source": 940841, "target": 817307}, {"source": 940841, "target": 1409308}, {"source": 940841, "target": 817437}, {"source": 940841, "target": 1391264}, {"source": 940841, "target": 957474}, {"source": 940841, "target": 817315}, {"source": 940841, "target": 817191}, {"source": 940841, "target": 816938}, {"source": 940841, "target": 996152}, {"source": 940841, "target": 817344}, {"source": 940841, "target": 817091}, {"source": 940841, "target": 988996}, {"source": 940841, "target": 817354}, {"source": 940841, "target": 817101}, {"source": 940841, "target": 817230}, {"source": 940841, "target": 1092943}, {"source": 940841, "target": 1178575}, {"source": 940841, "target": 817361}, {"source": 940841, "target": 1181394}, {"source": 940841, "target": 817108}, {"source": 940841, "target": 1092950}, {"source": 940841, "target": 885206}, {"source": 940841, "target": 1191132}, {"source": 940841, "target": 989021}, {"source": 940841, "target": 817119}, {"source": 940841, "target": 817121}, {"source": 940841, "target": 846947}, {"source": 940841, "target": 1133924}, {"source": 940841, "target": 1178085}, {"source": 940841, "target": 989030}, {"source": 940841, "target": 1133158}, {"source": 940841, "target": 989029}, {"source": 940841, "target": 940776}, {"source": 940841, "target": 903020}, {"source": 940841, "target": 1133812}, {"source": 940841, "target": 1133815}, {"source": 940841, "target": 940794}, {"source": 940841, "target": 885243}, {"source": 940841, "target": 1182205}, {"source": 940841, "target": 940798}, {"source": 817091, "target": 1133825}, {"source": 817091, "target": 817154}, {"source": 817091, "target": 885251}, {"source": 817091, "target": 1092867}, {"source": 817091, "target": 885252}, {"source": 817091, "target": 972550}, {"source": 817091, "target": 817287}, {"source": 817091, "target": 817159}, {"source": 817091, "target": 817160}, {"source": 817091, "target": 817034}, {"source": 817091, "target": 988301}, {"source": 817091, "target": 817038}, {"source": 817091, "target": 940814}, {"source": 817091, "target": 817293}, {"source": 817091, "target": 1133847}, {"source": 817091, "target": 817175}, {"source": 817091, "target": 817047}, {"source": 817091, "target": 1409308}, {"source": 817091, "target": 1391264}, {"source": 817091, "target": 957474}, {"source": 817091, "target": 817147}, {"source": 817091, "target": 940841}, {"source": 817091, "target": 816938}, {"source": 817091, "target": 846893}, {"source": 817091, "target": 817455}, {"source": 817091, "target": 905919}, {"source": 817091, "target": 988994}, {"source": 817091, "target": 988996}, {"source": 817091, "target": 817351}, {"source": 817091, "target": 817354}, {"source": 817091, "target": 817230}, {"source": 817091, "target": 1092943}, {"source": 817091, "target": 1178575}, {"source": 817091, "target": 1181394}, {"source": 817091, "target": 817236}, {"source": 817091, "target": 1092950}, {"source": 817091, "target": 817111}, {"source": 817091, "target": 885206}, {"source": 817091, "target": 817240}, {"source": 817091, "target": 987611}, {"source": 817091, "target": 1191132}, {"source": 817091, "target": 989021}, {"source": 817091, "target": 885214}, {"source": 817091, "target": 885216}, {"source": 817091, "target": 885217}, {"source": 817091, "target": 846946}, {"source": 817091, "target": 846947}, {"source": 817091, "target": 1133924}, {"source": 817091, "target": 1178085}, {"source": 817091, "target": 989030}, {"source": 817091, "target": 1133158}, {"source": 817091, "target": 989029}, {"source": 817091, "target": 940776}, {"source": 817091, "target": 816997}, {"source": 817091, "target": 817126}, {"source": 817091, "target": 903020}, {"source": 817091, "target": 1133812}, {"source": 817091, "target": 817014}, {"source": 817091, "target": 1133815}, {"source": 817091, "target": 940794}, {"source": 817091, "target": 885243}, {"source": 817091, "target": 1182205}, {"source": 1092943, "target": 1133825}, {"source": 1092943, "target": 817154}, {"source": 1092943, "target": 885251}, {"source": 1092943, "target": 817412}, {"source": 1092943, "target": 972549}, {"source": 1092943, "target": 972550}, {"source": 1092943, "target": 817287}, {"source": 1092943, "target": 846983}, {"source": 1092943, "target": 988301}, {"source": 1092943, "target": 1133847}, {"source": 1092943, "target": 817049}, {"source": 1092943, "target": 1178394}, {"source": 1092943, "target": 1409308}, {"source": 1092943, "target": 989085}, {"source": 1092943, "target": 957474}, {"source": 1092943, "target": 940841}, {"source": 1092943, "target": 1092906}, {"source": 1092943, "target": 817069}, {"source": 1092943, "target": 817205}, {"source": 1092943, "target": 817081}, {"source": 1092943, "target": 1092926}, {"source": 1092943, "target": 817091}, {"source": 1092943, "target": 988996}, {"source": 1092943, "target": 817230}, {"source": 1092943, "target": 1178575}, {"source": 1092943, "target": 1181394}, {"source": 1092943, "target": 1133907}, {"source": 1092943, "target": 1092950}, {"source": 1092943, "target": 1191132}, {"source": 1092943, "target": 989021}, {"source": 1092943, "target": 817121}, {"source": 1092943, "target": 846946}, {"source": 1092943, "target": 846947}, {"source": 1092943, "target": 1133924}, {"source": 1092943, "target": 1178085}, {"source": 1092943, "target": 989030}, {"source": 1092943, "target": 1133158}, {"source": 1092943, "target": 846950}, {"source": 1092943, "target": 1133927}, {"source": 1092943, "target": 940777}, {"source": 1092943, "target": 940779}, {"source": 1092943, "target": 846949}, {"source": 1092943, "target": 817133}, {"source": 1092943, "target": 1133812}, {"source": 1092943, "target": 817141}, {"source": 1092943, "target": 1133815}, {"source": 1092943, "target": 940794}, {"source": 1092943, "target": 885243}, {"source": 1092943, "target": 1182205}, {"source": 1178575, "target": 1133825}, {"source": 1178575, "target": 972550}, {"source": 1178575, "target": 988301}, {"source": 1178575, "target": 1133847}, {"source": 1178575, "target": 957474}, {"source": 1178575, "target": 940841}, {"source": 1178575, "target": 817091}, {"source": 1178575, "target": 1092943}, {"source": 1178575, "target": 1181394}, {"source": 1178575, "target": 1092950}, {"source": 1178575, "target": 1191132}, {"source": 1178575, "target": 989021}, {"source": 1178575, "target": 846947}, {"source": 1178575, "target": 1133924}, {"source": 1178575, "target": 1178085}, {"source": 1178575, "target": 989030}, {"source": 1178575, "target": 1133812}, {"source": 1178575, "target": 1133815}, {"source": 1178575, "target": 940794}, {"source": 1178575, "target": 885243}, {"source": 1178575, "target": 1182205}, {"source": 1181394, "target": 1133825}, {"source": 1181394, "target": 972550}, {"source": 1181394, "target": 817287}, {"source": 1181394, "target": 988301}, {"source": 1181394, "target": 1133847}, {"source": 1181394, "target": 1409308}, {"source": 1181394, "target": 1391264}, {"source": 1181394, "target": 957474}, {"source": 1181394, "target": 940841}, {"source": 1181394, "target": 817091}, {"source": 1181394, "target": 988996}, {"source": 1181394, "target": 817230}, {"source": 1181394, "target": 1092943}, {"source": 1181394, "target": 1178575}, {"source": 1181394, "target": 1092950}, {"source": 1181394, "target": 1191132}, {"source": 1181394, "target": 989021}, {"source": 1181394, "target": 846947}, {"source": 1181394, "target": 1133924}, {"source": 1181394, "target": 1178085}, {"source": 1181394, "target": 989030}, {"source": 1181394, "target": 1133158}, {"source": 1181394, "target": 903020}, {"source": 1181394, "target": 1133812}, {"source": 1181394, "target": 1133815}, {"source": 1181394, "target": 940794}, {"source": 1181394, "target": 885243}, {"source": 1181394, "target": 1182205}, {"source": 1092950, "target": 1133825}, {"source": 1092950, "target": 817154}, {"source": 1092950, "target": 885251}, {"source": 1092950, "target": 972550}, {"source": 1092950, "target": 817287}, {"source": 1092950, "target": 988301}, {"source": 1092950, "target": 817165}, {"source": 1092950, "target": 1133847}, {"source": 1092950, "target": 1409308}, {"source": 1092950, "target": 1391264}, {"source": 1092950, "target": 957474}, {"source": 1092950, "target": 940841}, {"source": 1092950, "target": 996152}, {"source": 1092950, "target": 817344}, {"source": 1092950, "target": 817091}, {"source": 1092950, "target": 988996}, {"source": 1092950, "target": 817230}, {"source": 1092950, "target": 1092943}, {"source": 1092950, "target": 1178575}, {"source": 1092950, "target": 1181394}, {"source": 1092950, "target": 885206}, {"source": 1092950, "target": 1191132}, {"source": 1092950, "target": 989021}, {"source": 1092950, "target": 846947}, {"source": 1092950, "target": 1133924}, {"source": 1092950, "target": 1178085}, {"source": 1092950, "target": 989030}, {"source": 1092950, "target": 1133158}, {"source": 1092950, "target": 989029}, {"source": 1092950, "target": 940776}, {"source": 1092950, "target": 903020}, {"source": 1092950, "target": 1133812}, {"source": 1092950, "target": 1133815}, {"source": 1092950, "target": 940794}, {"source": 1092950, "target": 885243}, {"source": 1092950, "target": 1182205}, {"source": 1092950, "target": 940798}, {"source": 1191132, "target": 1133825}, {"source": 1191132, "target": 972550}, {"source": 1191132, "target": 988301}, {"source": 1191132, "target": 1133847}, {"source": 1191132, "target": 957474}, {"source": 1191132, "target": 940841}, {"source": 1191132, "target": 817091}, {"source": 1191132, "target": 1092943}, {"source": 1191132, "target": 1178575}, {"source": 1191132, "target": 1181394}, {"source": 1191132, "target": 1092950}, {"source": 1191132, "target": 989021}, {"source": 1191132, "target": 846947}, {"source": 1191132, "target": 1133924}, {"source": 1191132, "target": 1178085}, {"source": 1191132, "target": 989030}, {"source": 1191132, "target": 1133812}, {"source": 1191132, "target": 1133815}, {"source": 1191132, "target": 940794}, {"source": 1191132, "target": 885243}, {"source": 1191132, "target": 1182205}, {"source": 989021, "target": 1133825}, {"source": 989021, "target": 972550}, {"source": 989021, "target": 988301}, {"source": 989021, "target": 1133847}, {"source": 989021, "target": 957474}, {"source": 989021, "target": 940841}, {"source": 989021, "target": 817091}, {"source": 989021, "target": 1092943}, {"source": 989021, "target": 1178575}, {"source": 989021, "target": 1181394}, {"source": 989021, "target": 1092950}, {"source": 989021, "target": 1191132}, {"source": 989021, "target": 846947}, {"source": 989021, "target": 1133924}, {"source": 989021, "target": 1178085}, {"source": 989021, "target": 989030}, {"source": 989021, "target": 1133812}, {"source": 989021, "target": 1133815}, {"source": 989021, "target": 940794}, {"source": 989021, "target": 885243}, {"source": 989021, "target": 1182205}, {"source": 846947, "target": 1133825}, {"source": 846947, "target": 940801}, {"source": 846947, "target": 817410}, {"source": 846947, "target": 972550}, {"source": 846947, "target": 940807}, {"source": 846947, "target": 817287}, {"source": 846947, "target": 940809}, {"source": 846947, "target": 817163}, {"source": 846947, "target": 940812}, {"source": 846947, "target": 988301}, {"source": 846947, "target": 988302}, {"source": 846947, "target": 817296}, {"source": 846947, "target": 817044}, {"source": 846947, "target": 1133847}, {"source": 846947, "target": 817047}, {"source": 846947, "target": 817307}, {"source": 846947, "target": 987933}, {"source": 846947, "target": 1391264}, {"source": 846947, "target": 1092897}, {"source": 846947, "target": 957474}, {"source": 846947, "target": 817315}, {"source": 846947, "target": 817442}, {"source": 846947, "target": 817317}, {"source": 846947, "target": 817063}, {"source": 846947, "target": 940841}, {"source": 846947, "target": 851371}, {"source": 846947, "target": 823344}, {"source": 846947, "target": 817204}, {"source": 846947, "target": 817208}, {"source": 846947, "target": 817081}, {"source": 846947, "target": 817091}, {"source": 846947, "target": 954950}, {"source": 846947, "target": 846919}, {"source": 846947, "target": 817351}, {"source": 846947, "target": 817354}, {"source": 846947, "target": 817230}, {"source": 846947, "target": 1092943}, {"source": 846947, "target": 1178575}, {"source": 846947, "target": 1181394}, {"source": 846947, "target": 817109}, {"source": 846947, "target": 1092950}, {"source": 846947, "target": 1092952}, {"source": 846947, "target": 1191132}, {"source": 846947, "target": 989021}, {"source": 846947, "target": 816990}, {"source": 846947, "target": 817119}, {"source": 846947, "target": 940768}, {"source": 846947, "target": 1133924}, {"source": 846947, "target": 1178085}, {"source": 846947, "target": 989030}, {"source": 846947, "target": 1133158}, {"source": 846947, "target": 940774}, {"source": 846947, "target": 817000}, {"source": 846947, "target": 817258}, {"source": 846947, "target": 940779}, {"source": 846947, "target": 846949}, {"source": 846947, "target": 846950}, {"source": 846947, "target": 940777}, {"source": 846947, "target": 1133812}, {"source": 846947, "target": 940789}, {"source": 846947, "target": 905846}, {"source": 846947, "target": 1133815}, {"source": 846947, "target": 885237}, {"source": 846947, "target": 940794}, {"source": 846947, "target": 885243}, {"source": 846947, "target": 1182205}, {"source": 1133924, "target": 1133825}, {"source": 1133924, "target": 972550}, {"source": 1133924, "target": 817287}, {"source": 1133924, "target": 988301}, {"source": 1133924, "target": 1133847}, {"source": 1133924, "target": 1409308}, {"source": 1133924, "target": 1391264}, {"source": 1133924, "target": 957474}, {"source": 1133924, "target": 940841}, {"source": 1133924, "target": 817091}, {"source": 1133924, "target": 988996}, {"source": 1133924, "target": 817230}, {"source": 1133924, "target": 1092943}, {"source": 1133924, "target": 1178575}, {"source": 1133924, "target": 1181394}, {"source": 1133924, "target": 1092950}, {"source": 1133924, "target": 1191132}, {"source": 1133924, "target": 989021}, {"source": 1133924, "target": 846947}, {"source": 1133924, "target": 1178085}, {"source": 1133924, "target": 989030}, {"source": 1133924, "target": 1133158}, {"source": 1133924, "target": 903020}, {"source": 1133924, "target": 1133812}, {"source": 1133924, "target": 1133815}, {"source": 1133924, "target": 940794}, {"source": 1133924, "target": 885243}, {"source": 1133924, "target": 1182205}, {"source": 1178085, "target": 1133825}, {"source": 1178085, "target": 972550}, {"source": 1178085, "target": 988301}, {"source": 1178085, "target": 1133847}, {"source": 1178085, "target": 957474}, {"source": 1178085, "target": 940841}, {"source": 1178085, "target": 817091}, {"source": 1178085, "target": 1092943}, {"source": 1178085, "target": 1178575}, {"source": 1178085, "target": 1181394}, {"source": 1178085, "target": 1092950}, {"source": 1178085, "target": 1191132}, {"source": 1178085, "target": 989021}, {"source": 1178085, "target": 846947}, {"source": 1178085, "target": 1133924}, {"source": 1178085, "target": 989030}, {"source": 1178085, "target": 1133812}, {"source": 1178085, "target": 1133815}, {"source": 1178085, "target": 940794}, {"source": 1178085, "target": 885243}, {"source": 1178085, "target": 1182205}, {"source": 989030, "target": 1133825}, {"source": 989030, "target": 817154}, {"source": 989030, "target": 885251}, {"source": 989030, "target": 940803}, {"source": 989030, "target": 940805}, {"source": 989030, "target": 972550}, {"source": 989030, "target": 817287}, {"source": 989030, "target": 885256}, {"source": 989030, "target": 940809}, {"source": 989030, "target": 988301}, {"source": 989030, "target": 817165}, {"source": 989030, "target": 1092880}, {"source": 989030, "target": 817296}, {"source": 989030, "target": 1133847}, {"source": 989030, "target": 817049}, {"source": 989030, "target": 817307}, {"source": 989030, "target": 1409308}, {"source": 989030, "target": 817180}, {"source": 989030, "target": 1391264}, {"source": 989030, "target": 987552}, {"source": 989030, "target": 957474}, {"source": 989030, "target": 817315}, {"source": 989030, "target": 817063}, {"source": 989030, "target": 817191}, {"source": 989030, "target": 940841}, {"source": 989030, "target": 816938}, {"source": 989030, "target": 861608}, {"source": 989030, "target": 817069}, {"source": 989030, "target": 1179822}, {"source": 989030, "target": 817330}, {"source": 989030, "target": 817331}, {"source": 989030, "target": 817458}, {"source": 989030, "target": 996152}, {"source": 989030, "target": 846909}, {"source": 989030, "target": 817344}, {"source": 989030, "target": 817091}, {"source": 989030, "target": 988996}, {"source": 989030, "target": 817354}, {"source": 989030, "target": 817101}, {"source": 989030, "target": 817230}, {"source": 989030, "target": 1092943}, {"source": 989030, "target": 1178575}, {"source": 989030, "target": 817361}, {"source": 989030, "target": 1181394}, {"source": 989030, "target": 1092947}, {"source": 989030, "target": 846973}, {"source": 989030, "target": 1092950}, {"source": 989030, "target": 885206}, {"source": 989030, "target": 861655}, {"source": 989030, "target": 1191132}, {"source": 989030, "target": 989021}, {"source": 989030, "target": 987101}, {"source": 989030, "target": 817244}, {"source": 989030, "target": 817376}, {"source": 989030, "target": 817121}, {"source": 989030, "target": 846947}, {"source": 989030, "target": 1133924}, {"source": 989030, "target": 1178085}, {"source": 989030, "target": 1133158}, {"source": 989030, "target": 989029}, {"source": 989030, "target": 817256}, {"source": 989030, "target": 940776}, {"source": 989030, "target": 817127}, {"source": 989030, "target": 903020}, {"source": 989030, "target": 1133165}, {"source": 989030, "target": 817132}, {"source": 989030, "target": 885242}, {"source": 989030, "target": 1133812}, {"source": 989030, "target": 1133815}, {"source": 989030, "target": 940794}, {"source": 989030, "target": 885243}, {"source": 989030, "target": 1182205}, {"source": 989030, "target": 940798}, {"source": 1133812, "target": 1133825}, {"source": 1133812, "target": 885251}, {"source": 1133812, "target": 972550}, {"source": 1133812, "target": 817287}, {"source": 1133812, "target": 988301}, {"source": 1133812, "target": 1133847}, {"source": 1133812, "target": 1409308}, {"source": 1133812, "target": 1391264}, {"source": 1133812, "target": 957474}, {"source": 1133812, "target": 940841}, {"source": 1133812, "target": 817091}, {"source": 1133812, "target": 988996}, {"source": 1133812, "target": 817230}, {"source": 1133812, "target": 1092943}, {"source": 1133812, "target": 1178575}, {"source": 1133812, "target": 1181394}, {"source": 1133812, "target": 1092950}, {"source": 1133812, "target": 1191132}, {"source": 1133812, "target": 989021}, {"source": 1133812, "target": 846947}, {"source": 1133812, "target": 1133924}, {"source": 1133812, "target": 1178085}, {"source": 1133812, "target": 989030}, {"source": 1133812, "target": 1133158}, {"source": 1133812, "target": 989029}, {"source": 1133812, "target": 940776}, {"source": 1133812, "target": 903020}, {"source": 1133812, "target": 1133815}, {"source": 1133812, "target": 940794}, {"source": 1133812, "target": 885243}, {"source": 1133812, "target": 1182205}, {"source": 1133815, "target": 1133825}, {"source": 1133815, "target": 885251}, {"source": 1133815, "target": 972550}, {"source": 1133815, "target": 817287}, {"source": 1133815, "target": 988301}, {"source": 1133815, "target": 1133847}, {"source": 1133815, "target": 1409308}, {"source": 1133815, "target": 1391264}, {"source": 1133815, "target": 957474}, {"source": 1133815, "target": 940841}, {"source": 1133815, "target": 817091}, {"source": 1133815, "target": 988996}, {"source": 1133815, "target": 817230}, {"source": 1133815, "target": 1092943}, {"source": 1133815, "target": 1178575}, {"source": 1133815, "target": 1181394}, {"source": 1133815, "target": 1092950}, {"source": 1133815, "target": 1191132}, {"source": 1133815, "target": 989021}, {"source": 1133815, "target": 846947}, {"source": 1133815, "target": 1133924}, {"source": 1133815, "target": 1178085}, {"source": 1133815, "target": 989030}, {"source": 1133815, "target": 1133158}, {"source": 1133815, "target": 989029}, {"source": 1133815, "target": 940776}, {"source": 1133815, "target": 903020}, {"source": 1133815, "target": 1133812}, {"source": 1133815, "target": 940794}, {"source": 1133815, "target": 885243}, {"source": 1133815, "target": 1182205}, {"source": 940794, "target": 1133825}, {"source": 940794, "target": 817154}, {"source": 940794, "target": 885251}, {"source": 940794, "target": 817025}, {"source": 940794, "target": 972550}, {"source": 940794, "target": 817287}, {"source": 940794, "target": 885258}, {"source": 940794, "target": 988301}, {"source": 940794, "target": 817165}, {"source": 940794, "target": 817296}, {"source": 940794, "target": 1133847}, {"source": 940794, "target": 817307}, {"source": 940794, "target": 1409308}, {"source": 940794, "target": 817437}, {"source": 940794, "target": 1391264}, {"source": 940794, "target": 957474}, {"source": 940794, "target": 817315}, {"source": 940794, "target": 817191}, {"source": 940794, "target": 940841}, {"source": 940794, "target": 816938}, {"source": 940794, "target": 996152}, {"source": 940794, "target": 817208}, {"source": 940794, "target": 817464}, {"source": 940794, "target": 817344}, {"source": 940794, "target": 817091}, {"source": 940794, "target": 988996}, {"source": 940794, "target": 817354}, {"source": 940794, "target": 817101}, {"source": 940794, "target": 817230}, {"source": 940794, "target": 1092943}, {"source": 940794, "target": 1178575}, {"source": 940794, "target": 817361}, {"source": 940794, "target": 1181394}, {"source": 940794, "target": 846927}, {"source": 940794, "target": 846928}, {"source": 940794, "target": 816981}, {"source": 940794, "target": 1092950}, {"source": 940794, "target": 885206}, {"source": 940794, "target": 989017}, {"source": 940794, "target": 1191132}, {"source": 940794, "target": 989021}, {"source": 940794, "target": 816989}, {"source": 940794, "target": 817119}, {"source": 940794, "target": 940768}, {"source": 940794, "target": 817121}, {"source": 940794, "target": 817244}, {"source": 940794, "target": 846947}, {"source": 940794, "target": 1133924}, {"source": 940794, "target": 1178085}, {"source": 940794, "target": 989030}, {"source": 940794, "target": 1133158}, {"source": 940794, "target": 989029}, {"source": 940794, "target": 940776}, {"source": 940794, "target": 817125}, {"source": 940794, "target": 903020}, {"source": 940794, "target": 817136}, {"source": 940794, "target": 1133812}, {"source": 940794, "target": 817141}, {"source": 940794, "target": 1133815}, {"source": 940794, "target": 940793}, {"source": 940794, "target": 885243}, {"source": 940794, "target": 1182205}, {"source": 940794, "target": 940798}, {"source": 885243, "target": 817154}, {"source": 885243, "target": 885251}, {"source": 885243, "target": 957958}, {"source": 885243, "target": 817159}, {"source": 885243, "target": 817165}, {"source": 885243, "target": 957474}, {"source": 885243, "target": 817191}, {"source": 885243, "target": 846898}, {"source": 885243, "target": 817208}, {"source": 885243, "target": 846905}, {"source": 885243, "target": 846909}, {"source": 885243, "target": 846915}, {"source": 885243, "target": 954950}, {"source": 885243, "target": 817230}, {"source": 885243, "target": 817232}, {"source": 885243, "target": 817236}, {"source": 885243, "target": 817244}, {"source": 885243, "target": 817249}, {"source": 885243, "target": 846947}, {"source": 885243, "target": 1133158}, {"source": 885243, "target": 817258}, {"source": 885243, "target": 817265}, {"source": 885243, "target": 846963}, {"source": 885243, "target": 905846}, {"source": 885243, "target": 817287}, {"source": 885243, "target": 988301}, {"source": 885243, "target": 988302}, {"source": 885243, "target": 817300}, {"source": 885243, "target": 817315}, {"source": 885243, "target": 817317}, {"source": 885243, "target": 905898}, {"source": 885243, "target": 817329}, {"source": 885243, "target": 817330}, {"source": 885243, "target": 817331}, {"source": 885243, "target": 905908}, {"source": 885243, "target": 817344}, {"source": 885243, "target": 817361}, {"source": 885243, "target": 1181394}, {"source": 885243, "target": 940756}, {"source": 885243, "target": 940761}, {"source": 885243, "target": 1191132}, {"source": 885243, "target": 817375}, {"source": 885243, "target": 940768}, {"source": 885243, "target": 940774}, {"source": 885243, "target": 940776}, {"source": 885243, "target": 1133812}, {"source": 885243, "target": 940789}, {"source": 885243, "target": 1133815}, {"source": 885243, "target": 940794}, {"source": 885243, "target": 940798}, {"source": 885243, "target": 940799}, {"source": 885243, "target": 1133825}, {"source": 885243, "target": 940803}, {"source": 885243, "target": 817412}, {"source": 885243, "target": 972550}, {"source": 885243, "target": 940807}, {"source": 885243, "target": 940811}, {"source": 885243, "target": 940812}, {"source": 885243, "target": 940814}, {"source": 885243, "target": 817422}, {"source": 885243, "target": 1133847}, {"source": 885243, "target": 1409308}, {"source": 885243, "target": 1092897}, {"source": 885243, "target": 940841}, {"source": 885243, "target": 1092911}, {"source": 885243, "target": 1092913}, {"source": 885243, "target": 817458}, {"source": 885243, "target": 996152}, {"source": 885243, "target": 816960}, {"source": 885243, "target": 816961}, {"source": 885243, "target": 988996}, {"source": 885243, "target": 1092943}, {"source": 885243, "target": 816977}, {"source": 885243, "target": 1092950}, {"source": 885243, "target": 1092952}, {"source": 885243, "target": 989021}, {"source": 885243, "target": 816990}, {"source": 885243, "target": 1133924}, {"source": 885243, "target": 989029}, {"source": 885243, "target": 989030}, {"source": 885243, "target": 817000}, {"source": 885243, "target": 903020}, {"source": 885243, "target": 993675}, {"source": 885243, "target": 817039}, {"source": 885243, "target": 989078}, {"source": 885243, "target": 817047}, {"source": 885243, "target": 989079}, {"source": 885243, "target": 817049}, {"source": 885243, "target": 861608}, {"source": 885243, "target": 851371}, {"source": 885243, "target": 1134004}, {"source": 885243, "target": 817091}, {"source": 885243, "target": 1178575}, {"source": 885243, "target": 817106}, {"source": 885243, "target": 885203}, {"source": 885243, "target": 885206}, {"source": 885243, "target": 861655}, {"source": 885243, "target": 987101}, {"source": 885243, "target": 1178085}, {"source": 885243, "target": 817132}, {"source": 885243, "target": 885244}, {"source": 885243, "target": 1182205}, {"source": 1182205, "target": 1133825}, {"source": 1182205, "target": 972550}, {"source": 1182205, "target": 817287}, {"source": 1182205, "target": 988301}, {"source": 1182205, "target": 1133847}, {"source": 1182205, "target": 1409308}, {"source": 1182205, "target": 1391264}, {"source": 1182205, "target": 957474}, {"source": 1182205, "target": 940841}, {"source": 1182205, "target": 817091}, {"source": 1182205, "target": 988996}, {"source": 1182205, "target": 817230}, {"source": 1182205, "target": 1092943}, {"source": 1182205, "target": 1178575}, {"source": 1182205, "target": 1181394}, {"source": 1182205, "target": 1092950}, {"source": 1182205, "target": 1191132}, {"source": 1182205, "target": 989021}, {"source": 1182205, "target": 846947}, {"source": 1182205, "target": 1133924}, {"source": 1182205, "target": 1178085}, {"source": 1182205, "target": 989030}, {"source": 1182205, "target": 1133158}, {"source": 1182205, "target": 903020}, {"source": 1182205, "target": 1133812}, {"source": 1182205, "target": 1133815}, {"source": 1182205, "target": 940794}, {"source": 1182205, "target": 885243}, {"source": 1178370, "target": 1092901}, {"source": 1178370, "target": 1179430}, {"source": 1178370, "target": 816997}, {"source": 1178370, "target": 1178536}, {"source": 1178370, "target": 1178570}, {"source": 1178370, "target": 940811}, {"source": 1178370, "target": 1132139}, {"source": 1178370, "target": 998636}, {"source": 1178370, "target": 940798}, {"source": 1178370, "target": 817296}, {"source": 1178370, "target": 846928}, {"source": 1178370, "target": 1092884}, {"source": 1178370, "target": 1133845}, {"source": 1178370, "target": 817206}, {"source": 1178370, "target": 885206}, {"source": 1178370, "target": 817014}, {"source": 1178370, "target": 1179838}, {"source": 1178370, "target": 1133854}, {"source": 940811, "target": 1178370}, {"source": 940811, "target": 817160}, {"source": 940811, "target": 1092873}, {"source": 940811, "target": 1092874}, {"source": 940811, "target": 817163}, {"source": 940811, "target": 817296}, {"source": 940811, "target": 1092884}, {"source": 940811, "target": 1133845}, {"source": 940811, "target": 817306}, {"source": 940811, "target": 1133854}, {"source": 940811, "target": 817058}, {"source": 940811, "target": 1092901}, {"source": 940811, "target": 1179430}, {"source": 940811, "target": 1178536}, {"source": 940811, "target": 817458}, {"source": 940811, "target": 905908}, {"source": 940811, "target": 817206}, {"source": 940811, "target": 817208}, {"source": 940811, "target": 846905}, {"source": 940811, "target": 1179838}, {"source": 940811, "target": 817406}, {"source": 940811, "target": 846919}, {"source": 940811, "target": 1178570}, {"source": 940811, "target": 817228}, {"source": 940811, "target": 989005}, {"source": 940811, "target": 846928}, {"source": 940811, "target": 816977}, {"source": 940811, "target": 1092944}, {"source": 940811, "target": 885206}, {"source": 940811, "target": 1092952}, {"source": 940811, "target": 817119}, {"source": 940811, "target": 988643}, {"source": 940811, "target": 1132132}, {"source": 940811, "target": 816997}, {"source": 940811, "target": 940778}, {"source": 940811, "target": 1132139}, {"source": 940811, "target": 998636}, {"source": 940811, "target": 1132138}, {"source": 940811, "target": 1000050}, {"source": 940811, "target": 817014}, {"source": 940811, "target": 846968}, {"source": 940811, "target": 885243}, {"source": 940811, "target": 885244}, {"source": 940811, "target": 940798}, {"source": 817296, "target": 957958}, {"source": 817296, "target": 817160}, {"source": 817296, "target": 817163}, {"source": 817296, "target": 817165}, {"source": 817296, "target": 817191}, {"source": 817296, "target": 823344}, {"source": 817296, "target": 817205}, {"source": 817296, "target": 817206}, {"source": 817296, "target": 846909}, {"source": 817296, "target": 846928}, {"source": 817296, "target": 817237}, {"source": 817296, "target": 817249}, {"source": 817296, "target": 846947}, {"source": 817296, "target": 846949}, {"source": 817296, "target": 846950}, {"source": 817296, "target": 817256}, {"source": 817296, "target": 817258}, {"source": 817296, "target": 1132139}, {"source": 817296, "target": 846963}, {"source": 817296, "target": 817280}, {"source": 817296, "target": 846983}, {"source": 817296, "target": 817287}, {"source": 817296, "target": 988301}, {"source": 817296, "target": 817306}, {"source": 817296, "target": 817307}, {"source": 817296, "target": 817315}, {"source": 817296, "target": 817331}, {"source": 817296, "target": 817338}, {"source": 817296, "target": 1179838}, {"source": 817296, "target": 817344}, {"source": 817296, "target": 817351}, {"source": 817296, "target": 817354}, {"source": 817296, "target": 1133771}, {"source": 817296, "target": 817361}, {"source": 817296, "target": 940755}, {"source": 817296, "target": 1133792}, {"source": 817296, "target": 817376}, {"source": 817296, "target": 940771}, {"source": 817296, "target": 1133798}, {"source": 817296, "target": 940777}, {"source": 817296, "target": 998636}, {"source": 817296, "target": 940782}, {"source": 817296, "target": 940794}, {"source": 817296, "target": 940798}, {"source": 817296, "target": 1178370}, {"source": 817296, "target": 940803}, {"source": 817296, "target": 972550}, {"source": 817296, "target": 1092874}, {"source": 817296, "target": 940811}, {"source": 817296, "target": 1092877}, {"source": 817296, "target": 1092884}, {"source": 817296, "target": 1133845}, {"source": 817296, "target": 987931}, {"source": 817296, "target": 817437}, {"source": 817296, "target": 1133854}, {"source": 817296, "target": 1092901}, {"source": 817296, "target": 1179430}, {"source": 817296, "target": 940841}, {"source": 817296, "target": 816938}, {"source": 817296, "target": 1092912}, {"source": 817296, "target": 817463}, {"source": 817296, "target": 988995}, {"source": 817296, "target": 988996}, {"source": 817296, "target": 816977}, {"source": 817296, "target": 1092952}, {"source": 817296, "target": 816997}, {"source": 817296, "target": 989030}, {"source": 817296, "target": 817012}, {"source": 817296, "target": 817014}, {"source": 817296, "target": 817025}, {"source": 817296, "target": 817044}, {"source": 817296, "target": 817049}, {"source": 817296, "target": 817054}, {"source": 817296, "target": 817058}, {"source": 817296, "target": 987559}, {"source": 817296, "target": 1178536}, {"source": 817296, "target": 861608}, {"source": 817296, "target": 817081}, {"source": 817296, "target": 817094}, {"source": 817296, "target": 1178570}, {"source": 817296, "target": 817101}, {"source": 817296, "target": 817108}, {"source": 817296, "target": 817109}, {"source": 817296, "target": 885206}, {"source": 817296, "target": 861655}, {"source": 817296, "target": 885208}, {"source": 817296, "target": 817115}, {"source": 817296, "target": 817119}, {"source": 817296, "target": 817121}, {"source": 817296, "target": 885224}, {"source": 1092884, "target": 1178370}, {"source": 1092884, "target": 940811}, {"source": 1092884, "target": 817296}, {"source": 1092884, "target": 1133845}, {"source": 1092884, "target": 817173}, {"source": 1092884, "target": 817050}, {"source": 1092884, "target": 817307}, {"source": 1092884, "target": 1133854}, {"source": 1092884, "target": 817442}, {"source": 1092884, "target": 1092901}, {"source": 1092884, "target": 1179430}, {"source": 1092884, "target": 1178536}, {"source": 1092884, "target": 851371}, {"source": 1092884, "target": 855982}, {"source": 1092884, "target": 817328}, {"source": 1092884, "target": 817206}, {"source": 1092884, "target": 1179838}, {"source": 1092884, "target": 1178570}, {"source": 1092884, "target": 998860}, {"source": 1092884, "target": 846928}, {"source": 1092884, "target": 1180496}, {"source": 1092884, "target": 817235}, {"source": 1092884, "target": 885206}, {"source": 1092884, "target": 1132119}, {"source": 1092884, "target": 1132126}, {"source": 1092884, "target": 989024}, {"source": 1092884, "target": 817122}, {"source": 1092884, "target": 816997}, {"source": 1092884, "target": 817125}, {"source": 1092884, "target": 1132134}, {"source": 1092884, "target": 1132139}, {"source": 1092884, "target": 998636}, {"source": 1092884, "target": 817014}, {"source": 1092884, "target": 817404}, {"source": 1092884, "target": 940798}, {"source": 1092884, "target": 940799}, {"source": 1133845, "target": 1178370}, {"source": 1133845, "target": 1092874}, {"source": 1133845, "target": 940811}, {"source": 1133845, "target": 817296}, {"source": 1133845, "target": 1092884}, {"source": 1133845, "target": 817306}, {"source": 1133845, "target": 1133854}, {"source": 1133845, "target": 1092901}, {"source": 1133845, "target": 1179430}, {"source": 1133845, "target": 1178536}, {"source": 1133845, "target": 817324}, {"source": 1133845, "target": 817206}, {"source": 1133845, "target": 1179838}, {"source": 1133845, "target": 1178570}, {"source": 1133845, "target": 846928}, {"source": 1133845, "target": 885206}, {"source": 1133845, "target": 1092952}, {"source": 1133845, "target": 817240}, {"source": 1133845, "target": 885208}, {"source": 1133845, "target": 817119}, {"source": 1133845, "target": 816997}, {"source": 1133845, "target": 1132139}, {"source": 1133845, "target": 998636}, {"source": 1133845, "target": 817014}, {"source": 1133845, "target": 940798}, {"source": 1133854, "target": 1178370}, {"source": 1133854, "target": 1092874}, {"source": 1133854, "target": 940811}, {"source": 1133854, "target": 817296}, {"source": 1133854, "target": 1092884}, {"source": 1133854, "target": 1133845}, {"source": 1133854, "target": 817306}, {"source": 1133854, "target": 1092901}, {"source": 1133854, "target": 1179430}, {"source": 1133854, "target": 1178536}, {"source": 1133854, "target": 817324}, {"source": 1133854, "target": 817206}, {"source": 1133854, "target": 1179838}, {"source": 1133854, "target": 1178570}, {"source": 1133854, "target": 846928}, {"source": 1133854, "target": 885206}, {"source": 1133854, "target": 1092952}, {"source": 1133854, "target": 817240}, {"source": 1133854, "target": 885208}, {"source": 1133854, "target": 817119}, {"source": 1133854, "target": 816997}, {"source": 1133854, "target": 1132139}, {"source": 1133854, "target": 998636}, {"source": 1133854, "target": 817014}, {"source": 1133854, "target": 940798}, {"source": 1092901, "target": 1178370}, {"source": 1092901, "target": 1092874}, {"source": 1092901, "target": 940811}, {"source": 1092901, "target": 817296}, {"source": 1092901, "target": 1092884}, {"source": 1092901, "target": 1133845}, {"source": 1092901, "target": 817306}, {"source": 1092901, "target": 1133854}, {"source": 1092901, "target": 817058}, {"source": 1092901, "target": 1179430}, {"source": 1092901, "target": 1178536}, {"source": 1092901, "target": 817324}, {"source": 1092901, "target": 817458}, {"source": 1092901, "target": 817206}, {"source": 1092901, "target": 1179838}, {"source": 1092901, "target": 817351}, {"source": 1092901, "target": 1178570}, {"source": 1092901, "target": 846928}, {"source": 1092901, "target": 885206}, {"source": 1092901, "target": 1092951}, {"source": 1092901, "target": 1092952}, {"source": 1092901, "target": 817240}, {"source": 1092901, "target": 885208}, {"source": 1092901, "target": 817119}, {"source": 1092901, "target": 816997}, {"source": 1092901, "target": 817127}, {"source": 1092901, "target": 940776}, {"source": 1092901, "target": 1132139}, {"source": 1092901, "target": 998636}, {"source": 1092901, "target": 817014}, {"source": 1092901, "target": 940798}, {"source": 1179430, "target": 1178370}, {"source": 1179430, "target": 1092901}, {"source": 1179430, "target": 816997}, {"source": 1179430, "target": 1178536}, {"source": 1179430, "target": 1178570}, {"source": 1179430, "target": 940811}, {"source": 1179430, "target": 1132139}, {"source": 1179430, "target": 998636}, {"source": 1179430, "target": 940798}, {"source": 1179430, "target": 817296}, {"source": 1179430, "target": 846928}, {"source": 1179430, "target": 1092884}, {"source": 1179430, "target": 1133845}, {"source": 1179430, "target": 817206}, {"source": 1179430, "target": 885206}, {"source": 1179430, "target": 817014}, {"source": 1179430, "target": 1179838}, {"source": 1179430, "target": 1133854}, {"source": 1178536, "target": 1178370}, {"source": 1178536, "target": 1092874}, {"source": 1178536, "target": 940811}, {"source": 1178536, "target": 817296}, {"source": 1178536, "target": 1092884}, {"source": 1178536, "target": 1133845}, {"source": 1178536, "target": 1133854}, {"source": 1178536, "target": 1092901}, {"source": 1178536, "target": 1179430}, {"source": 1178536, "target": 817206}, {"source": 1178536, "target": 1179838}, {"source": 1178536, "target": 1178570}, {"source": 1178536, "target": 846928}, {"source": 1178536, "target": 885206}, {"source": 1178536, "target": 816997}, {"source": 1178536, "target": 1132139}, {"source": 1178536, "target": 998636}, {"source": 1178536, "target": 817014}, {"source": 1178536, "target": 940798}, {"source": 817206, "target": 1178370}, {"source": 817206, "target": 885250}, {"source": 817206, "target": 817412}, {"source": 817206, "target": 817414}, {"source": 817206, "target": 1092873}, {"source": 817206, "target": 1092874}, {"source": 817206, "target": 940811}, {"source": 817206, "target": 817163}, {"source": 817206, "target": 817296}, {"source": 817206, "target": 1092884}, {"source": 817206, "target": 1133845}, {"source": 817206, "target": 817429}, {"source": 817206, "target": 817172}, {"source": 817206, "target": 817305}, {"source": 817206, "target": 817306}, {"source": 817206, "target": 1133854}, {"source": 817206, "target": 817057}, {"source": 817206, "target": 817058}, {"source": 817206, "target": 1092901}, {"source": 817206, "target": 1179430}, {"source": 817206, "target": 817191}, {"source": 817206, "target": 1178536}, {"source": 817206, "target": 817324}, {"source": 817206, "target": 958769}, {"source": 817206, "target": 817458}, {"source": 817206, "target": 905908}, {"source": 817206, "target": 817332}, {"source": 817206, "target": 817463}, {"source": 817206, "target": 817208}, {"source": 817206, "target": 846905}, {"source": 817206, "target": 1179838}, {"source": 817206, "target": 816958}, {"source": 817206, "target": 817352}, {"source": 817206, "target": 1178570}, {"source": 817206, "target": 817228}, {"source": 817206, "target": 817229}, {"source": 817206, "target": 846928}, {"source": 817206, "target": 1092944}, {"source": 817206, "target": 816977}, {"source": 817206, "target": 846972}, {"source": 817206, "target": 885206}, {"source": 817206, "target": 817239}, {"source": 817206, "target": 1092952}, {"source": 817206, "target": 817240}, {"source": 817206, "target": 885208}, {"source": 817206, "target": 987611}, {"source": 817206, "target": 816990}, {"source": 817206, "target": 817119}, {"source": 817206, "target": 817249}, {"source": 817206, "target": 846946}, {"source": 817206, "target": 817121}, {"source": 817206, "target": 816997}, {"source": 817206, "target": 817256}, {"source": 817206, "target": 940778}, {"source": 817206, "target": 1132139}, {"source": 817206, "target": 998636}, {"source": 817206, "target": 885229}, {"source": 817206, "target": 940789}, {"source": 817206, "target": 817014}, {"source": 817206, "target": 885239}, {"source": 817206, "target": 846968}, {"source": 817206, "target": 817270}, {"source": 817206, "target": 846971}, {"source": 817206, "target": 885244}, {"source": 817206, "target": 846973}, {"source": 817206, "target": 940798}, {"source": 1179838, "target": 1178370}, {"source": 1179838, "target": 1092901}, {"source": 1179838, "target": 1179430}, {"source": 1179838, "target": 816997}, {"source": 1179838, "target": 1178536}, {"source": 1179838, "target": 1178570}, {"source": 1179838, "target": 940811}, {"source": 1179838, "target": 1132139}, {"source": 1179838, "target": 998636}, {"source": 1179838, "target": 940798}, {"source": 1179838, "target": 817296}, {"source": 1179838, "target": 846928}, {"source": 1179838, "target": 1092884}, {"source": 1179838, "target": 1133845}, {"source": 1179838, "target": 817206}, {"source": 1179838, "target": 885206}, {"source": 1179838, "target": 817014}, {"source": 1179838, "target": 1133854}, {"source": 1178570, "target": 1178370}, {"source": 1178570, "target": 1092874}, {"source": 1178570, "target": 940811}, {"source": 1178570, "target": 817296}, {"source": 1178570, "target": 1092884}, {"source": 1178570, "target": 1133845}, {"source": 1178570, "target": 1133854}, {"source": 1178570, "target": 1092901}, {"source": 1178570, "target": 1179430}, {"source": 1178570, "target": 1178536}, {"source": 1178570, "target": 817206}, {"source": 1178570, "target": 1179838}, {"source": 1178570, "target": 846928}, {"source": 1178570, "target": 885206}, {"source": 1178570, "target": 1092952}, {"source": 1178570, "target": 816997}, {"source": 1178570, "target": 1132139}, {"source": 1178570, "target": 998636}, {"source": 1178570, "target": 817014}, {"source": 1178570, "target": 940798}, {"source": 846928, "target": 1178370}, {"source": 846928, "target": 885251}, {"source": 846928, "target": 1092874}, {"source": 846928, "target": 940811}, {"source": 846928, "target": 817296}, {"source": 846928, "target": 1092884}, {"source": 846928, "target": 1133845}, {"source": 846928, "target": 817306}, {"source": 846928, "target": 817180}, {"source": 846928, "target": 1133854}, {"source": 846928, "target": 817058}, {"source": 846928, "target": 1092901}, {"source": 846928, "target": 1179430}, {"source": 846928, "target": 817191}, {"source": 846928, "target": 1178536}, {"source": 846928, "target": 817324}, {"source": 846928, "target": 817068}, {"source": 846928, "target": 817453}, {"source": 846928, "target": 817199}, {"source": 846928, "target": 817455}, {"source": 846928, "target": 855985}, {"source": 846928, "target": 1092914}, {"source": 846928, "target": 817458}, {"source": 846928, "target": 817206}, {"source": 846928, "target": 1179838}, {"source": 846928, "target": 817344}, {"source": 846928, "target": 945092}, {"source": 846928, "target": 846917}, {"source": 846928, "target": 817351}, {"source": 846928, "target": 1178570}, {"source": 846928, "target": 817229}, {"source": 846928, "target": 817101}, {"source": 846928, "target": 846927}, {"source": 846928, "target": 816979}, {"source": 846928, "target": 817108}, {"source": 846928, "target": 885206}, {"source": 846928, "target": 1092951}, {"source": 846928, "target": 1092952}, {"source": 846928, "target": 817240}, {"source": 846928, "target": 885209}, {"source": 846928, "target": 817114}, {"source": 846928, "target": 885211}, {"source": 846928, "target": 885208}, {"source": 846928, "target": 989017}, {"source": 846928, "target": 817119}, {"source": 846928, "target": 816989}, {"source": 846928, "target": 940768}, {"source": 846928, "target": 885218}, {"source": 846928, "target": 816997}, {"source": 846928, "target": 940773}, {"source": 846928, "target": 817126}, {"source": 846928, "target": 817125}, {"source": 846928, "target": 940776}, {"source": 846928, "target": 817127}, {"source": 846928, "target": 1132139}, {"source": 846928, "target": 998636}, {"source": 846928, "target": 817136}, {"source": 846928, "target": 1133811}, {"source": 846928, "target": 817014}, {"source": 846928, "target": 885239}, {"source": 846928, "target": 817144}, {"source": 846928, "target": 940794}, {"source": 846928, "target": 940798}, {"source": 846928, "target": 817279}, {"source": 885206, "target": 1178370}, {"source": 885206, "target": 817154}, {"source": 885206, "target": 972550}, {"source": 885206, "target": 817287}, {"source": 885206, "target": 817159}, {"source": 885206, "target": 1092874}, {"source": 885206, "target": 940811}, {"source": 885206, "target": 988300}, {"source": 885206, "target": 988301}, {"source": 885206, "target": 817165}, {"source": 885206, "target": 885258}, {"source": 885206, "target": 817296}, {"source": 885206, "target": 1092884}, {"source": 885206, "target": 1133845}, {"source": 885206, "target": 817306}, {"source": 885206, "target": 957469}, {"source": 885206, "target": 1133854}, {"source": 885206, "target": 817054}, {"source": 885206, "target": 817058}, {"source": 885206, "target": 957474}, {"source": 885206, "target": 1092901}, {"source": 885206, "target": 1179430}, {"source": 885206, "target": 1178536}, {"source": 885206, "target": 940841}, {"source": 885206, "target": 816938}, {"source": 885206, "target": 817324}, {"source": 885206, "target": 817196}, {"source": 885206, "target": 817455}, {"source": 885206, "target": 817458}, {"source": 885206, "target": 817206}, {"source": 885206, "target": 996152}, {"source": 885206, "target": 817208}, {"source": 885206, "target": 817338}, {"source": 885206, "target": 817464}, {"source": 885206, "target": 1179838}, {"source": 885206, "target": 988994}, {"source": 885206, "target": 817091}, {"source": 885206, "target": 988996}, {"source": 885206, "target": 817351}, {"source": 885206, "target": 1178570}, {"source": 885206, "target": 846928}, {"source": 885206, "target": 816981}, {"source": 885206, "target": 1092950}, {"source": 885206, "target": 1092951}, {"source": 885206, "target": 1092952}, {"source": 885206, "target": 817240}, {"source": 885206, "target": 885208}, {"source": 885206, "target": 885214}, {"source": 885206, "target": 817119}, {"source": 885206, "target": 885217}, {"source": 885206, "target": 816997}, {"source": 885206, "target": 989030}, {"source": 885206, "target": 817127}, {"source": 885206, "target": 940776}, {"source": 885206, "target": 989029}, {"source": 885206, "target": 1132139}, {"source": 885206, "target": 998636}, {"source": 885206, "target": 903020}, {"source": 885206, "target": 885229}, {"source": 885206, "target": 817014}, {"source": 885206, "target": 940794}, {"source": 885206, "target": 885243}, {"source": 885206, "target": 940798}, {"source": 816997, "target": 817280}, {"source": 816997, "target": 1178370}, {"source": 816997, "target": 1092867}, {"source": 816997, "target": 885252}, {"source": 816997, "target": 885251}, {"source": 816997, "target": 817414}, {"source": 816997, "target": 846983}, {"source": 816997, "target": 1092874}, {"source": 816997, "target": 940811}, {"source": 816997, "target": 817034}, {"source": 816997, "target": 1136397}, {"source": 816997, "target": 817038}, {"source": 816997, "target": 940814}, {"source": 816997, "target": 817296}, {"source": 816997, "target": 817293}, {"source": 816997, "target": 1092884}, {"source": 816997, "target": 1133845}, {"source": 816997, "target": 817429}, {"source": 816997, "target": 817175}, {"source": 816997, "target": 817047}, {"source": 816997, "target": 817305}, {"source": 816997, "target": 817306}, {"source": 816997, "target": 817428}, {"source": 816997, "target": 817307}, {"source": 816997, "target": 1133854}, {"source": 816997, "target": 1092901}, {"source": 816997, "target": 1179430}, {"source": 816997, "target": 1178536}, {"source": 816997, "target": 817065}, {"source": 816997, "target": 817324}, {"source": 816997, "target": 817328}, {"source": 816997, "target": 958769}, {"source": 816997, "target": 817206}, {"source": 816997, "target": 817463}, {"source": 816997, "target": 1179838}, {"source": 816997, "target": 905919}, {"source": 816997, "target": 988994}, {"source": 816997, "target": 846915}, {"source": 816997, "target": 817091}, {"source": 816997, "target": 1178570}, {"source": 816997, "target": 846928}, {"source": 816997, "target": 817106}, {"source": 816997, "target": 817236}, {"source": 816997, "target": 885206}, {"source": 816997, "target": 817111}, {"source": 816997, "target": 1092952}, {"source": 816997, "target": 816985}, {"source": 816997, "target": 846936}, {"source": 816997, "target": 987611}, {"source": 816997, "target": 817249}, {"source": 816997, "target": 846946}, {"source": 816997, "target": 817126}, {"source": 816997, "target": 885222}, {"source": 816997, "target": 817256}, {"source": 816997, "target": 1132139}, {"source": 816997, "target": 998636}, {"source": 816997, "target": 885229}, {"source": 816997, "target": 817140}, {"source": 816997, "target": 940789}, {"source": 816997, "target": 817014}, {"source": 816997, "target": 885239}, {"source": 816997, "target": 846968}, {"source": 816997, "target": 940798}, {"source": 1132139, "target": 1178370}, {"source": 1132139, "target": 1092874}, {"source": 1132139, "target": 940811}, {"source": 1132139, "target": 817296}, {"source": 1132139, "target": 1092884}, {"source": 1132139, "target": 1133845}, {"source": 1132139, "target": 817306}, {"source": 1132139, "target": 1133854}, {"source": 1132139, "target": 1092901}, {"source": 1132139, "target": 1179430}, {"source": 1132139, "target": 1178536}, {"source": 1132139, "target": 817206}, {"source": 1132139, "target": 1179838}, {"source": 1132139, "target": 1178570}, {"source": 1132139, "target": 846928}, {"source": 1132139, "target": 885206}, {"source": 1132139, "target": 1092952}, {"source": 1132139, "target": 817240}, {"source": 1132139, "target": 817119}, {"source": 1132139, "target": 816997}, {"source": 1132139, "target": 998636}, {"source": 1132139, "target": 817014}, {"source": 1132139, "target": 940798}, {"source": 998636, "target": 1178370}, {"source": 998636, "target": 885251}, {"source": 998636, "target": 885256}, {"source": 998636, "target": 1092874}, {"source": 998636, "target": 940811}, {"source": 998636, "target": 817296}, {"source": 998636, "target": 1092884}, {"source": 998636, "target": 1133845}, {"source": 998636, "target": 817306}, {"source": 998636, "target": 1133854}, {"source": 998636, "target": 817058}, {"source": 998636, "target": 1092901}, {"source": 998636, "target": 1179430}, {"source": 998636, "target": 1178536}, {"source": 998636, "target": 817324}, {"source": 998636, "target": 817455}, {"source": 998636, "target": 817458}, {"source": 998636, "target": 817206}, {"source": 998636, "target": 1179838}, {"source": 998636, "target": 817351}, {"source": 998636, "target": 1178570}, {"source": 998636, "target": 846928}, {"source": 998636, "target": 885206}, {"source": 998636, "target": 1092951}, {"source": 998636, "target": 1092952}, {"source": 998636, "target": 817240}, {"source": 998636, "target": 885208}, {"source": 998636, "target": 817119}, {"source": 998636, "target": 816997}, {"source": 998636, "target": 817127}, {"source": 998636, "target": 940776}, {"source": 998636, "target": 1132139}, {"source": 998636, "target": 817014}, {"source": 998636, "target": 940798}, {"source": 817014, "target": 817154}, {"source": 817014, "target": 885251}, {"source": 817014, "target": 885252}, {"source": 817014, "target": 957958}, {"source": 817014, "target": 817160}, {"source": 817014, "target": 817163}, {"source": 817014, "target": 817165}, {"source": 817014, "target": 817175}, {"source": 817014, "target": 846893}, {"source": 817014, "target": 817206}, {"source": 817014, "target": 846905}, {"source": 817014, "target": 846928}, {"source": 817014, "target": 817235}, {"source": 817014, "target": 817238}, {"source": 817014, "target": 817240}, {"source": 817014, "target": 846946}, {"source": 817014, "target": 846949}, {"source": 817014, "target": 846950}, {"source": 817014, "target": 1132139}, {"source": 817014, "target": 846963}, {"source": 817014, "target": 846983}, {"source": 817014, "target": 905866}, {"source": 817014, "target": 817293}, {"source": 817014, "target": 817296}, {"source": 817014, "target": 905877}, {"source": 817014, "target": 817306}, {"source": 817014, "target": 817317}, {"source": 817014, "target": 905908}, {"source": 817014, "target": 817338}, {"source": 817014, "target": 1179838}, {"source": 817014, "target": 905919}, {"source": 817014, "target": 817344}, {"source": 817014, "target": 817351}, {"source": 817014, "target": 817354}, {"source": 817014, "target": 1133771}, {"source": 817014, "target": 817357}, {"source": 817014, "target": 1133792}, {"source": 817014, "target": 940769}, {"source": 817014, "target": 940771}, {"source": 817014, "target": 1133798}, {"source": 817014, "target": 940777}, {"source": 817014, "target": 998636}, {"source": 817014, "target": 940782}, {"source": 817014, "target": 817404}, {"source": 817014, "target": 817406}, {"source": 817014, "target": 940798}, {"source": 817014, "target": 1178370}, {"source": 817014, "target": 972549}, {"source": 817014, "target": 1092874}, {"source": 817014, "target": 940811}, {"source": 817014, "target": 1092877}, {"source": 817014, "target": 940814}, {"source": 817014, "target": 1092884}, {"source": 817014, "target": 1133845}, {"source": 817014, "target": 987931}, {"source": 817014, "target": 1133854}, {"source": 817014, "target": 1092901}, {"source": 817014, "target": 1179430}, {"source": 817014, "target": 1092912}, {"source": 817014, "target": 988995}, {"source": 817014, "target": 816977}, {"source": 817014, "target": 1092952}, {"source": 817014, "target": 989024}, {"source": 817014, "target": 816997}, {"source": 817014, "target": 817012}, {"source": 817014, "target": 817034}, {"source": 817014, "target": 817047}, {"source": 817014, "target": 817049}, {"source": 817014, "target": 817050}, {"source": 817014, "target": 989085}, {"source": 817014, "target": 817058}, {"source": 817014, "target": 817060}, {"source": 817014, "target": 987559}, {"source": 817014, "target": 1178536}, {"source": 817014, "target": 851371}, {"source": 817014, "target": 817081}, {"source": 817014, "target": 817091}, {"source": 817014, "target": 817094}, {"source": 817014, "target": 1178570}, {"source": 817014, "target": 817109}, {"source": 817014, "target": 885206}, {"source": 817014, "target": 817111}, {"source": 817014, "target": 885208}, {"source": 817014, "target": 885214}, {"source": 817014, "target": 885216}, {"source": 817014, "target": 817121}, {"source": 817014, "target": 817122}, {"source": 817014, "target": 885224}, {"source": 817014, "target": 817141}, {"source": 817014, "target": 817147}, {"source": 817014, "target": 885244}, {"source": 940798, "target": 817280}, {"source": 940798, "target": 817025}, {"source": 940798, "target": 1178370}, {"source": 940798, "target": 817154}, {"source": 940798, "target": 972550}, {"source": 940798, "target": 817287}, {"source": 940798, "target": 1092874}, {"source": 940798, "target": 940811}, {"source": 940798, "target": 885258}, {"source": 940798, "target": 988301}, {"source": 940798, "target": 817165}, {"source": 940798, "target": 817296}, {"source": 940798, "target": 1092884}, {"source": 940798, "target": 1133845}, {"source": 940798, "target": 817306}, {"source": 940798, "target": 817307}, {"source": 940798, "target": 817437}, {"source": 940798, "target": 1133854}, {"source": 940798, "target": 817058}, {"source": 940798, "target": 957474}, {"source": 940798, "target": 817315}, {"source": 940798, "target": 1092901}, {"source": 940798, "target": 1179430}, {"source": 940798, "target": 817191}, {"source": 940798, "target": 1178536}, {"source": 940798, "target": 940841}, {"source": 940798, "target": 816938}, {"source": 940798, "target": 817065}, {"source": 940798, "target": 817324}, {"source": 940798, "target": 817458}, {"source": 940798, "target": 817206}, {"source": 940798, "target": 996152}, {"source": 940798, "target": 817208}, {"source": 940798, "target": 817464}, {"source": 940798, "target": 1179838}, {"source": 940798, "target": 988996}, {"source": 940798, "target": 1178570}, {"source": 940798, "target": 817354}, {"source": 940798, "target": 817101}, {"source": 940798, "target": 817357}, {"source": 940798, "target": 846928}, {"source": 940798, "target": 817361}, {"source": 940798, "target": 817108}, {"source": 940798, "target": 816981}, {"source": 940798, "target": 885206}, {"source": 940798, "target": 1092951}, {"source": 940798, "target": 1092952}, {"source": 940798, "target": 817240}, {"source": 940798, "target": 885208}, {"source": 940798, "target": 1092950}, {"source": 940798, "target": 846936}, {"source": 940798, "target": 817119}, {"source": 940798, "target": 817121}, {"source": 940798, "target": 816997}, {"source": 940798, "target": 989030}, {"source": 940798, "target": 989029}, {"source": 940798, "target": 885222}, {"source": 940798, "target": 1132139}, {"source": 940798, "target": 998636}, {"source": 940798, "target": 903020}, {"source": 940798, "target": 817140}, {"source": 940798, "target": 817014}, {"source": 940798, "target": 940793}, {"source": 940798, "target": 940794}, {"source": 940798, "target": 885243}, {"source": 885248, "target": 817287}, {"source": 885248, "target": 940809}, {"source": 885248, "target": 817165}, {"source": 885248, "target": 861455}, {"source": 885248, "target": 1092880}, {"source": 885248, "target": 989079}, {"source": 885248, "target": 987552}, {"source": 885248, "target": 1391265}, {"source": 885248, "target": 817057}, {"source": 885248, "target": 817058}, {"source": 885248, "target": 987559}, {"source": 885248, "target": 817063}, {"source": 885248, "target": 905898}, {"source": 885248, "target": 1092911}, {"source": 885248, "target": 1092913}, {"source": 885248, "target": 846898}, {"source": 885248, "target": 817463}, {"source": 885248, "target": 816958}, {"source": 885248, "target": 846915}, {"source": 885248, "target": 954950}, {"source": 885248, "target": 817101}, {"source": 885248, "target": 817229}, {"source": 885248, "target": 1133778}, {"source": 885248, "target": 846931}, {"source": 885248, "target": 940756}, {"source": 885248, "target": 885203}, {"source": 885248, "target": 1092947}, {"source": 885248, "target": 940758}, {"source": 885248, "target": 1092951}, {"source": 885248, "target": 817106}, {"source": 885248, "target": 817240}, {"source": 885248, "target": 1179998}, {"source": 885248, "target": 817375}, {"source": 885248, "target": 1133791}, {"source": 885248, "target": 817121}, {"source": 885248, "target": 817127}, {"source": 885248, "target": 817256}, {"source": 885248, "target": 940778}, {"source": 885248, "target": 1133165}, {"source": 885248, "target": 846963}, {"source": 885248, "target": 846964}, {"source": 885248, "target": 846965}, {"source": 885248, "target": 817270}, {"source": 885248, "target": 885242}, {"source": 885248, "target": 846973}, {"source": 1391265, "target": 885248}, {"source": 1391265, "target": 817375}, {"source": 1391265, "target": 817127}, {"source": 1391265, "target": 817287}, {"source": 1391265, "target": 905898}, {"source": 1391265, "target": 817165}, {"source": 1391265, "target": 817101}, {"source": 1391265, "target": 1092911}, {"source": 1391265, "target": 1133778}, {"source": 1391265, "target": 846931}, {"source": 1391265, "target": 940756}, {"source": 1391265, "target": 846898}, {"source": 1391265, "target": 885203}, {"source": 1391265, "target": 989079}, {"source": 1391265, "target": 1179998}, {"source": 1391265, "target": 1133791}, {"source": 1133791, "target": 885248}, {"source": 1133791, "target": 1391265}, {"source": 1133791, "target": 817127}, {"source": 1133791, "target": 817287}, {"source": 1133791, "target": 905898}, {"source": 1133791, "target": 817165}, {"source": 1133791, "target": 817101}, {"source": 1133791, "target": 1092911}, {"source": 1133791, "target": 1133778}, {"source": 1133791, "target": 846931}, {"source": 1133791, "target": 940756}, {"source": 1133791, "target": 846898}, {"source": 1133791, "target": 885203}, {"source": 1133791, "target": 989079}, {"source": 1133791, "target": 1179998}, {"source": 1133791, "target": 817375}, {"source": 817287, "target": 885248}, {"source": 817287, "target": 817154}, {"source": 817287, "target": 885251}, {"source": 817287, "target": 817160}, {"source": 817287, "target": 817165}, {"source": 817287, "target": 817181}, {"source": 817287, "target": 957474}, {"source": 817287, "target": 817191}, {"source": 817287, "target": 846893}, {"source": 817287, "target": 823344}, {"source": 817287, "target": 846898}, {"source": 817287, "target": 817230}, {"source": 817287, "target": 846931}, {"source": 817287, "target": 846947}, {"source": 817287, "target": 846949}, {"source": 817287, "target": 1133158}, {"source": 817287, "target": 846950}, {"source": 817287, "target": 817258}, {"source": 817287, "target": 817280}, {"source": 817287, "target": 988300}, {"source": 817287, "target": 988301}, {"source": 817287, "target": 817296}, {"source": 817287, "target": 817307}, {"source": 817287, "target": 1391264}, {"source": 817287, "target": 1391265}, {"source": 817287, "target": 817315}, {"source": 817287, "target": 905898}, {"source": 817287, "target": 817344}, {"source": 817287, "target": 817354}, {"source": 817287, "target": 987343}, {"source": 817287, "target": 817361}, {"source": 817287, "target": 1133778}, {"source": 817287, "target": 1181394}, {"source": 817287, "target": 940756}, {"source": 817287, "target": 940755}, {"source": 817287, "target": 940759}, {"source": 817287, "target": 817375}, {"source": 817287, "target": 940768}, {"source": 817287, "target": 1133791}, {"source": 817287, "target": 940776}, {"source": 817287, "target": 940777}, {"source": 817287, "target": 1133812}, {"source": 817287, "target": 940788}, {"source": 817287, "target": 1133815}, {"source": 817287, "target": 855801}, {"source": 817287, "target": 940794}, {"source": 817287, "target": 940793}, {"source": 817287, "target": 940798}, {"source": 817287, "target": 1133825}, {"source": 817287, "target": 972549}, {"source": 817287, "target": 972550}, {"source": 817287, "target": 1133847}, {"source": 817287, "target": 1409308}, {"source": 817287, "target": 817437}, {"source": 817287, "target": 940841}, {"source": 817287, "target": 816938}, {"source": 817287, "target": 1092911}, {"source": 817287, "target": 996152}, {"source": 817287, "target": 988996}, {"source": 817287, "target": 1092943}, {"source": 817287, "target": 1092950}, {"source": 817287, "target": 816989}, {"source": 817287, "target": 1179998}, {"source": 817287, "target": 1133924}, {"source": 817287, "target": 989029}, {"source": 817287, "target": 989030}, {"source": 817287, "target": 903020}, {"source": 817287, "target": 817012}, {"source": 817287, "target": 817017}, {"source": 817287, "target": 817020}, {"source": 817287, "target": 817044}, {"source": 817287, "target": 989079}, {"source": 817287, "target": 817054}, {"source": 817287, "target": 817058}, {"source": 817287, "target": 861608}, {"source": 817287, "target": 817081}, {"source": 817287, "target": 817091}, {"source": 817287, "target": 817101}, {"source": 817287, "target": 885200}, {"source": 817287, "target": 885203}, {"source": 817287, "target": 817108}, {"source": 817287, "target": 885206}, {"source": 817287, "target": 885214}, {"source": 817287, "target": 817119}, {"source": 817287, "target": 885215}, {"source": 817287, "target": 817121}, {"source": 817287, "target": 885217}, {"source": 817287, "target": 817127}, {"source": 817287, "target": 817132}, {"source": 817287, "target": 817136}, {"source": 817287, "target": 885237}, {"source": 817287, "target": 885243}, {"source": 817287, "target": 1182205}, {"source": 817127, "target": 885248}, {"source": 817127, "target": 940801}, {"source": 817127, "target": 817280}, {"source": 817127, "target": 885251}, {"source": 817127, "target": 940805}, {"source": 817127, "target": 817287}, {"source": 817127, "target": 885256}, {"source": 817127, "target": 1092874}, {"source": 817127, "target": 817165}, {"source": 817127, "target": 817422}, {"source": 817127, "target": 817429}, {"source": 817127, "target": 989079}, {"source": 817127, "target": 817049}, {"source": 817127, "target": 817177}, {"source": 817127, "target": 817180}, {"source": 817127, "target": 957469}, {"source": 817127, "target": 1391265}, {"source": 817127, "target": 817058}, {"source": 817127, "target": 817315}, {"source": 817127, "target": 1092901}, {"source": 817127, "target": 817191}, {"source": 817127, "target": 817065}, {"source": 817127, "target": 905898}, {"source": 817127, "target": 1133995}, {"source": 817127, "target": 817068}, {"source": 817127, "target": 817069}, {"source": 817127, "target": 817324}, {"source": 817127, "target": 1092911}, {"source": 817127, "target": 817455}, {"source": 817127, "target": 817196}, {"source": 817127, "target": 846898}, {"source": 817127, "target": 817074}, {"source": 817127, "target": 817458}, {"source": 817127, "target": 817205}, {"source": 817127, "target": 905919}, {"source": 817127, "target": 1134015}, {"source": 817127, "target": 817344}, {"source": 817127, "target": 1134019}, {"source": 817127, "target": 817351}, {"source": 817127, "target": 817101}, {"source": 817127, "target": 989006}, {"source": 817127, "target": 846928}, {"source": 817127, "target": 1133778}, {"source": 817127, "target": 846931}, {"source": 817127, "target": 940756}, {"source": 817127, "target": 885203}, {"source": 817127, "target": 885206}, {"source": 817127, "target": 1092951}, {"source": 817127, "target": 1092952}, {"source": 817127, "target": 885208}, {"source": 817127, "target": 817115}, {"source": 817127, "target": 816989}, {"source": 817127, "target": 1179998}, {"source": 817127, "target": 817375}, {"source": 817127, "target": 1133791}, {"source": 817127, "target": 940768}, {"source": 817127, "target": 817119}, {"source": 817127, "target": 817376}, {"source": 817127, "target": 846949}, {"source": 817127, "target": 817126}, {"source": 817127, "target": 989030}, {"source": 817127, "target": 940776}, {"source": 817127, "target": 998636}, {"source": 817127, "target": 885229}, {"source": 817127, "target": 817133}, {"source": 817127, "target": 817136}, {"source": 817127, "target": 1132146}, {"source": 817127, "target": 817140}, {"source": 817127, "target": 817012}, {"source": 817127, "target": 817270}, {"source": 905898, "target": 885248}, {"source": 905898, "target": 940800}, {"source": 905898, "target": 817154}, {"source": 905898, "target": 957958}, {"source": 905898, "target": 817287}, {"source": 905898, "target": 817159}, {"source": 905898, "target": 817160}, {"source": 905898, "target": 993675}, {"source": 905898, "target": 817165}, {"source": 905898, "target": 940814}, {"source": 905898, "target": 861455}, {"source": 905898, "target": 817039}, {"source": 905898, "target": 817422}, {"source": 905898, "target": 1092881}, {"source": 905898, "target": 817172}, {"source": 905898, "target": 989078}, {"source": 905898, "target": 989079}, {"source": 905898, "target": 1391265}, {"source": 905898, "target": 1092911}, {"source": 905898, "target": 817328}, {"source": 905898, "target": 1092913}, {"source": 905898, "target": 846898}, {"source": 905898, "target": 817329}, {"source": 905898, "target": 1134004}, {"source": 905898, "target": 990002}, {"source": 905898, "target": 817205}, {"source": 905898, "target": 817463}, {"source": 905898, "target": 996152}, {"source": 905898, "target": 963001}, {"source": 905898, "target": 1092921}, {"source": 905898, "target": 817338}, {"source": 905898, "target": 816960}, {"source": 905898, "target": 816961}, {"source": 905898, "target": 817218}, {"source": 905898, "target": 846915}, {"source": 905898, "target": 988995}, {"source": 905898, "target": 817330}, {"source": 905898, "target": 817094}, {"source": 905898, "target": 885208}, {"source": 905898, "target": 817351}, {"source": 905898, "target": 817101}, {"source": 905898, "target": 817361}, {"source": 905898, "target": 1133778}, {"source": 905898, "target": 846931}, {"source": 905898, "target": 940756}, {"source": 905898, "target": 885203}, {"source": 905898, "target": 817236}, {"source": 905898, "target": 1132119}, {"source": 905898, "target": 846933}, {"source": 905898, "target": 940759}, {"source": 905898, "target": 989015}, {"source": 905898, "target": 885207}, {"source": 905898, "target": 989020}, {"source": 905898, "target": 987101}, {"source": 905898, "target": 1179998}, {"source": 905898, "target": 817375}, {"source": 905898, "target": 1133791}, {"source": 905898, "target": 817249}, {"source": 905898, "target": 940771}, {"source": 905898, "target": 817127}, {"source": 905898, "target": 817109}, {"source": 905898, "target": 885224}, {"source": 905898, "target": 817256}, {"source": 905898, "target": 817132}, {"source": 905898, "target": 940782}, {"source": 905898, "target": 817265}, {"source": 905898, "target": 846963}, {"source": 905898, "target": 817012}, {"source": 905898, "target": 885243}, {"source": 905898, "target": 817406}, {"source": 905898, "target": 940799}, {"source": 817165, "target": 885248}, {"source": 817165, "target": 817154}, {"source": 817165, "target": 885251}, {"source": 817165, "target": 972549}, {"source": 817165, "target": 957958}, {"source": 817165, "target": 817287}, {"source": 817165, "target": 972550}, {"source": 817165, "target": 817160}, {"source": 817165, "target": 988301}, {"source": 817165, "target": 817293}, {"source": 817165, "target": 861455}, {"source": 817165, "target": 817296}, {"source": 817165, "target": 989078}, {"source": 817165, "target": 989079}, {"source": 817165, "target": 817047}, {"source": 817165, "target": 817177}, {"source": 817165, "target": 817306}, {"source": 817165, "target": 989085}, {"source": 817165, "target": 1391265}, {"source": 817165, "target": 957474}, {"source": 817165, "target": 817191}, {"source": 817165, "target": 817147}, {"source": 817165, "target": 940841}, {"source": 817165, "target": 905898}, {"source": 817165, "target": 816938}, {"source": 817165, "target": 846893}, {"source": 817165, "target": 1092911}, {"source": 817165, "target": 823344}, {"source": 817165, "target": 1092913}, {"source": 817165, "target": 846898}, {"source": 817165, "target": 996152}, {"source": 817165, "target": 817081}, {"source": 817165, "target": 817344}, {"source": 817165, "target": 846915}, {"source": 817165, "target": 988996}, {"source": 817165, "target": 817094}, {"source": 817165, "target": 817353}, {"source": 817165, "target": 817101}, {"source": 817165, "target": 817230}, {"source": 817165, "target": 940798}, {"source": 817165, "target": 817361}, {"source": 817165, "target": 1133778}, {"source": 817165, "target": 846931}, {"source": 817165, "target": 940756}, {"source": 817165, "target": 885203}, {"source": 817165, "target": 846933}, {"source": 817165, "target": 1092950}, {"source": 817165, "target": 885206}, {"source": 817165, "target": 987099}, {"source": 817165, "target": 989020}, {"source": 817165, "target": 987101}, {"source": 817165, "target": 1179998}, {"source": 817165, "target": 817375}, {"source": 817165, "target": 1133791}, {"source": 817165, "target": 817244}, {"source": 817165, "target": 989029}, {"source": 817165, "target": 989030}, {"source": 817165, "target": 817127}, {"source": 817165, "target": 940776}, {"source": 817165, "target": 846949}, {"source": 817165, "target": 846950}, {"source": 817165, "target": 940777}, {"source": 817165, "target": 903020}, {"source": 817165, "target": 817132}, {"source": 817165, "target": 846963}, {"source": 817165, "target": 817141}, {"source": 817165, "target": 817014}, {"source": 817165, "target": 940794}, {"source": 817165, "target": 885243}, {"source": 817165, "target": 817406}, {"source": 817165, "target": 817279}, {"source": 817101, "target": 885248}, {"source": 817101, "target": 885252}, {"source": 817101, "target": 817165}, {"source": 817101, "target": 817173}, {"source": 817101, "target": 817199}, {"source": 817101, "target": 846898}, {"source": 817101, "target": 817205}, {"source": 817101, "target": 846915}, {"source": 817101, "target": 846917}, {"source": 817101, "target": 954950}, {"source": 817101, "target": 846919}, {"source": 817101, "target": 846918}, {"source": 817101, "target": 846927}, {"source": 817101, "target": 846928}, {"source": 817101, "target": 846931}, {"source": 817101, "target": 846933}, {"source": 817101, "target": 817240}, {"source": 817101, "target": 817244}, {"source": 817101, "target": 817256}, {"source": 817101, "target": 817258}, {"source": 817101, "target": 1133165}, {"source": 817101, "target": 905846}, {"source": 817101, "target": 846973}, {"source": 817101, "target": 817287}, {"source": 817101, "target": 988300}, {"source": 817101, "target": 988301}, {"source": 817101, "target": 817296}, {"source": 817101, "target": 817300}, {"source": 817101, "target": 817307}, {"source": 817101, "target": 1391265}, {"source": 817101, "target": 817315}, {"source": 817101, "target": 905898}, {"source": 817101, "target": 817324}, {"source": 817101, "target": 1179822}, {"source": 817101, "target": 905908}, {"source": 817101, "target": 817344}, {"source": 817101, "target": 817354}, {"source": 817101, "target": 817361}, {"source": 817101, "target": 1133778}, {"source": 817101, "target": 940755}, {"source": 817101, "target": 940756}, {"source": 817101, "target": 940758}, {"source": 817101, "target": 1133787}, {"source": 817101, "target": 817375}, {"source": 817101, "target": 1133791}, {"source": 817101, "target": 940768}, {"source": 817101, "target": 940782}, {"source": 817101, "target": 940788}, {"source": 817101, "target": 940794}, {"source": 817101, "target": 817406}, {"source": 817101, "target": 940798}, {"source": 817101, "target": 940809}, {"source": 817101, "target": 1092880}, {"source": 817101, "target": 817437}, {"source": 817101, "target": 940841}, {"source": 817101, "target": 816938}, {"source": 817101, "target": 1092911}, {"source": 817101, "target": 817458}, {"source": 817101, "target": 1092928}, {"source": 817101, "target": 988996}, {"source": 817101, "target": 816970}, {"source": 817101, "target": 1092947}, {"source": 817101, "target": 1092948}, {"source": 817101, "target": 816979}, {"source": 817101, "target": 989017}, {"source": 817101, "target": 816989}, {"source": 817101, "target": 1179998}, {"source": 817101, "target": 989030}, {"source": 817101, "target": 817022}, {"source": 817101, "target": 989078}, {"source": 817101, "target": 989079}, {"source": 817101, "target": 987552}, {"source": 817101, "target": 817063}, {"source": 817101, "target": 817094}, {"source": 817101, "target": 885200}, {"source": 817101, "target": 885203}, {"source": 817101, "target": 885209}, {"source": 817101, "target": 885211}, {"source": 817101, "target": 987101}, {"source": 817101, "target": 817119}, {"source": 817101, "target": 817121}, {"source": 817101, "target": 817125}, {"source": 817101, "target": 817127}, {"source": 817101, "target": 817136}, {"source": 817101, "target": 817139}, {"source": 817101, "target": 817141}, {"source": 817101, "target": 885242}, {"source": 1092911, "target": 885248}, {"source": 1092911, "target": 957958}, {"source": 1092911, "target": 817287}, {"source": 1092911, "target": 817165}, {"source": 1092911, "target": 861455}, {"source": 1092911, "target": 989078}, {"source": 1092911, "target": 989079}, {"source": 1092911, "target": 1391265}, {"source": 1092911, "target": 905898}, {"source": 1092911, "target": 1092913}, {"source": 1092911, "target": 846898}, {"source": 1092911, "target": 996152}, {"source": 1092911, "target": 846915}, {"source": 1092911, "target": 817094}, {"source": 1092911, "target": 954825}, {"source": 1092911, "target": 817101}, {"source": 1092911, "target": 817361}, {"source": 1092911, "target": 1133778}, {"source": 1092911, "target": 846931}, {"source": 1092911, "target": 940756}, {"source": 1092911, "target": 885203}, {"source": 1092911, "target": 846933}, {"source": 1092911, "target": 940759}, {"source": 1092911, "target": 987099}, {"source": 1092911, "target": 989020}, {"source": 1092911, "target": 987101}, {"source": 1092911, "target": 1179998}, {"source": 1092911, "target": 817375}, {"source": 1092911, "target": 1133791}, {"source": 1092911, "target": 817127}, {"source": 1092911, "target": 846963}, {"source": 1092911, "target": 885243}, {"source": 1092911, "target": 817406}, {"source": 1133778, "target": 885248}, {"source": 1133778, "target": 1391265}, {"source": 1133778, "target": 817375}, {"source": 1133778, "target": 817127}, {"source": 1133778, "target": 817287}, {"source": 1133778, "target": 905898}, {"source": 1133778, "target": 817165}, {"source": 1133778, "target": 817101}, {"source": 1133778, "target": 1092911}, {"source": 1133778, "target": 846898}, {"source": 1133778, "target": 846931}, {"source": 1133778, "target": 940756}, {"source": 1133778, "target": 885203}, {"source": 1133778, "target": 989079}, {"source": 1133778, "target": 1179998}, {"source": 1133778, "target": 1133791}, {"source": 846931, "target": 885248}, {"source": 846931, "target": 817025}, {"source": 846931, "target": 817154}, {"source": 846931, "target": 817414}, {"source": 846931, "target": 817287}, {"source": 846931, "target": 817160}, {"source": 846931, "target": 817165}, {"source": 846931, "target": 817039}, {"source": 846931, "target": 817429}, {"source": 846931, "target": 989079}, {"source": 846931, "target": 817305}, {"source": 846931, "target": 1391265}, {"source": 846931, "target": 1092897}, {"source": 846931, "target": 817060}, {"source": 846931, "target": 987558}, {"source": 846931, "target": 905898}, {"source": 846931, "target": 855982}, {"source": 846931, "target": 1092911}, {"source": 846931, "target": 823344}, {"source": 846931, "target": 958769}, {"source": 846931, "target": 846898}, {"source": 846931, "target": 846905}, {"source": 846931, "target": 816960}, {"source": 846931, "target": 817354}, {"source": 846931, "target": 989900}, {"source": 846931, "target": 817101}, {"source": 846931, "target": 1092944}, {"source": 846931, "target": 1133778}, {"source": 846931, "target": 885203}, {"source": 846931, "target": 940756}, {"source": 846931, "target": 817236}, {"source": 846931, "target": 846936}, {"source": 846931, "target": 987611}, {"source": 846931, "target": 1133916}, {"source": 846931, "target": 1179998}, {"source": 846931, "target": 817375}, {"source": 846931, "target": 1133791}, {"source": 846931, "target": 1133920}, {"source": 846931, "target": 817249}, {"source": 846931, "target": 817127}, {"source": 846931, "target": 817256}, {"source": 846931, "target": 885229}, {"source": 846931, "target": 817265}, {"source": 846931, "target": 940789}, {"source": 846931, "target": 905846}, {"source": 846931, "target": 885239}, {"source": 846931, "target": 846968}, {"source": 846931, "target": 817406}, {"source": 846931, "target": 940799}, {"source": 940756, "target": 885248}, {"source": 940756, "target": 957958}, {"source": 940756, "target": 817287}, {"source": 940756, "target": 1092872}, {"source": 940756, "target": 817165}, {"source": 940756, "target": 861455}, {"source": 940756, "target": 989078}, {"source": 940756, "target": 989079}, {"source": 940756, "target": 817177}, {"source": 940756, "target": 989085}, {"source": 940756, "target": 1391265}, {"source": 940756, "target": 817147}, {"source": 940756, "target": 905898}, {"source": 940756, "target": 1092911}, {"source": 940756, "target": 1092913}, {"source": 940756, "target": 846898}, {"source": 940756, "target": 996152}, {"source": 940756, "target": 846915}, {"source": 940756, "target": 817094}, {"source": 940756, "target": 954825}, {"source": 940756, "target": 817353}, {"source": 940756, "target": 817101}, {"source": 940756, "target": 817361}, {"source": 940756, "target": 1133778}, {"source": 940756, "target": 846931}, {"source": 940756, "target": 885203}, {"source": 940756, "target": 846933}, {"source": 940756, "target": 940759}, {"source": 940756, "target": 987099}, {"source": 940756, "target": 989020}, {"source": 940756, "target": 987101}, {"source": 940756, "target": 1179998}, {"source": 940756, "target": 817375}, {"source": 940756, "target": 1133791}, {"source": 940756, "target": 817127}, {"source": 940756, "target": 846963}, {"source": 940756, "target": 885243}, {"source": 940756, "target": 817406}, {"source": 940756, "target": 817279}, {"source": 846898, "target": 885248}, {"source": 846898, "target": 957958}, {"source": 846898, "target": 817287}, {"source": 846898, "target": 1092872}, {"source": 846898, "target": 817165}, {"source": 846898, "target": 861455}, {"source": 846898, "target": 989078}, {"source": 846898, "target": 989079}, {"source": 846898, "target": 817047}, {"source": 846898, "target": 817177}, {"source": 846898, "target": 817306}, {"source": 846898, "target": 989085}, {"source": 846898, "target": 1391265}, {"source": 846898, "target": 817147}, {"source": 846898, "target": 905898}, {"source": 846898, "target": 1092911}, {"source": 846898, "target": 1092913}, {"source": 846898, "target": 996152}, {"source": 846898, "target": 846915}, {"source": 846898, "target": 817094}, {"source": 846898, "target": 954825}, {"source": 846898, "target": 817353}, {"source": 846898, "target": 817101}, {"source": 846898, "target": 817361}, {"source": 846898, "target": 1133778}, {"source": 846898, "target": 846931}, {"source": 846898, "target": 940756}, {"source": 846898, "target": 885203}, {"source": 846898, "target": 846933}, {"source": 846898, "target": 940759}, {"source": 846898, "target": 987099}, {"source": 846898, "target": 989020}, {"source": 846898, "target": 987101}, {"source": 846898, "target": 1179998}, {"source": 846898, "target": 817375}, {"source": 846898, "target": 1133791}, {"source": 846898, "target": 817127}, {"source": 846898, "target": 846963}, {"source": 846898, "target": 885243}, {"source": 846898, "target": 817406}, {"source": 846898, "target": 817279}, {"source": 885203, "target": 885248}, {"source": 885203, "target": 957958}, {"source": 885203, "target": 817287}, {"source": 885203, "target": 1092872}, {"source": 885203, "target": 817165}, {"source": 885203, "target": 861455}, {"source": 885203, "target": 989078}, {"source": 885203, "target": 989079}, {"source": 885203, "target": 817047}, {"source": 885203, "target": 817177}, {"source": 885203, "target": 817306}, {"source": 885203, "target": 989085}, {"source": 885203, "target": 1391265}, {"source": 885203, "target": 817147}, {"source": 885203, "target": 905898}, {"source": 885203, "target": 1092911}, {"source": 885203, "target": 1092913}, {"source": 885203, "target": 846898}, {"source": 885203, "target": 996152}, {"source": 885203, "target": 846915}, {"source": 885203, "target": 817094}, {"source": 885203, "target": 954825}, {"source": 885203, "target": 817353}, {"source": 885203, "target": 817101}, {"source": 885203, "target": 817361}, {"source": 885203, "target": 1133778}, {"source": 885203, "target": 846931}, {"source": 885203, "target": 940756}, {"source": 885203, "target": 846933}, {"source": 885203, "target": 940759}, {"source": 885203, "target": 987099}, {"source": 885203, "target": 989020}, {"source": 885203, "target": 987101}, {"source": 885203, "target": 1179998}, {"source": 885203, "target": 817375}, {"source": 885203, "target": 1133791}, {"source": 885203, "target": 817127}, {"source": 885203, "target": 846963}, {"source": 885203, "target": 885243}, {"source": 885203, "target": 817406}, {"source": 885203, "target": 817279}, {"source": 989079, "target": 885248}, {"source": 989079, "target": 957958}, {"source": 989079, "target": 817287}, {"source": 989079, "target": 1092872}, {"source": 989079, "target": 817165}, {"source": 989079, "target": 861455}, {"source": 989079, "target": 989078}, {"source": 989079, "target": 817177}, {"source": 989079, "target": 989085}, {"source": 989079, "target": 1391265}, {"source": 989079, "target": 817147}, {"source": 989079, "target": 905898}, {"source": 989079, "target": 1092911}, {"source": 989079, "target": 1092913}, {"source": 989079, "target": 846898}, {"source": 989079, "target": 996152}, {"source": 989079, "target": 846915}, {"source": 989079, "target": 817094}, {"source": 989079, "target": 954825}, {"source": 989079, "target": 817353}, {"source": 989079, "target": 817101}, {"source": 989079, "target": 817361}, {"source": 989079, "target": 1133778}, {"source": 989079, "target": 846931}, {"source": 989079, "target": 940756}, {"source": 989079, "target": 885203}, {"source": 989079, "target": 846933}, {"source": 989079, "target": 940759}, {"source": 989079, "target": 987099}, {"source": 989079, "target": 989020}, {"source": 989079, "target": 987101}, {"source": 989079, "target": 1179998}, {"source": 989079, "target": 817375}, {"source": 989079, "target": 1133791}, {"source": 989079, "target": 817127}, {"source": 989079, "target": 846963}, {"source": 989079, "target": 885243}, {"source": 989079, "target": 817406}, {"source": 989079, "target": 817279}, {"source": 1179998, "target": 885248}, {"source": 1179998, "target": 1391265}, {"source": 1179998, "target": 817375}, {"source": 1179998, "target": 817127}, {"source": 1179998, "target": 817287}, {"source": 1179998, "target": 905898}, {"source": 1179998, "target": 817165}, {"source": 1179998, "target": 817101}, {"source": 1179998, "target": 1092911}, {"source": 1179998, "target": 1133778}, {"source": 1179998, "target": 846931}, {"source": 1179998, "target": 940756}, {"source": 1179998, "target": 846898}, {"source": 1179998, "target": 885203}, {"source": 1179998, "target": 989079}, {"source": 1179998, "target": 1133791}, {"source": 817375, "target": 885248}, {"source": 817375, "target": 957958}, {"source": 817375, "target": 817287}, {"source": 817375, "target": 1092872}, {"source": 817375, "target": 817165}, {"source": 817375, "target": 861455}, {"source": 817375, "target": 989078}, {"source": 817375, "target": 989079}, {"source": 817375, "target": 817047}, {"source": 817375, "target": 817177}, {"source": 817375, "target": 817306}, {"source": 817375, "target": 989085}, {"source": 817375, "target": 1391265}, {"source": 817375, "target": 817147}, {"source": 817375, "target": 905898}, {"source": 817375, "target": 1092911}, {"source": 817375, "target": 1092913}, {"source": 817375, "target": 846898}, {"source": 817375, "target": 817331}, {"source": 817375, "target": 996152}, {"source": 817375, "target": 846915}, {"source": 817375, "target": 817094}, {"source": 817375, "target": 954825}, {"source": 817375, "target": 817353}, {"source": 817375, "target": 817101}, {"source": 817375, "target": 817361}, {"source": 817375, "target": 1133778}, {"source": 817375, "target": 846931}, {"source": 817375, "target": 940756}, {"source": 817375, "target": 885203}, {"source": 817375, "target": 846933}, {"source": 817375, "target": 940759}, {"source": 817375, "target": 987099}, {"source": 817375, "target": 989020}, {"source": 817375, "target": 987101}, {"source": 817375, "target": 1179998}, {"source": 817375, "target": 1133791}, {"source": 817375, "target": 817126}, {"source": 817375, "target": 817127}, {"source": 817375, "target": 846963}, {"source": 817375, "target": 885243}, {"source": 817375, "target": 817406}, {"source": 817375, "target": 817279}, {"source": 940807, "target": 940801}, {"source": 940807, "target": 846983}, {"source": 940807, "target": 817163}, {"source": 940807, "target": 940812}, {"source": 940807, "target": 988302}, {"source": 940807, "target": 817422}, {"source": 940807, "target": 1179538}, {"source": 940807, "target": 817429}, {"source": 940807, "target": 817047}, {"source": 940807, "target": 817049}, {"source": 940807, "target": 817307}, {"source": 940807, "target": 987933}, {"source": 940807, "target": 1391264}, {"source": 940807, "target": 1092897}, {"source": 940807, "target": 817315}, {"source": 940807, "target": 817317}, {"source": 940807, "target": 817191}, {"source": 940807, "target": 817065}, {"source": 940807, "target": 1133995}, {"source": 940807, "target": 851371}, {"source": 940807, "target": 996152}, {"source": 940807, "target": 817208}, {"source": 940807, "target": 1412285}, {"source": 940807, "target": 846909}, {"source": 940807, "target": 1134015}, {"source": 940807, "target": 905919}, {"source": 940807, "target": 817344}, {"source": 940807, "target": 1134019}, {"source": 940807, "target": 954950}, {"source": 940807, "target": 846919}, {"source": 940807, "target": 817354}, {"source": 940807, "target": 817228}, {"source": 940807, "target": 989006}, {"source": 940807, "target": 1092952}, {"source": 940807, "target": 1183963}, {"source": 940807, "target": 816990}, {"source": 940807, "target": 940768}, {"source": 940807, "target": 846947}, {"source": 940807, "target": 885239}, {"source": 940807, "target": 846949}, {"source": 940807, "target": 940774}, {"source": 940807, "target": 817000}, {"source": 940807, "target": 817258}, {"source": 940807, "target": 940779}, {"source": 940807, "target": 885229}, {"source": 940807, "target": 817140}, {"source": 940807, "target": 940789}, {"source": 940807, "target": 817270}, {"source": 940807, "target": 905846}, {"source": 940807, "target": 885243}, {"source": 817422, "target": 817160}, {"source": 817422, "target": 817177}, {"source": 817422, "target": 957469}, {"source": 817422, "target": 817191}, {"source": 817422, "target": 817199}, {"source": 817422, "target": 817204}, {"source": 817422, "target": 817205}, {"source": 817422, "target": 846909}, {"source": 817422, "target": 817218}, {"source": 817422, "target": 846917}, {"source": 817422, "target": 817230}, {"source": 817422, "target": 817232}, {"source": 817422, "target": 846933}, {"source": 817422, "target": 817237}, {"source": 817422, "target": 817249}, {"source": 817422, "target": 846949}, {"source": 817422, "target": 1132146}, {"source": 817422, "target": 846963}, {"source": 817422, "target": 817270}, {"source": 817422, "target": 905846}, {"source": 817422, "target": 988302}, {"source": 817422, "target": 817300}, {"source": 817422, "target": 817317}, {"source": 817422, "target": 905898}, {"source": 817422, "target": 817324}, {"source": 817422, "target": 817328}, {"source": 817422, "target": 817329}, {"source": 817422, "target": 817330}, {"source": 817422, "target": 817338}, {"source": 817422, "target": 1412285}, {"source": 817422, "target": 905919}, {"source": 817422, "target": 1183963}, {"source": 817422, "target": 940768}, {"source": 817422, "target": 940771}, {"source": 817422, "target": 940773}, {"source": 817422, "target": 940774}, {"source": 817422, "target": 940782}, {"source": 817422, "target": 940800}, {"source": 817422, "target": 940801}, {"source": 817422, "target": 817410}, {"source": 817422, "target": 940805}, {"source": 817422, "target": 940807}, {"source": 817422, "target": 940809}, {"source": 817422, "target": 1092881}, {"source": 817422, "target": 817429}, {"source": 817422, "target": 987933}, {"source": 817422, "target": 817442}, {"source": 817422, "target": 951089}, {"source": 817422, "target": 990002}, {"source": 817422, "target": 817463}, {"source": 817422, "target": 996152}, {"source": 817422, "target": 1092921}, {"source": 817422, "target": 817464}, {"source": 817422, "target": 816961}, {"source": 817422, "target": 988995}, {"source": 817422, "target": 989006}, {"source": 817422, "target": 816979}, {"source": 817422, "target": 989015}, {"source": 817422, "target": 816990}, {"source": 817422, "target": 817012}, {"source": 817422, "target": 817039}, {"source": 817422, "target": 1179538}, {"source": 817422, "target": 817044}, {"source": 817422, "target": 817049}, {"source": 817422, "target": 817063}, {"source": 817422, "target": 817065}, {"source": 817422, "target": 1133995}, {"source": 817422, "target": 817068}, {"source": 817422, "target": 817069}, {"source": 817422, "target": 817074}, {"source": 817422, "target": 963001}, {"source": 817422, "target": 1134015}, {"source": 817422, "target": 1134019}, {"source": 817422, "target": 817109}, {"source": 817422, "target": 885207}, {"source": 817422, "target": 885208}, {"source": 817422, "target": 885209}, {"source": 817422, "target": 885211}, {"source": 817422, "target": 817119}, {"source": 817422, "target": 817125}, {"source": 817422, "target": 817126}, {"source": 817422, "target": 817127}, {"source": 817422, "target": 885224}, {"source": 817422, "target": 817132}, {"source": 817422, "target": 885229}, {"source": 817422, "target": 817133}, {"source": 817422, "target": 817139}, {"source": 817422, "target": 817140}, {"source": 817422, "target": 885242}, {"source": 817422, "target": 885243}, {"source": 988302, "target": 940801}, {"source": 988302, "target": 817410}, {"source": 988302, "target": 940807}, {"source": 988302, "target": 940809}, {"source": 988302, "target": 940812}, {"source": 988302, "target": 817422}, {"source": 988302, "target": 1179538}, {"source": 988302, "target": 817044}, {"source": 988302, "target": 817047}, {"source": 988302, "target": 817049}, {"source": 988302, "target": 817307}, {"source": 988302, "target": 1391264}, {"source": 988302, "target": 1092897}, {"source": 988302, "target": 817442}, {"source": 988302, "target": 817315}, {"source": 988302, "target": 817317}, {"source": 988302, "target": 817191}, {"source": 988302, "target": 817063}, {"source": 988302, "target": 817065}, {"source": 988302, "target": 1133995}, {"source": 988302, "target": 851371}, {"source": 988302, "target": 817204}, {"source": 988302, "target": 996152}, {"source": 988302, "target": 817208}, {"source": 988302, "target": 1412285}, {"source": 988302, "target": 846909}, {"source": 988302, "target": 1134015}, {"source": 988302, "target": 905919}, {"source": 988302, "target": 1134019}, {"source": 988302, "target": 954950}, {"source": 988302, "target": 846919}, {"source": 988302, "target": 817351}, {"source": 988302, "target": 817354}, {"source": 988302, "target": 989006}, {"source": 988302, "target": 817109}, {"source": 988302, "target": 1092952}, {"source": 988302, "target": 1183963}, {"source": 988302, "target": 816990}, {"source": 988302, "target": 940768}, {"source": 988302, "target": 846947}, {"source": 988302, "target": 846949}, {"source": 988302, "target": 940774}, {"source": 988302, "target": 817000}, {"source": 988302, "target": 817258}, {"source": 988302, "target": 940779}, {"source": 988302, "target": 885229}, {"source": 988302, "target": 817140}, {"source": 988302, "target": 940789}, {"source": 988302, "target": 817270}, {"source": 988302, "target": 905846}, {"source": 988302, "target": 885243}, {"source": 1179538, "target": 940807}, {"source": 1179538, "target": 988302}, {"source": 1179538, "target": 817422}, {"source": 1179538, "target": 817049}, {"source": 1179538, "target": 817191}, {"source": 1179538, "target": 817065}, {"source": 1179538, "target": 1133995}, {"source": 1179538, "target": 996152}, {"source": 1179538, "target": 1412285}, {"source": 1179538, "target": 846909}, {"source": 1179538, "target": 1134015}, {"source": 1179538, "target": 905919}, {"source": 1179538, "target": 1134019}, {"source": 1179538, "target": 989006}, {"source": 1179538, "target": 1183963}, {"source": 1179538, "target": 846949}, {"source": 1179538, "target": 885229}, {"source": 1179538, "target": 817140}, {"source": 1179538, "target": 817270}, {"source": 817049, "target": 817154}, {"source": 817049, "target": 885251}, {"source": 817049, "target": 988678}, {"source": 817049, "target": 817177}, {"source": 817049, "target": 817181}, {"source": 817049, "target": 817191}, {"source": 817049, "target": 817205}, {"source": 817049, "target": 846909}, {"source": 817049, "target": 817228}, {"source": 817049, "target": 817230}, {"source": 817049, "target": 817232}, {"source": 817049, "target": 817238}, {"source": 817049, "target": 817244}, {"source": 817049, "target": 817249}, {"source": 817049, "target": 846946}, {"source": 817049, "target": 846949}, {"source": 817049, "target": 846950}, {"source": 817049, "target": 817256}, {"source": 817049, "target": 817258}, {"source": 817049, "target": 1132146}, {"source": 817049, "target": 817270}, {"source": 817049, "target": 817279}, {"source": 817049, "target": 817280}, {"source": 817049, "target": 817293}, {"source": 817049, "target": 988302}, {"source": 817049, "target": 817296}, {"source": 817049, "target": 817300}, {"source": 817049, "target": 817305}, {"source": 817049, "target": 817330}, {"source": 817049, "target": 817331}, {"source": 817049, "target": 1412285}, {"source": 817049, "target": 905919}, {"source": 817049, "target": 940755}, {"source": 817049, "target": 940761}, {"source": 817049, "target": 1183963}, {"source": 817049, "target": 940767}, {"source": 817049, "target": 940777}, {"source": 817049, "target": 817406}, {"source": 817049, "target": 940801}, {"source": 817049, "target": 940803}, {"source": 817049, "target": 817412}, {"source": 817049, "target": 940805}, {"source": 817049, "target": 972549}, {"source": 817049, "target": 940807}, {"source": 817049, "target": 817422}, {"source": 817049, "target": 817423}, {"source": 817049, "target": 817429}, {"source": 817049, "target": 1092906}, {"source": 817049, "target": 817458}, {"source": 817049, "target": 996152}, {"source": 817049, "target": 1092926}, {"source": 817049, "target": 989006}, {"source": 817049, "target": 1092943}, {"source": 817049, "target": 816977}, {"source": 817049, "target": 1133907}, {"source": 817049, "target": 989030}, {"source": 817049, "target": 1133927}, {"source": 817049, "target": 817000}, {"source": 817049, "target": 817012}, {"source": 817049, "target": 817014}, {"source": 817049, "target": 817039}, {"source": 817049, "target": 1179538}, {"source": 817049, "target": 989085}, {"source": 817049, "target": 817058}, {"source": 817049, "target": 817060}, {"source": 817049, "target": 861608}, {"source": 817049, "target": 817065}, {"source": 817049, "target": 1133995}, {"source": 817049, "target": 817068}, {"source": 817049, "target": 817069}, {"source": 817049, "target": 855982}, {"source": 817049, "target": 817074}, {"source": 817049, "target": 817081}, {"source": 817049, "target": 1134015}, {"source": 817049, "target": 1134019}, {"source": 817049, "target": 817094}, {"source": 817049, "target": 817106}, {"source": 817049, "target": 861655}, {"source": 817049, "target": 885208}, {"source": 817049, "target": 817114}, {"source": 817049, "target": 817121}, {"source": 817049, "target": 817127}, {"source": 817049, "target": 817132}, {"source": 817049, "target": 885229}, {"source": 817049, "target": 817140}, {"source": 817049, "target": 817141}, {"source": 817049, "target": 885242}, {"source": 817049, "target": 885243}, {"source": 817191, "target": 885250}, {"source": 817191, "target": 817165}, {"source": 817191, "target": 817172}, {"source": 817191, "target": 817177}, {"source": 817191, "target": 957469}, {"source": 817191, "target": 817205}, {"source": 817191, "target": 817206}, {"source": 817191, "target": 846909}, {"source": 817191, "target": 846915}, {"source": 817191, "target": 846918}, {"source": 817191, "target": 817230}, {"source": 817191, "target": 846928}, {"source": 817191, "target": 817239}, {"source": 817191, "target": 817244}, {"source": 817191, "target": 956516}, {"source": 817191, "target": 846949}, {"source": 817191, "target": 1132146}, {"source": 817191, "target": 988789}, {"source": 817191, "target": 817270}, {"source": 817191, "target": 846971}, {"source": 817191, "target": 846972}, {"source": 817191, "target": 846973}, {"source": 817191, "target": 817287}, {"source": 817191, "target": 988301}, {"source": 817191, "target": 988302}, {"source": 817191, "target": 817296}, {"source": 817191, "target": 817306}, {"source": 817191, "target": 1391264}, {"source": 817191, "target": 817330}, {"source": 817191, "target": 817331}, {"source": 817191, "target": 817332}, {"source": 817191, "target": 1412285}, {"source": 817191, "target": 905919}, {"source": 817191, "target": 817351}, {"source": 817191, "target": 817352}, {"source": 817191, "target": 817354}, {"source": 817191, "target": 817357}, {"source": 817191, "target": 817361}, {"source": 817191, "target": 940760}, {"source": 817191, "target": 1183963}, {"source": 817191, "target": 940774}, {"source": 817191, "target": 940794}, {"source": 817191, "target": 940798}, {"source": 817191, "target": 940801}, {"source": 817191, "target": 817410}, {"source": 817191, "target": 940803}, {"source": 817191, "target": 817412}, {"source": 817191, "target": 940805}, {"source": 817191, "target": 972550}, {"source": 817191, "target": 940807}, {"source": 817191, "target": 1136397}, {"source": 817191, "target": 817422}, {"source": 817191, "target": 817429}, {"source": 817191, "target": 987933}, {"source": 817191, "target": 940841}, {"source": 817191, "target": 816938}, {"source": 817191, "target": 817453}, {"source": 817191, "target": 951089}, {"source": 817191, "target": 817458}, {"source": 817191, "target": 996152}, {"source": 817191, "target": 988994}, {"source": 817191, "target": 988996}, {"source": 817191, "target": 1092940}, {"source": 817191, "target": 989006}, {"source": 817191, "target": 816990}, {"source": 817191, "target": 989030}, {"source": 817191, "target": 817017}, {"source": 817191, "target": 817038}, {"source": 817191, "target": 1179538}, {"source": 817191, "target": 817049}, {"source": 817191, "target": 817057}, {"source": 817191, "target": 861608}, {"source": 817191, "target": 817065}, {"source": 817191, "target": 1133995}, {"source": 817191, "target": 817068}, {"source": 817191, "target": 817069}, {"source": 817191, "target": 958896}, {"source": 817191, "target": 855985}, {"source": 817191, "target": 817074}, {"source": 817191, "target": 1134015}, {"source": 817191, "target": 1134019}, {"source": 817191, "target": 945092}, {"source": 817191, "target": 817109}, {"source": 817191, "target": 861655}, {"source": 817191, "target": 885214}, {"source": 817191, "target": 885217}, {"source": 817191, "target": 885218}, {"source": 817191, "target": 817125}, {"source": 817191, "target": 817126}, {"source": 817191, "target": 817127}, {"source": 817191, "target": 817132}, {"source": 817191, "target": 885229}, {"source": 817191, "target": 817133}, {"source": 817191, "target": 817140}, {"source": 817191, "target": 885239}, {"source": 817191, "target": 817144}, {"source": 817191, "target": 885243}, {"source": 817065, "target": 940803}, {"source": 817065, "target": 940805}, {"source": 817065, "target": 957958}, {"source": 817065, "target": 940807}, {"source": 817065, "target": 817293}, {"source": 817065, "target": 988302}, {"source": 817065, "target": 817422}, {"source": 817065, "target": 1179538}, {"source": 817065, "target": 817429}, {"source": 817065, "target": 817049}, {"source": 817065, "target": 817177}, {"source": 817065, "target": 817180}, {"source": 817065, "target": 1134112}, {"source": 817065, "target": 1134115}, {"source": 817065, "target": 1134118}, {"source": 817065, "target": 817191}, {"source": 817065, "target": 861608}, {"source": 817065, "target": 1133995}, {"source": 817065, "target": 817196}, {"source": 817065, "target": 846893}, {"source": 817065, "target": 817069}, {"source": 817065, "target": 817455}, {"source": 817065, "target": 817074}, {"source": 817065, "target": 817331}, {"source": 817065, "target": 817205}, {"source": 817065, "target": 996152}, {"source": 817065, "target": 1412285}, {"source": 817065, "target": 846909}, {"source": 817065, "target": 1134015}, {"source": 817065, "target": 905919}, {"source": 817065, "target": 988994}, {"source": 817065, "target": 1134019}, {"source": 817065, "target": 816970}, {"source": 817065, "target": 1092940}, {"source": 817065, "target": 817228}, {"source": 817065, "target": 989006}, {"source": 817065, "target": 817357}, {"source": 817065, "target": 905681}, {"source": 817065, "target": 817236}, {"source": 817065, "target": 817237}, {"source": 817065, "target": 861655}, {"source": 817065, "target": 846936}, {"source": 817065, "target": 816985}, {"source": 817065, "target": 1183963}, {"source": 817065, "target": 817244}, {"source": 817065, "target": 913627}, {"source": 817065, "target": 885215}, {"source": 817065, "target": 885216}, {"source": 817065, "target": 940768}, {"source": 817065, "target": 989026}, {"source": 817065, "target": 817376}, {"source": 817065, "target": 846949}, {"source": 817065, "target": 817126}, {"source": 817065, "target": 817127}, {"source": 817065, "target": 885224}, {"source": 817065, "target": 885222}, {"source": 817065, "target": 817258}, {"source": 817065, "target": 816997}, {"source": 817065, "target": 817132}, {"source": 817065, "target": 885229}, {"source": 817065, "target": 817133}, {"source": 817065, "target": 817136}, {"source": 817065, "target": 817140}, {"source": 817065, "target": 817012}, {"source": 817065, "target": 817270}, {"source": 817065, "target": 846965}, {"source": 817065, "target": 988788}, {"source": 817065, "target": 940789}, {"source": 817065, "target": 817141}, {"source": 817065, "target": 817020}, {"source": 817065, "target": 940798}, {"source": 817065, "target": 817279}, {"source": 1133995, "target": 940801}, {"source": 1133995, "target": 940805}, {"source": 1133995, "target": 940807}, {"source": 1133995, "target": 988302}, {"source": 1133995, "target": 817422}, {"source": 1133995, "target": 1179538}, {"source": 1133995, "target": 817429}, {"source": 1133995, "target": 817049}, {"source": 1133995, "target": 817177}, {"source": 1133995, "target": 957469}, {"source": 1133995, "target": 817191}, {"source": 1133995, "target": 817065}, {"source": 1133995, "target": 817068}, {"source": 1133995, "target": 817069}, {"source": 1133995, "target": 817074}, {"source": 1133995, "target": 817205}, {"source": 1133995, "target": 996152}, {"source": 1133995, "target": 1412285}, {"source": 1133995, "target": 846909}, {"source": 1133995, "target": 1134015}, {"source": 1133995, "target": 905919}, {"source": 1133995, "target": 1134019}, {"source": 1133995, "target": 989006}, {"source": 1133995, "target": 1183963}, {"source": 1133995, "target": 846949}, {"source": 1133995, "target": 817126}, {"source": 1133995, "target": 817127}, {"source": 1133995, "target": 885229}, {"source": 1133995, "target": 817133}, {"source": 1133995, "target": 1132146}, {"source": 1133995, "target": 817140}, {"source": 1133995, "target": 817270}, {"source": 996152, "target": 817154}, {"source": 996152, "target": 885251}, {"source": 996152, "target": 885252}, {"source": 996152, "target": 957958}, {"source": 996152, "target": 817165}, {"source": 996152, "target": 987161}, {"source": 996152, "target": 957474}, {"source": 996152, "target": 817191}, {"source": 996152, "target": 846898}, {"source": 996152, "target": 846909}, {"source": 996152, "target": 817230}, {"source": 996152, "target": 817237}, {"source": 996152, "target": 817238}, {"source": 996152, "target": 846936}, {"source": 996152, "target": 817244}, {"source": 996152, "target": 846949}, {"source": 996152, "target": 846965}, {"source": 996152, "target": 817270}, {"source": 996152, "target": 817287}, {"source": 996152, "target": 817293}, {"source": 996152, "target": 988302}, {"source": 996152, "target": 988301}, {"source": 996152, "target": 905877}, {"source": 996152, "target": 905898}, {"source": 996152, "target": 817330}, {"source": 996152, "target": 817331}, {"source": 996152, "target": 1412285}, {"source": 996152, "target": 905919}, {"source": 996152, "target": 817344}, {"source": 996152, "target": 817354}, {"source": 996152, "target": 940756}, {"source": 996152, "target": 1183963}, {"source": 996152, "target": 817375}, {"source": 996152, "target": 940769}, {"source": 996152, "target": 940776}, {"source": 996152, "target": 940794}, {"source": 996152, "target": 817406}, {"source": 996152, "target": 940798}, {"source": 996152, "target": 940803}, {"source": 996152, "target": 1133830}, {"source": 996152, "target": 940807}, {"source": 996152, "target": 972550}, {"source": 996152, "target": 817422}, {"source": 996152, "target": 1409308}, {"source": 996152, "target": 1092900}, {"source": 996152, "target": 940841}, {"source": 996152, "target": 1092911}, {"source": 996152, "target": 1092913}, {"source": 996152, "target": 1092915}, {"source": 996152, "target": 988996}, {"source": 996152, "target": 1092940}, {"source": 996152, "target": 989006}, {"source": 996152, "target": 1092950}, {"source": 996152, "target": 989029}, {"source": 996152, "target": 989030}, {"source": 996152, "target": 903020}, {"source": 996152, "target": 817012}, {"source": 996152, "target": 1179538}, {"source": 996152, "target": 989079}, {"source": 996152, "target": 817049}, {"source": 996152, "target": 987560}, {"source": 996152, "target": 817065}, {"source": 996152, "target": 861608}, {"source": 996152, "target": 1133995}, {"source": 996152, "target": 987564}, {"source": 996152, "target": 1134015}, {"source": 996152, "target": 1134019}, {"source": 996152, "target": 817094}, {"source": 996152, "target": 885203}, {"source": 996152, "target": 885206}, {"source": 996152, "target": 885207}, {"source": 996152, "target": 861655}, {"source": 996152, "target": 987101}, {"source": 996152, "target": 817121}, {"source": 996152, "target": 885222}, {"source": 996152, "target": 885224}, {"source": 996152, "target": 817132}, {"source": 996152, "target": 885229}, {"source": 996152, "target": 817140}, {"source": 996152, "target": 885243}, {"source": 846909, "target": 940803}, {"source": 846909, "target": 957958}, {"source": 846909, "target": 940807}, {"source": 846909, "target": 988302}, {"source": 846909, "target": 817422}, {"source": 846909, "target": 817296}, {"source": 846909, "target": 1179538}, {"source": 846909, "target": 817429}, {"source": 846909, "target": 817049}, {"source": 846909, "target": 817191}, {"source": 846909, "target": 861608}, {"source": 846909, "target": 817065}, {"source": 846909, "target": 1133995}, {"source": 846909, "target": 817455}, {"source": 846909, "target": 817074}, {"source": 846909, "target": 817331}, {"source": 846909, "target": 817330}, {"source": 846909, "target": 817458}, {"source": 846909, "target": 817205}, {"source": 846909, "target": 996152}, {"source": 846909, "target": 1412285}, {"source": 846909, "target": 1134015}, {"source": 846909, "target": 905919}, {"source": 846909, "target": 1134019}, {"source": 846909, "target": 1092940}, {"source": 846909, "target": 989006}, {"source": 846909, "target": 816977}, {"source": 846909, "target": 940755}, {"source": 846909, "target": 861655}, {"source": 846909, "target": 885208}, {"source": 846909, "target": 1183963}, {"source": 846909, "target": 817244}, {"source": 846909, "target": 817249}, {"source": 846909, "target": 846949}, {"source": 846909, "target": 989030}, {"source": 846909, "target": 885224}, {"source": 846909, "target": 817256}, {"source": 846909, "target": 817258}, {"source": 846909, "target": 940777}, {"source": 846909, "target": 817132}, {"source": 846909, "target": 885229}, {"source": 846909, "target": 817140}, {"source": 846909, "target": 817012}, {"source": 846909, "target": 817270}, {"source": 846909, "target": 846965}, {"source": 846909, "target": 885243}, {"source": 1412285, "target": 940807}, {"source": 1412285, "target": 988302}, {"source": 1412285, "target": 817422}, {"source": 1412285, "target": 1179538}, {"source": 1412285, "target": 817049}, {"source": 1412285, "target": 817191}, {"source": 1412285, "target": 817065}, {"source": 1412285, "target": 1133995}, {"source": 1412285, "target": 996152}, {"source": 1412285, "target": 846909}, {"source": 1412285, "target": 1134015}, {"source": 1412285, "target": 905919}, {"source": 1412285, "target": 1134019}, {"source": 1412285, "target": 989006}, {"source": 1412285, "target": 1183963}, {"source": 1412285, "target": 846949}, {"source": 1412285, "target": 885229}, {"source": 1412285, "target": 817140}, {"source": 1412285, "target": 817270}, {"source": 905919, "target": 1092867}, {"source": 905919, "target": 885252}, {"source": 905919, "target": 940805}, {"source": 905919, "target": 885251}, {"source": 905919, "target": 940807}, {"source": 905919, "target": 846983}, {"source": 905919, "target": 817034}, {"source": 905919, "target": 1136397}, {"source": 905919, "target": 988302}, {"source": 905919, "target": 817422}, {"source": 905919, "target": 817038}, {"source": 905919, "target": 940814}, {"source": 905919, "target": 1179538}, {"source": 905919, "target": 817293}, {"source": 905919, "target": 817429}, {"source": 905919, "target": 817175}, {"source": 905919, "target": 817047}, {"source": 905919, "target": 817049}, {"source": 905919, "target": 817177}, {"source": 905919, "target": 817191}, {"source": 905919, "target": 817065}, {"source": 905919, "target": 1133995}, {"source": 905919, "target": 817068}, {"source": 905919, "target": 817069}, {"source": 905919, "target": 817074}, {"source": 905919, "target": 996152}, {"source": 905919, "target": 1412285}, {"source": 905919, "target": 846909}, {"source": 905919, "target": 1134015}, {"source": 905919, "target": 988994}, {"source": 905919, "target": 1134019}, {"source": 905919, "target": 846915}, {"source": 905919, "target": 817091}, {"source": 905919, "target": 988996}, {"source": 905919, "target": 817351}, {"source": 905919, "target": 817354}, {"source": 905919, "target": 989006}, {"source": 905919, "target": 817106}, {"source": 905919, "target": 817111}, {"source": 905919, "target": 1183963}, {"source": 905919, "target": 987611}, {"source": 905919, "target": 846946}, {"source": 905919, "target": 846949}, {"source": 905919, "target": 816997}, {"source": 905919, "target": 817127}, {"source": 905919, "target": 817126}, {"source": 905919, "target": 885229}, {"source": 905919, "target": 1132146}, {"source": 905919, "target": 817140}, {"source": 905919, "target": 817270}, {"source": 905919, "target": 817014}, {"source": 1134015, "target": 940801}, {"source": 1134015, "target": 940805}, {"source": 1134015, "target": 940807}, {"source": 1134015, "target": 988302}, {"source": 1134015, "target": 817422}, {"source": 1134015, "target": 1179538}, {"source": 1134015, "target": 817429}, {"source": 1134015, "target": 817049}, {"source": 1134015, "target": 817177}, {"source": 1134015, "target": 957469}, {"source": 1134015, "target": 817191}, {"source": 1134015, "target": 817065}, {"source": 1134015, "target": 1133995}, {"source": 1134015, "target": 817068}, {"source": 1134015, "target": 817069}, {"source": 1134015, "target": 817074}, {"source": 1134015, "target": 817205}, {"source": 1134015, "target": 996152}, {"source": 1134015, "target": 1412285}, {"source": 1134015, "target": 846909}, {"source": 1134015, "target": 905919}, {"source": 1134015, "target": 1134019}, {"source": 1134015, "target": 989006}, {"source": 1134015, "target": 1183963}, {"source": 1134015, "target": 846949}, {"source": 1134015, "target": 817126}, {"source": 1134015, "target": 817127}, {"source": 1134015, "target": 885229}, {"source": 1134015, "target": 817133}, {"source": 1134015, "target": 1132146}, {"source": 1134015, "target": 817140}, {"source": 1134015, "target": 817270}, {"source": 1134019, "target": 940801}, {"source": 1134019, "target": 940805}, {"source": 1134019, "target": 940807}, {"source": 1134019, "target": 988302}, {"source": 1134019, "target": 817422}, {"source": 1134019, "target": 1179538}, {"source": 1134019, "target": 817429}, {"source": 1134019, "target": 817049}, {"source": 1134019, "target": 817177}, {"source": 1134019, "target": 957469}, {"source": 1134019, "target": 817191}, {"source": 1134019, "target": 817065}, {"source": 1134019, "target": 1133995}, {"source": 1134019, "target": 817068}, {"source": 1134019, "target": 817069}, {"source": 1134019, "target": 817074}, {"source": 1134019, "target": 817205}, {"source": 1134019, "target": 996152}, {"source": 1134019, "target": 1412285}, {"source": 1134019, "target": 846909}, {"source": 1134019, "target": 1134015}, {"source": 1134019, "target": 905919}, {"source": 1134019, "target": 989006}, {"source": 1134019, "target": 1183963}, {"source": 1134019, "target": 846949}, {"source": 1134019, "target": 817126}, {"source": 1134019, "target": 817127}, {"source": 1134019, "target": 885229}, {"source": 1134019, "target": 817133}, {"source": 1134019, "target": 1132146}, {"source": 1134019, "target": 817140}, {"source": 1134019, "target": 817270}, {"source": 989006, "target": 940801}, {"source": 989006, "target": 940805}, {"source": 989006, "target": 940807}, {"source": 989006, "target": 988302}, {"source": 989006, "target": 817422}, {"source": 989006, "target": 1179538}, {"source": 989006, "target": 817429}, {"source": 989006, "target": 817049}, {"source": 989006, "target": 817177}, {"source": 989006, "target": 957469}, {"source": 989006, "target": 817191}, {"source": 989006, "target": 817065}, {"source": 989006, "target": 1133995}, {"source": 989006, "target": 817068}, {"source": 989006, "target": 817069}, {"source": 989006, "target": 846893}, {"source": 989006, "target": 817074}, {"source": 989006, "target": 817205}, {"source": 989006, "target": 996152}, {"source": 989006, "target": 1412285}, {"source": 989006, "target": 846909}, {"source": 989006, "target": 1134015}, {"source": 989006, "target": 905919}, {"source": 989006, "target": 988994}, {"source": 989006, "target": 1134019}, {"source": 989006, "target": 817357}, {"source": 989006, "target": 846936}, {"source": 989006, "target": 1183963}, {"source": 989006, "target": 940768}, {"source": 989006, "target": 846949}, {"source": 989006, "target": 817126}, {"source": 989006, "target": 817127}, {"source": 989006, "target": 885222}, {"source": 989006, "target": 885229}, {"source": 989006, "target": 817133}, {"source": 989006, "target": 1132146}, {"source": 989006, "target": 817140}, {"source": 989006, "target": 817270}, {"source": 1183963, "target": 940807}, {"source": 1183963, "target": 988302}, {"source": 1183963, "target": 817422}, {"source": 1183963, "target": 1179538}, {"source": 1183963, "target": 817049}, {"source": 1183963, "target": 817191}, {"source": 1183963, "target": 817065}, {"source": 1183963, "target": 1133995}, {"source": 1183963, "target": 996152}, {"source": 1183963, "target": 1412285}, {"source": 1183963, "target": 846909}, {"source": 1183963, "target": 1134015}, {"source": 1183963, "target": 905919}, {"source": 1183963, "target": 1134019}, {"source": 1183963, "target": 989006}, {"source": 1183963, "target": 846949}, {"source": 1183963, "target": 885229}, {"source": 1183963, "target": 817140}, {"source": 1183963, "target": 817270}, {"source": 846949, "target": 940801}, {"source": 846949, "target": 817154}, {"source": 846949, "target": 885251}, {"source": 846949, "target": 940805}, {"source": 846949, "target": 972549}, {"source": 846949, "target": 940807}, {"source": 846949, "target": 817287}, {"source": 846949, "target": 817163}, {"source": 846949, "target": 817293}, {"source": 846949, "target": 988302}, {"source": 846949, "target": 817422}, {"source": 846949, "target": 817165}, {"source": 846949, "target": 817296}, {"source": 846949, "target": 1179538}, {"source": 846949, "target": 817044}, {"source": 846949, "target": 817429}, {"source": 846949, "target": 989078}, {"source": 846949, "target": 817049}, {"source": 846949, "target": 817177}, {"source": 846949, "target": 989085}, {"source": 846949, "target": 817191}, {"source": 846949, "target": 817065}, {"source": 846949, "target": 1092906}, {"source": 846949, "target": 1133995}, {"source": 846949, "target": 817068}, {"source": 846949, "target": 817069}, {"source": 846949, "target": 823344}, {"source": 846949, "target": 817074}, {"source": 846949, "target": 996152}, {"source": 846949, "target": 817081}, {"source": 846949, "target": 1412285}, {"source": 846949, "target": 846909}, {"source": 846949, "target": 1134015}, {"source": 846949, "target": 905919}, {"source": 846949, "target": 1092926}, {"source": 846949, "target": 1134019}, {"source": 846949, "target": 989006}, {"source": 846949, "target": 1092943}, {"source": 846949, "target": 1133907}, {"source": 846949, "target": 1183963}, {"source": 846949, "target": 817244}, {"source": 846949, "target": 817119}, {"source": 846949, "target": 940768}, {"source": 846949, "target": 817121}, {"source": 846949, "target": 846946}, {"source": 846949, "target": 846947}, {"source": 846949, "target": 817376}, {"source": 846949, "target": 846950}, {"source": 846949, "target": 817127}, {"source": 846949, "target": 1133927}, {"source": 846949, "target": 940777}, {"source": 846949, "target": 885229}, {"source": 846949, "target": 1132146}, {"source": 846949, "target": 817140}, {"source": 846949, "target": 817141}, {"source": 846949, "target": 817270}, {"source": 846949, "target": 817014}, {"source": 846949, "target": 885237}, {"source": 846949, "target": 817017}, {"source": 885229, "target": 940801}, {"source": 885229, "target": 940805}, {"source": 885229, "target": 817414}, {"source": 885229, "target": 940807}, {"source": 885229, "target": 817160}, {"source": 885229, "target": 817159}, {"source": 885229, "target": 988302}, {"source": 885229, "target": 817422}, {"source": 885229, "target": 1179538}, {"source": 885229, "target": 817429}, {"source": 885229, "target": 817049}, {"source": 885229, "target": 817177}, {"source": 885229, "target": 817305}, {"source": 885229, "target": 957469}, {"source": 885229, "target": 817054}, {"source": 885229, "target": 817191}, {"source": 885229, "target": 817065}, {"source": 885229, "target": 1133995}, {"source": 885229, "target": 817068}, {"source": 885229, "target": 817069}, {"source": 885229, "target": 823344}, {"source": 885229, "target": 958769}, {"source": 885229, "target": 817074}, {"source": 885229, "target": 817206}, {"source": 885229, "target": 817463}, {"source": 885229, "target": 996152}, {"source": 885229, "target": 1412285}, {"source": 885229, "target": 846909}, {"source": 885229, "target": 1134015}, {"source": 885229, "target": 905919}, {"source": 885229, "target": 1134019}, {"source": 885229, "target": 989900}, {"source": 885229, "target": 989006}, {"source": 885229, "target": 846931}, {"source": 885229, "target": 817108}, {"source": 885229, "target": 885206}, {"source": 885229, "target": 846936}, {"source": 885229, "target": 1183963}, {"source": 885229, "target": 1133916}, {"source": 885229, "target": 987611}, {"source": 885229, "target": 1133920}, {"source": 885229, "target": 817249}, {"source": 885229, "target": 846946}, {"source": 885229, "target": 885239}, {"source": 885229, "target": 846949}, {"source": 885229, "target": 816997}, {"source": 885229, "target": 817127}, {"source": 885229, "target": 817256}, {"source": 885229, "target": 817133}, {"source": 885229, "target": 1132146}, {"source": 885229, "target": 817140}, {"source": 885229, "target": 940789}, {"source": 885229, "target": 817270}, {"source": 885229, "target": 905846}, {"source": 885229, "target": 846968}, {"source": 817140, "target": 940801}, {"source": 817140, "target": 940805}, {"source": 817140, "target": 940807}, {"source": 817140, "target": 988302}, {"source": 817140, "target": 817422}, {"source": 817140, "target": 1179538}, {"source": 817140, "target": 817429}, {"source": 817140, "target": 817049}, {"source": 817140, "target": 817177}, {"source": 817140, "target": 957469}, {"source": 817140, "target": 817181}, {"source": 817140, "target": 817060}, {"source": 817140, "target": 817191}, {"source": 817140, "target": 817065}, {"source": 817140, "target": 1133995}, {"source": 817140, "target": 817068}, {"source": 817140, "target": 817069}, {"source": 817140, "target": 846893}, {"source": 817140, "target": 817074}, {"source": 817140, "target": 817205}, {"source": 817140, "target": 996152}, {"source": 817140, "target": 1412285}, {"source": 817140, "target": 846909}, {"source": 817140, "target": 1134015}, {"source": 817140, "target": 905919}, {"source": 817140, "target": 817406}, {"source": 817140, "target": 988994}, {"source": 817140, "target": 1134019}, {"source": 817140, "target": 817357}, {"source": 817140, "target": 989006}, {"source": 817140, "target": 817236}, {"source": 817140, "target": 817238}, {"source": 817140, "target": 846936}, {"source": 817140, "target": 1183963}, {"source": 817140, "target": 885215}, {"source": 817140, "target": 940768}, {"source": 817140, "target": 846949}, {"source": 817140, "target": 817126}, {"source": 817140, "target": 817127}, {"source": 817140, "target": 885222}, {"source": 817140, "target": 816997}, {"source": 817140, "target": 885229}, {"source": 817140, "target": 817133}, {"source": 817140, "target": 1132146}, {"source": 817140, "target": 817270}, {"source": 817140, "target": 940798}, {"source": 817270, "target": 885248}, {"source": 817270, "target": 940801}, {"source": 817270, "target": 940805}, {"source": 817270, "target": 940807}, {"source": 817270, "target": 940809}, {"source": 817270, "target": 988302}, {"source": 817270, "target": 817422}, {"source": 817270, "target": 1092880}, {"source": 817270, "target": 1179538}, {"source": 817270, "target": 817429}, {"source": 817270, "target": 817049}, {"source": 817270, "target": 817177}, {"source": 817270, "target": 957469}, {"source": 817270, "target": 987552}, {"source": 817270, "target": 817057}, {"source": 817270, "target": 817058}, {"source": 817270, "target": 817191}, {"source": 817270, "target": 987559}, {"source": 817270, "target": 817065}, {"source": 817270, "target": 817063}, {"source": 817270, "target": 1133995}, {"source": 817270, "target": 817068}, {"source": 817270, "target": 817069}, {"source": 817270, "target": 817074}, {"source": 817270, "target": 817205}, {"source": 817270, "target": 817206}, {"source": 817270, "target": 996152}, {"source": 817270, "target": 1412285}, {"source": 817270, "target": 846909}, {"source": 817270, "target": 1134015}, {"source": 817270, "target": 905919}, {"source": 817270, "target": 816958}, {"source": 817270, "target": 1134019}, {"source": 817270, "target": 817229}, {"source": 817270, "target": 989006}, {"source": 817270, "target": 817106}, {"source": 817270, "target": 1092947}, {"source": 817270, "target": 816981}, {"source": 817270, "target": 940758}, {"source": 817270, "target": 817240}, {"source": 817270, "target": 1183963}, {"source": 817270, "target": 817244}, {"source": 817270, "target": 817121}, {"source": 817270, "target": 817249}, {"source": 817270, "target": 846949}, {"source": 817270, "target": 817126}, {"source": 817270, "target": 817127}, {"source": 817270, "target": 940778}, {"source": 817270, "target": 885229}, {"source": 817270, "target": 817133}, {"source": 817270, "target": 1133165}, {"source": 817270, "target": 1132146}, {"source": 817270, "target": 846963}, {"source": 817270, "target": 817140}, {"source": 817270, "target": 846964}, {"source": 817270, "target": 846965}, {"source": 817270, "target": 885242}, {"source": 817270, "target": 846973}, {"source": 940804, "target": 817280}, {"source": 940804, "target": 885251}, {"source": 940804, "target": 940810}, {"source": 940804, "target": 817293}, {"source": 940804, "target": 817423}, {"source": 940804, "target": 861455}, {"source": 940804, "target": 1092881}, {"source": 940804, "target": 817428}, {"source": 940804, "target": 817307}, {"source": 940804, "target": 817181}, {"source": 940804, "target": 957469}, {"source": 940804, "target": 817054}, {"source": 940804, "target": 817437}, {"source": 940804, "target": 817057}, {"source": 940804, "target": 1178535}, {"source": 940804, "target": 817196}, {"source": 940804, "target": 855982}, {"source": 940804, "target": 817328}, {"source": 940804, "target": 855985}, {"source": 940804, "target": 817329}, {"source": 940804, "target": 817463}, {"source": 940804, "target": 963001}, {"source": 940804, "target": 1092921}, {"source": 940804, "target": 817344}, {"source": 940804, "target": 817218}, {"source": 940804, "target": 846918}, {"source": 940804, "target": 846919}, {"source": 940804, "target": 954825}, {"source": 940804, "target": 816970}, {"source": 940804, "target": 998860}, {"source": 940804, "target": 817357}, {"source": 940804, "target": 1415757}, {"source": 940804, "target": 987343}, {"source": 940804, "target": 817228}, {"source": 940804, "target": 817361}, {"source": 940804, "target": 905681}, {"source": 940804, "target": 855801}, {"source": 940804, "target": 940758}, {"source": 940804, "target": 1133911}, {"source": 940804, "target": 940760}, {"source": 940804, "target": 989015}, {"source": 940804, "target": 1133914}, {"source": 940804, "target": 885207}, {"source": 940804, "target": 817237}, {"source": 940804, "target": 816989}, {"source": 940804, "target": 940759}, {"source": 940804, "target": 816985}, {"source": 940804, "target": 885216}, {"source": 940804, "target": 885217}, {"source": 940804, "target": 913627}, {"source": 940804, "target": 817376}, {"source": 940804, "target": 956516}, {"source": 940804, "target": 817126}, {"source": 940804, "target": 1132140}, {"source": 940804, "target": 1386097}, {"source": 940804, "target": 846963}, {"source": 940804, "target": 988788}, {"source": 940804, "target": 846965}, {"source": 940804, "target": 885239}, {"source": 940804, "target": 1132153}, {"source": 940804, "target": 817406}, {"source": 846918, "target": 817410}, {"source": 846918, "target": 1092867}, {"source": 846918, "target": 940804}, {"source": 846918, "target": 885252}, {"source": 846918, "target": 972550}, {"source": 846918, "target": 940810}, {"source": 846918, "target": 817034}, {"source": 846918, "target": 1136397}, {"source": 846918, "target": 817038}, {"source": 846918, "target": 817300}, {"source": 846918, "target": 817306}, {"source": 846918, "target": 817181}, {"source": 846918, "target": 957469}, {"source": 846918, "target": 817054}, {"source": 846918, "target": 987933}, {"source": 846918, "target": 817442}, {"source": 846918, "target": 1178535}, {"source": 846918, "target": 817191}, {"source": 846918, "target": 817063}, {"source": 846918, "target": 817196}, {"source": 846918, "target": 846893}, {"source": 846918, "target": 817324}, {"source": 846918, "target": 817199}, {"source": 846918, "target": 951089}, {"source": 846918, "target": 817464}, {"source": 846918, "target": 1092929}, {"source": 846918, "target": 988994}, {"source": 846918, "target": 846915}, {"source": 846918, "target": 1092930}, {"source": 846918, "target": 846917}, {"source": 846918, "target": 861512}, {"source": 846918, "target": 816970}, {"source": 846918, "target": 817354}, {"source": 846918, "target": 817357}, {"source": 846918, "target": 1415757}, {"source": 846918, "target": 987343}, {"source": 846918, "target": 989005}, {"source": 846918, "target": 817361}, {"source": 846918, "target": 817106}, {"source": 846918, "target": 816979}, {"source": 846918, "target": 1092948}, {"source": 846918, "target": 817101}, {"source": 846918, "target": 940758}, {"source": 846918, "target": 885207}, {"source": 846918, "target": 940760}, {"source": 846918, "target": 885209}, {"source": 846918, "target": 817240}, {"source": 846918, "target": 885211}, {"source": 846918, "target": 816989}, {"source": 846918, "target": 1178591}, {"source": 846918, "target": 987872}, {"source": 846918, "target": 817119}, {"source": 846918, "target": 988643}, {"source": 846918, "target": 940773}, {"source": 846918, "target": 940774}, {"source": 846918, "target": 1132140}, {"source": 846918, "target": 1386097}, {"source": 846918, "target": 817139}, {"source": 846918, "target": 988788}, {"source": 846918, "target": 905846}, {"source": 846918, "target": 885239}, {"source": 846918, "target": 1132153}, {"source": 1178535, "target": 940804}, {"source": 1178535, "target": 846918}, {"source": 1178535, "target": 940810}, {"source": 1178535, "target": 816970}, {"source": 1178535, "target": 1132140}, {"source": 1178535, "target": 817357}, {"source": 1178535, "target": 817196}, {"source": 1178535, "target": 987343}, {"source": 1178535, "target": 817361}, {"source": 1178535, "target": 1386097}, {"source": 1178535, "target": 817181}, {"source": 1178535, "target": 988788}, {"source": 1178535, "target": 940758}, {"source": 1178535, "target": 885239}, {"source": 1178535, "target": 940760}, {"source": 1178535, "target": 957469}, {"source": 1178535, "target": 817054}, {"source": 940810, "target": 940800}, {"source": 940810, "target": 1092865}, {"source": 940810, "target": 817025}, {"source": 940810, "target": 940804}, {"source": 940810, "target": 817423}, {"source": 940810, "target": 817181}, {"source": 940810, "target": 957469}, {"source": 940810, "target": 817054}, {"source": 940810, "target": 1178535}, {"source": 940810, "target": 817196}, {"source": 940810, "target": 905900}, {"source": 940810, "target": 1181231}, {"source": 940810, "target": 817328}, {"source": 940810, "target": 1134017}, {"source": 940810, "target": 846918}, {"source": 940810, "target": 817094}, {"source": 940810, "target": 817352}, {"source": 940810, "target": 816970}, {"source": 940810, "target": 817357}, {"source": 940810, "target": 1415757}, {"source": 940810, "target": 987343}, {"source": 940810, "target": 817361}, {"source": 940810, "target": 1092949}, {"source": 940810, "target": 940758}, {"source": 940810, "target": 940759}, {"source": 940810, "target": 940760}, {"source": 940810, "target": 1132119}, {"source": 940810, "target": 817237}, {"source": 940810, "target": 987099}, {"source": 940810, "target": 817114}, {"source": 940810, "target": 816990}, {"source": 940810, "target": 987103}, {"source": 940810, "target": 989029}, {"source": 940810, "target": 905191}, {"source": 940810, "target": 1132140}, {"source": 940810, "target": 885228}, {"source": 940810, "target": 1386097}, {"source": 940810, "target": 817139}, {"source": 940810, "target": 988788}, {"source": 940810, "target": 885237}, {"source": 940810, "target": 885239}, {"source": 940810, "target": 1132153}, {"source": 816970, "target": 817154}, {"source": 816970, "target": 817159}, {"source": 816970, "target": 885258}, {"source": 816970, "target": 817172}, {"source": 816970, "target": 817181}, {"source": 816970, "target": 957469}, {"source": 816970, "target": 817196}, {"source": 816970, "target": 817199}, {"source": 816970, "target": 817205}, {"source": 816970, "target": 846915}, {"source": 816970, "target": 846917}, {"source": 816970, "target": 846918}, {"source": 816970, "target": 846919}, {"source": 816970, "target": 1415757}, {"source": 816970, "target": 817236}, {"source": 816970, "target": 956516}, {"source": 816970, "target": 817256}, {"source": 816970, "target": 1132140}, {"source": 816970, "target": 1386097}, {"source": 816970, "target": 817265}, {"source": 816970, "target": 988788}, {"source": 816970, "target": 905846}, {"source": 816970, "target": 1132153}, {"source": 816970, "target": 846983}, {"source": 816970, "target": 905364}, {"source": 816970, "target": 817300}, {"source": 816970, "target": 817305}, {"source": 816970, "target": 817306}, {"source": 816970, "target": 817317}, {"source": 816970, "target": 905900}, {"source": 816970, "target": 817329}, {"source": 816970, "target": 817351}, {"source": 816970, "target": 817352}, {"source": 816970, "target": 817357}, {"source": 816970, "target": 987343}, {"source": 816970, "target": 817361}, {"source": 816970, "target": 940758}, {"source": 816970, "target": 940760}, {"source": 816970, "target": 1133822}, {"source": 816970, "target": 940799}, {"source": 816970, "target": 1092865}, {"source": 816970, "target": 940804}, {"source": 816970, "target": 817412}, {"source": 816970, "target": 940810}, {"source": 816970, "target": 940814}, {"source": 816970, "target": 861455}, {"source": 816970, "target": 817423}, {"source": 816970, "target": 817428}, {"source": 816970, "target": 1092887}, {"source": 816970, "target": 1409308}, {"source": 816970, "target": 817437}, {"source": 816970, "target": 1133853}, {"source": 816970, "target": 816938}, {"source": 816970, "target": 817455}, {"source": 816970, "target": 1092924}, {"source": 816970, "target": 816960}, {"source": 816970, "target": 816961}, {"source": 816970, "target": 816979}, {"source": 816970, "target": 1092951}, {"source": 816970, "target": 989020}, {"source": 816970, "target": 816989}, {"source": 816970, "target": 816990}, {"source": 816970, "target": 1133934}, {"source": 816970, "target": 817017}, {"source": 816970, "target": 817020}, {"source": 816970, "target": 817025}, {"source": 816970, "target": 993675}, {"source": 816970, "target": 817039}, {"source": 816970, "target": 989078}, {"source": 816970, "target": 817054}, {"source": 816970, "target": 817058}, {"source": 816970, "target": 987558}, {"source": 816970, "target": 1178535}, {"source": 816970, "target": 817065}, {"source": 816970, "target": 817069}, {"source": 816970, "target": 817074}, {"source": 816970, "target": 817094}, {"source": 816970, "target": 998860}, {"source": 816970, "target": 817101}, {"source": 816970, "target": 817108}, {"source": 816970, "target": 817109}, {"source": 816970, "target": 817114}, {"source": 816970, "target": 817115}, {"source": 816970, "target": 987103}, {"source": 816970, "target": 885216}, {"source": 816970, "target": 817126}, {"source": 816970, "target": 885228}, {"source": 816970, "target": 817139}, {"source": 816970, "target": 885237}, {"source": 816970, "target": 885239}, {"source": 1132140, "target": 940804}, {"source": 1132140, "target": 846918}, {"source": 1132140, "target": 1178535}, {"source": 1132140, "target": 940810}, {"source": 1132140, "target": 816970}, {"source": 1132140, "target": 817196}, {"source": 1132140, "target": 817357}, {"source": 1132140, "target": 987343}, {"source": 1132140, "target": 817361}, {"source": 1132140, "target": 1386097}, {"source": 1132140, "target": 817181}, {"source": 1132140, "target": 988788}, {"source": 1132140, "target": 940758}, {"source": 1132140, "target": 885239}, {"source": 1132140, "target": 940760}, {"source": 1132140, "target": 957469}, {"source": 1132140, "target": 817054}, {"source": 817357, "target": 817410}, {"source": 817357, "target": 885251}, {"source": 817357, "target": 940804}, {"source": 817357, "target": 972550}, {"source": 817357, "target": 940810}, {"source": 817357, "target": 817034}, {"source": 817357, "target": 817050}, {"source": 817357, "target": 817181}, {"source": 817357, "target": 957469}, {"source": 817357, "target": 817054}, {"source": 817357, "target": 987933}, {"source": 817357, "target": 1178535}, {"source": 817357, "target": 817191}, {"source": 817357, "target": 817065}, {"source": 817357, "target": 851371}, {"source": 817357, "target": 817196}, {"source": 817357, "target": 846893}, {"source": 817357, "target": 951089}, {"source": 817357, "target": 817338}, {"source": 817357, "target": 816958}, {"source": 817357, "target": 817344}, {"source": 817357, "target": 1092929}, {"source": 817357, "target": 1092930}, {"source": 817357, "target": 846915}, {"source": 817357, "target": 988994}, {"source": 817357, "target": 846918}, {"source": 817357, "target": 846919}, {"source": 817357, "target": 816970}, {"source": 817357, "target": 817354}, {"source": 817357, "target": 1415757}, {"source": 817357, "target": 989006}, {"source": 817357, "target": 987343}, {"source": 817357, "target": 846927}, {"source": 817357, "target": 817361}, {"source": 817357, "target": 817235}, {"source": 817357, "target": 1092948}, {"source": 817357, "target": 817236}, {"source": 817357, "target": 940758}, {"source": 817357, "target": 817111}, {"source": 817357, "target": 940760}, {"source": 817357, "target": 846936}, {"source": 817357, "target": 816989}, {"source": 817357, "target": 885214}, {"source": 817357, "target": 885215}, {"source": 817357, "target": 987872}, {"source": 817357, "target": 989024}, {"source": 817357, "target": 817122}, {"source": 817357, "target": 988643}, {"source": 817357, "target": 885217}, {"source": 817357, "target": 940774}, {"source": 817357, "target": 885222}, {"source": 817357, "target": 1132140}, {"source": 817357, "target": 1386097}, {"source": 817357, "target": 988788}, {"source": 817357, "target": 817140}, {"source": 817357, "target": 817014}, {"source": 817357, "target": 885239}, {"source": 817357, "target": 1132153}, {"source": 817357, "target": 817404}, {"source": 817357, "target": 940798}, {"source": 817196, "target": 885250}, {"source": 817196, "target": 885251}, {"source": 817196, "target": 817159}, {"source": 817196, "target": 885256}, {"source": 817196, "target": 885258}, {"source": 817196, "target": 817172}, {"source": 817196, "target": 817180}, {"source": 817196, "target": 817181}, {"source": 817196, "target": 957469}, {"source": 817196, "target": 817205}, {"source": 817196, "target": 817218}, {"source": 817196, "target": 846918}, {"source": 817196, "target": 846919}, {"source": 817196, "target": 817228}, {"source": 817196, "target": 1415757}, {"source": 817196, "target": 817239}, {"source": 817196, "target": 817244}, {"source": 817196, "target": 956516}, {"source": 817196, "target": 1132140}, {"source": 817196, "target": 1386097}, {"source": 817196, "target": 846963}, {"source": 817196, "target": 988788}, {"source": 817196, "target": 905844}, {"source": 817196, "target": 1132153}, {"source": 817196, "target": 846971}, {"source": 817196, "target": 846972}, {"source": 817196, "target": 817279}, {"source": 817196, "target": 988300}, {"source": 817196, "target": 817317}, {"source": 817196, "target": 905900}, {"source": 817196, "target": 817332}, {"source": 817196, "target": 817338}, {"source": 817196, "target": 817357}, {"source": 817196, "target": 987343}, {"source": 817196, "target": 817361}, {"source": 817196, "target": 940758}, {"source": 817196, "target": 940760}, {"source": 817196, "target": 1133784}, {"source": 817196, "target": 940761}, {"source": 817196, "target": 817376}, {"source": 817196, "target": 1133795}, {"source": 817196, "target": 940776}, {"source": 817196, "target": 855801}, {"source": 817196, "target": 1092863}, {"source": 817196, "target": 940804}, {"source": 817196, "target": 940805}, {"source": 817196, "target": 940810}, {"source": 817196, "target": 817423}, {"source": 817196, "target": 1092881}, {"source": 817196, "target": 817437}, {"source": 817196, "target": 817455}, {"source": 817196, "target": 1092921}, {"source": 817196, "target": 1092937}, {"source": 817196, "target": 816970}, {"source": 817196, "target": 989005}, {"source": 817196, "target": 1133911}, {"source": 817196, "target": 989015}, {"source": 817196, "target": 1092954}, {"source": 817196, "target": 816989}, {"source": 817196, "target": 817012}, {"source": 817196, "target": 817020}, {"source": 817196, "target": 942986}, {"source": 817196, "target": 817054}, {"source": 817196, "target": 817057}, {"source": 817196, "target": 1178535}, {"source": 817196, "target": 817065}, {"source": 817196, "target": 817068}, {"source": 817196, "target": 817069}, {"source": 817196, "target": 855985}, {"source": 817196, "target": 963001}, {"source": 817196, "target": 954825}, {"source": 817196, "target": 998860}, {"source": 817196, "target": 885206}, {"source": 817196, "target": 885214}, {"source": 817196, "target": 885216}, {"source": 817196, "target": 885217}, {"source": 817196, "target": 817127}, {"source": 817196, "target": 817141}, {"source": 817196, "target": 885239}, {"source": 987343, "target": 817280}, {"source": 987343, "target": 817025}, {"source": 987343, "target": 940804}, {"source": 987343, "target": 817287}, {"source": 987343, "target": 940810}, {"source": 987343, "target": 885258}, {"source": 987343, "target": 817423}, {"source": 987343, "target": 817181}, {"source": 987343, "target": 957469}, {"source": 987343, "target": 817054}, {"source": 987343, "target": 817437}, {"source": 987343, "target": 1178535}, {"source": 987343, "target": 817196}, {"source": 987343, "target": 817069}, {"source": 987343, "target": 905900}, {"source": 987343, "target": 817205}, {"source": 987343, "target": 846918}, {"source": 987343, "target": 846919}, {"source": 987343, "target": 817094}, {"source": 987343, "target": 817352}, {"source": 987343, "target": 816970}, {"source": 987343, "target": 998860}, {"source": 987343, "target": 817357}, {"source": 987343, "target": 1415757}, {"source": 987343, "target": 817361}, {"source": 987343, "target": 855801}, {"source": 987343, "target": 940758}, {"source": 987343, "target": 940759}, {"source": 987343, "target": 940760}, {"source": 987343, "target": 817114}, {"source": 987343, "target": 816989}, {"source": 987343, "target": 885215}, {"source": 987343, "target": 885216}, {"source": 987343, "target": 817249}, {"source": 987343, "target": 817121}, {"source": 987343, "target": 987103}, {"source": 987343, "target": 956516}, {"source": 987343, "target": 817258}, {"source": 987343, "target": 1132140}, {"source": 987343, "target": 885228}, {"source": 987343, "target": 817136}, {"source": 987343, "target": 1386097}, {"source": 987343, "target": 988788}, {"source": 987343, "target": 817012}, {"source": 987343, "target": 885237}, {"source": 987343, "target": 885239}, {"source": 987343, "target": 1132153}, {"source": 987343, "target": 817020}, {"source": 817361, "target": 957958}, {"source": 817361, "target": 817160}, {"source": 817361, "target": 885258}, {"source": 817361, "target": 817165}, {"source": 817361, "target": 817181}, {"source": 817361, "target": 957469}, {"source": 817361, "target": 817191}, {"source": 817361, "target": 817196}, {"source": 817361, "target": 846893}, {"source": 817361, "target": 846898}, {"source": 817361, "target": 846915}, {"source": 817361, "target": 846918}, {"source": 817361, "target": 846919}, {"source": 817361, "target": 1415757}, {"source": 817361, "target": 846933}, {"source": 817361, "target": 817244}, {"source": 817361, "target": 817249}, {"source": 817361, "target": 956516}, {"source": 817361, "target": 817258}, {"source": 817361, "target": 1132140}, {"source": 817361, "target": 1386097}, {"source": 817361, "target": 846963}, {"source": 817361, "target": 988788}, {"source": 817361, "target": 1132153}, {"source": 817361, "target": 817280}, {"source": 817361, "target": 817287}, {"source": 817361, "target": 817296}, {"source": 817361, "target": 905364}, {"source": 817361, "target": 817315}, {"source": 817361, "target": 905898}, {"source": 817361, "target": 817357}, {"source": 817361, "target": 987343}, {"source": 817361, "target": 940755}, {"source": 817361, "target": 940756}, {"source": 817361, "target": 940758}, {"source": 817361, "target": 940760}, {"source": 817361, "target": 817375}, {"source": 817361, "target": 940788}, {"source": 817361, "target": 855801}, {"source": 817361, "target": 940794}, {"source": 817361, "target": 940793}, {"source": 817361, "target": 940798}, {"source": 817361, "target": 1133822}, {"source": 817361, "target": 940804}, {"source": 817361, "target": 940810}, {"source": 817361, "target": 817428}, {"source": 817361, "target": 1092887}, {"source": 817361, "target": 817437}, {"source": 817361, "target": 1133853}, {"source": 817361, "target": 940841}, {"source": 817361, "target": 816938}, {"source": 817361, "target": 817455}, {"source": 817361, "target": 1092911}, {"source": 817361, "target": 1092913}, {"source": 817361, "target": 1092924}, {"source": 817361, "target": 988996}, {"source": 817361, "target": 816970}, {"source": 817361, "target": 1092951}, {"source": 817361, "target": 989020}, {"source": 817361, "target": 816989}, {"source": 817361, "target": 989030}, {"source": 817361, "target": 1133934}, {"source": 817361, "target": 817020}, {"source": 817361, "target": 989078}, {"source": 817361, "target": 989079}, {"source": 817361, "target": 817054}, {"source": 817361, "target": 817058}, {"source": 817361, "target": 987558}, {"source": 817361, "target": 1178535}, {"source": 817361, "target": 861608}, {"source": 817361, "target": 817069}, {"source": 817361, "target": 998860}, {"source": 817361, "target": 817101}, {"source": 817361, "target": 885200}, {"source": 817361, "target": 885203}, {"source": 817361, "target": 817108}, {"source": 817361, "target": 817115}, {"source": 817361, "target": 987099}, {"source": 817361, "target": 987101}, {"source": 817361, "target": 885215}, {"source": 817361, "target": 885216}, {"source": 817361, "target": 817121}, {"source": 817361, "target": 817119}, {"source": 817361, "target": 817132}, {"source": 817361, "target": 817136}, {"source": 817361, "target": 885239}, {"source": 817361, "target": 885243}, {"source": 957469, "target": 940801}, {"source": 957469, "target": 940804}, {"source": 957469, "target": 940805}, {"source": 957469, "target": 988678}, {"source": 957469, "target": 885256}, {"source": 957469, "target": 940810}, {"source": 957469, "target": 885258}, {"source": 957469, "target": 1136397}, {"source": 957469, "target": 817422}, {"source": 957469, "target": 817172}, {"source": 957469, "target": 817044}, {"source": 957469, "target": 817300}, {"source": 957469, "target": 817177}, {"source": 957469, "target": 817180}, {"source": 957469, "target": 817181}, {"source": 957469, "target": 817054}, {"source": 957469, "target": 817437}, {"source": 957469, "target": 1133989}, {"source": 957469, "target": 1178535}, {"source": 957469, "target": 817191}, {"source": 957469, "target": 816938}, {"source": 957469, "target": 1133995}, {"source": 957469, "target": 817196}, {"source": 957469, "target": 817453}, {"source": 957469, "target": 1134001}, {"source": 957469, "target": 817074}, {"source": 957469, "target": 855985}, {"source": 957469, "target": 817205}, {"source": 957469, "target": 940793}, {"source": 957469, "target": 1134015}, {"source": 957469, "target": 988994}, {"source": 957469, "target": 1134019}, {"source": 957469, "target": 846918}, {"source": 957469, "target": 846919}, {"source": 957469, "target": 861639}, {"source": 957469, "target": 816970}, {"source": 957469, "target": 998860}, {"source": 957469, "target": 817357}, {"source": 957469, "target": 1415757}, {"source": 957469, "target": 987343}, {"source": 957469, "target": 817229}, {"source": 957469, "target": 817361}, {"source": 957469, "target": 989007}, {"source": 957469, "target": 846927}, {"source": 957469, "target": 817108}, {"source": 957469, "target": 816981}, {"source": 957469, "target": 940758}, {"source": 957469, "target": 989006}, {"source": 957469, "target": 940760}, {"source": 957469, "target": 989017}, {"source": 957469, "target": 885206}, {"source": 957469, "target": 817232}, {"source": 957469, "target": 940761}, {"source": 957469, "target": 816989}, {"source": 957469, "target": 885214}, {"source": 957469, "target": 940767}, {"source": 957469, "target": 885216}, {"source": 957469, "target": 885217}, {"source": 957469, "target": 956516}, {"source": 957469, "target": 817127}, {"source": 957469, "target": 1132140}, {"source": 957469, "target": 885229}, {"source": 957469, "target": 817133}, {"source": 957469, "target": 1386097}, {"source": 957469, "target": 988788}, {"source": 957469, "target": 817140}, {"source": 957469, "target": 817270}, {"source": 957469, "target": 885239}, {"source": 957469, "target": 1132153}, {"source": 957469, "target": 885242}, {"source": 957469, "target": 817279}, {"source": 1386097, "target": 940804}, {"source": 1386097, "target": 846918}, {"source": 1386097, "target": 1178535}, {"source": 1386097, "target": 940810}, {"source": 1386097, "target": 816970}, {"source": 1386097, "target": 1132140}, {"source": 1386097, "target": 817357}, {"source": 1386097, "target": 817196}, {"source": 1386097, "target": 987343}, {"source": 1386097, "target": 817361}, {"source": 1386097, "target": 817181}, {"source": 1386097, "target": 988788}, {"source": 1386097, "target": 940758}, {"source": 1386097, "target": 885239}, {"source": 1386097, "target": 940760}, {"source": 1386097, "target": 957469}, {"source": 1386097, "target": 817054}, {"source": 988788, "target": 940804}, {"source": 988788, "target": 940810}, {"source": 988788, "target": 817293}, {"source": 988788, "target": 817428}, {"source": 988788, "target": 817181}, {"source": 988788, "target": 957469}, {"source": 988788, "target": 817054}, {"source": 988788, "target": 817437}, {"source": 988788, "target": 1134112}, {"source": 988788, "target": 1134115}, {"source": 988788, "target": 1134118}, {"source": 988788, "target": 1178535}, {"source": 988788, "target": 817065}, {"source": 988788, "target": 817196}, {"source": 988788, "target": 855982}, {"source": 988788, "target": 817329}, {"source": 988788, "target": 817330}, {"source": 988788, "target": 817458}, {"source": 988788, "target": 1092921}, {"source": 988788, "target": 846918}, {"source": 988788, "target": 846919}, {"source": 988788, "target": 816970}, {"source": 988788, "target": 998860}, {"source": 988788, "target": 817357}, {"source": 988788, "target": 1415757}, {"source": 988788, "target": 987343}, {"source": 988788, "target": 817228}, {"source": 988788, "target": 817361}, {"source": 988788, "target": 905681}, {"source": 988788, "target": 816979}, {"source": 988788, "target": 817237}, {"source": 988788, "target": 940758}, {"source": 988788, "target": 940759}, {"source": 988788, "target": 940760}, {"source": 988788, "target": 885209}, {"source": 988788, "target": 816985}, {"source": 988788, "target": 913627}, {"source": 988788, "target": 816989}, {"source": 988788, "target": 885215}, {"source": 988788, "target": 885216}, {"source": 988788, "target": 817376}, {"source": 988788, "target": 989026}, {"source": 988788, "target": 817126}, {"source": 988788, "target": 1132140}, {"source": 988788, "target": 817136}, {"source": 988788, "target": 1386097}, {"source": 988788, "target": 940789}, {"source": 988788, "target": 846965}, {"source": 988788, "target": 885239}, {"source": 988788, "target": 1132153}, {"source": 988788, "target": 817020}, {"source": 940758, "target": 885248}, {"source": 940758, "target": 940804}, {"source": 940758, "target": 940809}, {"source": 940758, "target": 940810}, {"source": 940758, "target": 1092880}, {"source": 940758, "target": 817181}, {"source": 940758, "target": 957469}, {"source": 940758, "target": 817054}, {"source": 940758, "target": 817437}, {"source": 940758, "target": 987552}, {"source": 940758, "target": 817057}, {"source": 940758, "target": 1178535}, {"source": 940758, "target": 987559}, {"source": 940758, "target": 817063}, {"source": 940758, "target": 817196}, {"source": 940758, "target": 817068}, {"source": 940758, "target": 1179822}, {"source": 940758, "target": 817463}, {"source": 940758, "target": 816958}, {"source": 940758, "target": 846915}, {"source": 940758, "target": 846918}, {"source": 940758, "target": 846919}, {"source": 940758, "target": 954950}, {"source": 940758, "target": 816970}, {"source": 940758, "target": 998860}, {"source": 940758, "target": 817357}, {"source": 940758, "target": 1415757}, {"source": 940758, "target": 987343}, {"source": 940758, "target": 817101}, {"source": 940758, "target": 817361}, {"source": 940758, "target": 817106}, {"source": 940758, "target": 1092947}, {"source": 940758, "target": 817229}, {"source": 940758, "target": 1092951}, {"source": 940758, "target": 940760}, {"source": 940758, "target": 817240}, {"source": 940758, "target": 816989}, {"source": 940758, "target": 987101}, {"source": 940758, "target": 885216}, {"source": 940758, "target": 817121}, {"source": 940758, "target": 956516}, {"source": 940758, "target": 817256}, {"source": 940758, "target": 940778}, {"source": 940758, "target": 1132140}, {"source": 940758, "target": 1133165}, {"source": 940758, "target": 1386097}, {"source": 940758, "target": 988788}, {"source": 940758, "target": 846964}, {"source": 940758, "target": 817270}, {"source": 940758, "target": 885239}, {"source": 940758, "target": 846965}, {"source": 940758, "target": 1132153}, {"source": 940758, "target": 885242}, {"source": 940758, "target": 846973}, {"source": 885239, "target": 817160}, {"source": 885239, "target": 817163}, {"source": 885239, "target": 817173}, {"source": 885239, "target": 817181}, {"source": 885239, "target": 957469}, {"source": 885239, "target": 817191}, {"source": 885239, "target": 990763}, {"source": 885239, "target": 817196}, {"source": 885239, "target": 817199}, {"source": 885239, "target": 823344}, {"source": 885239, "target": 817205}, {"source": 885239, "target": 817206}, {"source": 885239, "target": 846917}, {"source": 885239, "target": 846918}, {"source": 885239, "target": 817228}, {"source": 885239, "target": 1415757}, {"source": 885239, "target": 817230}, {"source": 885239, "target": 846928}, {"source": 885239, "target": 846931}, {"source": 885239, "target": 817239}, {"source": 885239, "target": 817249}, {"source": 885239, "target": 956516}, {"source": 885239, "target": 817256}, {"source": 885239, "target": 1132140}, {"source": 885239, "target": 1386097}, {"source": 885239, "target": 988788}, {"source": 885239, "target": 988789}, {"source": 885239, "target": 846968}, {"source": 885239, "target": 1132153}, {"source": 885239, "target": 817280}, {"source": 885239, "target": 846983}, {"source": 885239, "target": 817305}, {"source": 885239, "target": 817306}, {"source": 885239, "target": 1391264}, {"source": 885239, "target": 817344}, {"source": 885239, "target": 817357}, {"source": 885239, "target": 987343}, {"source": 885239, "target": 817361}, {"source": 885239, "target": 940758}, {"source": 885239, "target": 940760}, {"source": 885239, "target": 817376}, {"source": 885239, "target": 940773}, {"source": 885239, "target": 940779}, {"source": 885239, "target": 1133811}, {"source": 885239, "target": 940789}, {"source": 885239, "target": 1092863}, {"source": 885239, "target": 940804}, {"source": 885239, "target": 940805}, {"source": 885239, "target": 817412}, {"source": 885239, "target": 817414}, {"source": 885239, "target": 940807}, {"source": 885239, "target": 940810}, {"source": 885239, "target": 940812}, {"source": 885239, "target": 817429}, {"source": 885239, "target": 817453}, {"source": 885239, "target": 958769}, {"source": 885239, "target": 1092914}, {"source": 885239, "target": 990002}, {"source": 885239, "target": 817463}, {"source": 885239, "target": 816970}, {"source": 885239, "target": 816979}, {"source": 885239, "target": 1133917}, {"source": 885239, "target": 816997}, {"source": 885239, "target": 817000}, {"source": 885239, "target": 817017}, {"source": 885239, "target": 817020}, {"source": 885239, "target": 817047}, {"source": 885239, "target": 817054}, {"source": 885239, "target": 817058}, {"source": 885239, "target": 1178535}, {"source": 885239, "target": 817068}, {"source": 885239, "target": 958896}, {"source": 885239, "target": 855985}, {"source": 885239, "target": 945092}, {"source": 885239, "target": 885209}, {"source": 885239, "target": 817114}, {"source": 885239, "target": 885211}, {"source": 885239, "target": 987611}, {"source": 885239, "target": 885218}, {"source": 885239, "target": 817125}, {"source": 885239, "target": 817126}, {"source": 885239, "target": 885229}, {"source": 885239, "target": 817144}, {"source": 940760, "target": 817410}, {"source": 940760, "target": 1092867}, {"source": 940760, "target": 940804}, {"source": 940760, "target": 885252}, {"source": 940760, "target": 972550}, {"source": 940760, "target": 940810}, {"source": 940760, "target": 817034}, {"source": 940760, "target": 1136397}, {"source": 940760, "target": 817038}, {"source": 940760, "target": 817423}, {"source": 940760, "target": 817306}, {"source": 940760, "target": 817181}, {"source": 940760, "target": 957469}, {"source": 940760, "target": 817054}, {"source": 940760, "target": 987933}, {"source": 940760, "target": 817442}, {"source": 940760, "target": 1178535}, {"source": 940760, "target": 817191}, {"source": 940760, "target": 817063}, {"source": 940760, "target": 817196}, {"source": 940760, "target": 846893}, {"source": 940760, "target": 817324}, {"source": 940760, "target": 817199}, {"source": 940760, "target": 905900}, {"source": 940760, "target": 951089}, {"source": 940760, "target": 817464}, {"source": 940760, "target": 1092929}, {"source": 940760, "target": 988994}, {"source": 940760, "target": 846915}, {"source": 940760, "target": 1092930}, {"source": 940760, "target": 846917}, {"source": 940760, "target": 846918}, {"source": 940760, "target": 817094}, {"source": 940760, "target": 861512}, {"source": 940760, "target": 817352}, {"source": 940760, "target": 816970}, {"source": 940760, "target": 817354}, {"source": 940760, "target": 817357}, {"source": 940760, "target": 1415757}, {"source": 940760, "target": 987343}, {"source": 940760, "target": 989005}, {"source": 940760, "target": 817361}, {"source": 940760, "target": 817106}, {"source": 940760, "target": 816979}, {"source": 940760, "target": 1092948}, {"source": 940760, "target": 940758}, {"source": 940760, "target": 885207}, {"source": 940760, "target": 817240}, {"source": 940760, "target": 885209}, {"source": 940760, "target": 817114}, {"source": 940760, "target": 885211}, {"source": 940760, "target": 816989}, {"source": 940760, "target": 816990}, {"source": 940760, "target": 1178591}, {"source": 940760, "target": 987872}, {"source": 940760, "target": 817119}, {"source": 940760, "target": 988643}, {"source": 940760, "target": 940773}, {"source": 940760, "target": 940774}, {"source": 940760, "target": 1132140}, {"source": 940760, "target": 885228}, {"source": 940760, "target": 1386097}, {"source": 940760, "target": 817139}, {"source": 940760, "target": 988788}, {"source": 940760, "target": 905846}, {"source": 940760, "target": 885239}, {"source": 940760, "target": 1132153}, {"source": 817181, "target": 817280}, {"source": 817181, "target": 817154}, {"source": 817181, "target": 940804}, {"source": 817181, "target": 817287}, {"source": 817181, "target": 940810}, {"source": 817181, "target": 885258}, {"source": 817181, "target": 988300}, {"source": 817181, "target": 817034}, {"source": 817181, "target": 905877}, {"source": 817181, "target": 817047}, {"source": 817181, "target": 817177}, {"source": 817181, "target": 817049}, {"source": 817181, "target": 957469}, {"source": 817181, "target": 817054}, {"source": 817181, "target": 817437}, {"source": 817181, "target": 817060}, {"source": 817181, "target": 1178535}, {"source": 817181, "target": 817196}, {"source": 817181, "target": 817069}, {"source": 817181, "target": 855982}, {"source": 817181, "target": 817205}, {"source": 817181, "target": 817338}, {"source": 817181, "target": 846918}, {"source": 817181, "target": 846919}, {"source": 817181, "target": 817351}, {"source": 817181, "target": 816970}, {"source": 817181, "target": 998860}, {"source": 817181, "target": 817357}, {"source": 817181, "target": 1415757}, {"source": 817181, "target": 987343}, {"source": 817181, "target": 846927}, {"source": 817181, "target": 817361}, {"source": 817181, "target": 817236}, {"source": 817181, "target": 855801}, {"source": 817181, "target": 940758}, {"source": 817181, "target": 940759}, {"source": 817181, "target": 940760}, {"source": 817181, "target": 817238}, {"source": 817181, "target": 816989}, {"source": 817181, "target": 885214}, {"source": 817181, "target": 885215}, {"source": 817181, "target": 885216}, {"source": 817181, "target": 817249}, {"source": 817181, "target": 817121}, {"source": 817181, "target": 885217}, {"source": 817181, "target": 956516}, {"source": 817181, "target": 817126}, {"source": 817181, "target": 940776}, {"source": 817181, "target": 817258}, {"source": 817181, "target": 1132140}, {"source": 817181, "target": 817136}, {"source": 817181, "target": 1386097}, {"source": 817181, "target": 988788}, {"source": 817181, "target": 817012}, {"source": 817181, "target": 817140}, {"source": 817181, "target": 885239}, {"source": 817181, "target": 817144}, {"source": 817181, "target": 1132153}, {"source": 817181, "target": 817020}, {"source": 817181, "target": 817406}, {"source": 817054, "target": 817280}, {"source": 817054, "target": 940804}, {"source": 817054, "target": 817287}, {"source": 817054, "target": 817159}, {"source": 817054, "target": 940810}, {"source": 817054, "target": 885258}, {"source": 817054, "target": 988300}, {"source": 817054, "target": 817296}, {"source": 817054, "target": 817181}, {"source": 817054, "target": 957469}, {"source": 817054, "target": 817437}, {"source": 817054, "target": 1178535}, {"source": 817054, "target": 817196}, {"source": 817054, "target": 817069}, {"source": 817054, "target": 817455}, {"source": 817054, "target": 817205}, {"source": 817054, "target": 846905}, {"source": 817054, "target": 817338}, {"source": 817054, "target": 817344}, {"source": 817054, "target": 846918}, {"source": 817054, "target": 846919}, {"source": 817054, "target": 816970}, {"source": 817054, "target": 998860}, {"source": 817054, "target": 817357}, {"source": 817054, "target": 1415757}, {"source": 817054, "target": 987343}, {"source": 817054, "target": 817361}, {"source": 817054, "target": 855801}, {"source": 817054, "target": 940758}, {"source": 817054, "target": 940759}, {"source": 817054, "target": 940760}, {"source": 817054, "target": 885206}, {"source": 817054, "target": 817237}, {"source": 817054, "target": 817115}, {"source": 817054, "target": 816989}, {"source": 817054, "target": 885215}, {"source": 817054, "target": 885216}, {"source": 817054, "target": 817249}, {"source": 817054, "target": 817121}, {"source": 817054, "target": 817376}, {"source": 817054, "target": 956516}, {"source": 817054, "target": 817258}, {"source": 817054, "target": 1132140}, {"source": 817054, "target": 885229}, {"source": 817054, "target": 817136}, {"source": 817054, "target": 1386097}, {"source": 817054, "target": 988788}, {"source": 817054, "target": 817012}, {"source": 817054, "target": 885239}, {"source": 817054, "target": 1132153}, {"source": 817054, "target": 817020}, {"source": 987872, "target": 817410}, {"source": 987872, "target": 817038}, {"source": 987872, "target": 987933}, {"source": 987872, "target": 1000618}, {"source": 987872, "target": 1181226}, {"source": 987872, "target": 846893}, {"source": 987872, "target": 951089}, {"source": 987872, "target": 816958}, {"source": 987872, "target": 817344}, {"source": 987872, "target": 1092929}, {"source": 987872, "target": 1092930}, {"source": 987872, "target": 988994}, {"source": 987872, "target": 846915}, {"source": 987872, "target": 846918}, {"source": 987872, "target": 817354}, {"source": 987872, "target": 817357}, {"source": 987872, "target": 1092948}, {"source": 987872, "target": 817111}, {"source": 987872, "target": 940760}, {"source": 987872, "target": 816989}, {"source": 987872, "target": 988643}, {"source": 987872, "target": 940774}, {"source": 817344, "target": 885251}, {"source": 817344, "target": 957958}, {"source": 817344, "target": 817159}, {"source": 817344, "target": 817163}, {"source": 817344, "target": 817165}, {"source": 817344, "target": 957474}, {"source": 817344, "target": 1181226}, {"source": 817344, "target": 846893}, {"source": 817344, "target": 817199}, {"source": 817344, "target": 817205}, {"source": 817344, "target": 846917}, {"source": 817344, "target": 817230}, {"source": 817344, "target": 846928}, {"source": 817344, "target": 817237}, {"source": 817344, "target": 817244}, {"source": 817344, "target": 817258}, {"source": 817344, "target": 817280}, {"source": 817344, "target": 817287}, {"source": 817344, "target": 846983}, {"source": 817344, "target": 988301}, {"source": 817344, "target": 817296}, {"source": 817344, "target": 817307}, {"source": 817344, "target": 817315}, {"source": 817344, "target": 1000618}, {"source": 817344, "target": 817328}, {"source": 817344, "target": 817338}, {"source": 817344, "target": 817351}, {"source": 817344, "target": 817357}, {"source": 817344, "target": 987872}, {"source": 817344, "target": 817376}, {"source": 817344, "target": 940771}, {"source": 817344, "target": 940773}, {"source": 817344, "target": 940776}, {"source": 817344, "target": 940779}, {"source": 817344, "target": 940782}, {"source": 817344, "target": 1133811}, {"source": 817344, "target": 940794}, {"source": 817344, "target": 817410}, {"source": 817344, "target": 817412}, {"source": 817344, "target": 940805}, {"source": 817344, "target": 972550}, {"source": 817344, "target": 940807}, {"source": 817344, "target": 940804}, {"source": 817344, "target": 940812}, {"source": 817344, "target": 1092877}, {"source": 817344, "target": 817428}, {"source": 817344, "target": 817429}, {"source": 817344, "target": 817437}, {"source": 817344, "target": 940841}, {"source": 817344, "target": 817455}, {"source": 817344, "target": 1092912}, {"source": 817344, "target": 951089}, {"source": 817344, "target": 1092914}, {"source": 817344, "target": 996152}, {"source": 817344, "target": 816958}, {"source": 817344, "target": 1092929}, {"source": 817344, "target": 1092930}, {"source": 817344, "target": 988994}, {"source": 817344, "target": 988996}, {"source": 817344, "target": 988995}, {"source": 817344, "target": 816979}, {"source": 817344, "target": 1092948}, {"source": 817344, "target": 1092950}, {"source": 817344, "target": 816985}, {"source": 817344, "target": 1133917}, {"source": 817344, "target": 816989}, {"source": 817344, "target": 989029}, {"source": 817344, "target": 989030}, {"source": 817344, "target": 817000}, {"source": 817344, "target": 903020}, {"source": 817344, "target": 817012}, {"source": 817344, "target": 817014}, {"source": 817344, "target": 817020}, {"source": 817344, "target": 817022}, {"source": 817344, "target": 817025}, {"source": 817344, "target": 817038}, {"source": 817344, "target": 817044}, {"source": 817344, "target": 817054}, {"source": 817344, "target": 861639}, {"source": 817344, "target": 817101}, {"source": 817344, "target": 817109}, {"source": 817344, "target": 817111}, {"source": 817344, "target": 885208}, {"source": 817344, "target": 885209}, {"source": 817344, "target": 817114}, {"source": 817344, "target": 885211}, {"source": 817344, "target": 817115}, {"source": 817344, "target": 885216}, {"source": 817344, "target": 817125}, {"source": 817344, "target": 817126}, {"source": 817344, "target": 817127}, {"source": 817344, "target": 885224}, {"source": 817344, "target": 817133}, {"source": 817344, "target": 817136}, {"source": 817344, "target": 817141}, {"source": 817344, "target": 885239}, {"source": 817344, "target": 885243}, {"source": 817410, "target": 972550}, {"source": 817410, "target": 940809}, {"source": 817410, "target": 817038}, {"source": 817410, "target": 817422}, {"source": 817410, "target": 988302}, {"source": 817410, "target": 817044}, {"source": 817410, "target": 905877}, {"source": 817410, "target": 987933}, {"source": 817410, "target": 817442}, {"source": 817410, "target": 817191}, {"source": 817410, "target": 817063}, {"source": 817410, "target": 1000618}, {"source": 817410, "target": 1181226}, {"source": 817410, "target": 846893}, {"source": 817410, "target": 951089}, {"source": 817410, "target": 817204}, {"source": 817410, "target": 816958}, {"source": 817410, "target": 817344}, {"source": 817410, "target": 1092929}, {"source": 817410, "target": 1092930}, {"source": 817410, "target": 988994}, {"source": 817410, "target": 846915}, {"source": 817410, "target": 817218}, {"source": 817410, "target": 846918}, {"source": 817410, "target": 817351}, {"source": 817410, "target": 817354}, {"source": 817410, "target": 817357}, {"source": 817410, "target": 1092948}, {"source": 817410, "target": 817109}, {"source": 817410, "target": 846933}, {"source": 817410, "target": 817111}, {"source": 817410, "target": 940760}, {"source": 817410, "target": 885207}, {"source": 817410, "target": 816989}, {"source": 817410, "target": 987872}, {"source": 817410, "target": 988643}, {"source": 817410, "target": 846947}, {"source": 817410, "target": 940774}, {"source": 817410, "target": 817017}, {"source": 1092930, "target": 817410}, {"source": 1092930, "target": 817038}, {"source": 1092930, "target": 987933}, {"source": 1092930, "target": 1000618}, {"source": 1092930, "target": 1181226}, {"source": 1092930, "target": 846893}, {"source": 1092930, "target": 951089}, {"source": 1092930, "target": 816958}, {"source": 1092930, "target": 817344}, {"source": 1092930, "target": 1092929}, {"source": 1092930, "target": 988994}, {"source": 1092930, "target": 846915}, {"source": 1092930, "target": 846918}, {"source": 1092930, "target": 817354}, {"source": 1092930, "target": 817357}, {"source": 1092930, "target": 1092948}, {"source": 1092930, "target": 817111}, {"source": 1092930, "target": 940760}, {"source": 1092930, "target": 816989}, {"source": 1092930, "target": 987872}, {"source": 1092930, "target": 988643}, {"source": 1092930, "target": 940774}, {"source": 988994, "target": 817410}, {"source": 988994, "target": 1092867}, {"source": 988994, "target": 885252}, {"source": 988994, "target": 988678}, {"source": 988994, "target": 846983}, {"source": 988994, "target": 817159}, {"source": 988994, "target": 817034}, {"source": 988994, "target": 988300}, {"source": 988994, "target": 1136397}, {"source": 988994, "target": 817038}, {"source": 988994, "target": 817300}, {"source": 988994, "target": 989078}, {"source": 988994, "target": 817177}, {"source": 988994, "target": 817306}, {"source": 988994, "target": 957469}, {"source": 988994, "target": 817191}, {"source": 988994, "target": 817065}, {"source": 988994, "target": 1000618}, {"source": 988994, "target": 1181226}, {"source": 988994, "target": 816938}, {"source": 988994, "target": 846893}, {"source": 988994, "target": 817453}, {"source": 988994, "target": 817455}, {"source": 988994, "target": 951089}, {"source": 988994, "target": 1134001}, {"source": 988994, "target": 817074}, {"source": 988994, "target": 817205}, {"source": 988994, "target": 817464}, {"source": 988994, "target": 816958}, {"source": 988994, "target": 905919}, {"source": 988994, "target": 817344}, {"source": 988994, "target": 1092929}, {"source": 988994, "target": 1092930}, {"source": 988994, "target": 846915}, {"source": 988994, "target": 817091}, {"source": 988994, "target": 846918}, {"source": 988994, "target": 861512}, {"source": 988994, "target": 817228}, {"source": 988994, "target": 817357}, {"source": 988994, "target": 989006}, {"source": 988994, "target": 817232}, {"source": 988994, "target": 885200}, {"source": 988994, "target": 817106}, {"source": 988994, "target": 940755}, {"source": 988994, "target": 1092948}, {"source": 988994, "target": 1133781}, {"source": 988994, "target": 885206}, {"source": 988994, "target": 817111}, {"source": 988994, "target": 940760}, {"source": 988994, "target": 885207}, {"source": 988994, "target": 885208}, {"source": 988994, "target": 846936}, {"source": 988994, "target": 816989}, {"source": 988994, "target": 885214}, {"source": 988994, "target": 1178591}, {"source": 988994, "target": 987872}, {"source": 988994, "target": 940767}, {"source": 988994, "target": 885217}, {"source": 988994, "target": 816997}, {"source": 988994, "target": 885222}, {"source": 988994, "target": 940788}, {"source": 988994, "target": 817140}, {"source": 988994, "target": 940793}, {"source": 1092929, "target": 817410}, {"source": 1092929, "target": 817038}, {"source": 1092929, "target": 987933}, {"source": 1092929, "target": 1000618}, {"source": 1092929, "target": 1181226}, {"source": 1092929, "target": 846893}, {"source": 1092929, "target": 951089}, {"source": 1092929, "target": 816958}, {"source": 1092929, "target": 817344}, {"source": 1092929, "target": 988994}, {"source": 1092929, "target": 1092930}, {"source": 1092929, "target": 846915}, {"source": 1092929, "target": 846918}, {"source": 1092929, "target": 817354}, {"source": 1092929, "target": 817357}, {"source": 1092929, "target": 1092948}, {"source": 1092929, "target": 817111}, {"source": 1092929, "target": 940760}, {"source": 1092929, "target": 816989}, {"source": 1092929, "target": 987872}, {"source": 1092929, "target": 988643}, {"source": 1092929, "target": 940774}, {"source": 1000618, "target": 987872}, {"source": 1000618, "target": 817344}, {"source": 1000618, "target": 817410}, {"source": 1000618, "target": 988994}, {"source": 1000618, "target": 1092930}, {"source": 1000618, "target": 1092929}, {"source": 1000618, "target": 1181226}, {"source": 1000618, "target": 846893}, {"source": 1000618, "target": 817038}, {"source": 1000618, "target": 951089}, {"source": 1000618, "target": 1092948}, {"source": 1000618, "target": 817111}, {"source": 1000618, "target": 816958}, {"source": 1181226, "target": 987872}, {"source": 1181226, "target": 817344}, {"source": 1181226, "target": 817410}, {"source": 1181226, "target": 988994}, {"source": 1181226, "target": 1092930}, {"source": 1181226, "target": 1092929}, {"source": 1181226, "target": 1000618}, {"source": 1181226, "target": 846893}, {"source": 1181226, "target": 817038}, {"source": 1181226, "target": 951089}, {"source": 1181226, "target": 1092948}, {"source": 1181226, "target": 817111}, {"source": 1181226, "target": 816958}, {"source": 846893, "target": 817410}, {"source": 846893, "target": 817154}, {"source": 846893, "target": 940805}, {"source": 846893, "target": 1133830}, {"source": 846893, "target": 817287}, {"source": 846893, "target": 817165}, {"source": 846893, "target": 817038}, {"source": 846893, "target": 817293}, {"source": 846893, "target": 905877}, {"source": 846893, "target": 817175}, {"source": 846893, "target": 987161}, {"source": 846893, "target": 817177}, {"source": 846893, "target": 987933}, {"source": 846893, "target": 817058}, {"source": 846893, "target": 1092900}, {"source": 846893, "target": 817060}, {"source": 846893, "target": 987558}, {"source": 846893, "target": 987560}, {"source": 846893, "target": 817065}, {"source": 846893, "target": 1000618}, {"source": 846893, "target": 1181226}, {"source": 846893, "target": 987564}, {"source": 846893, "target": 817069}, {"source": 846893, "target": 861608}, {"source": 846893, "target": 951089}, {"source": 846893, "target": 817074}, {"source": 846893, "target": 1092915}, {"source": 846893, "target": 817205}, {"source": 846893, "target": 816958}, {"source": 846893, "target": 817344}, {"source": 846893, "target": 1092929}, {"source": 846893, "target": 988994}, {"source": 846893, "target": 1092930}, {"source": 846893, "target": 846915}, {"source": 846893, "target": 817091}, {"source": 846893, "target": 846918}, {"source": 846893, "target": 861639}, {"source": 846893, "target": 817228}, {"source": 846893, "target": 817357}, {"source": 846893, "target": 989006}, {"source": 846893, "target": 885200}, {"source": 846893, "target": 817361}, {"source": 846893, "target": 940755}, {"source": 846893, "target": 1092948}, {"source": 846893, "target": 817238}, {"source": 846893, "target": 817111}, {"source": 846893, "target": 940760}, {"source": 846893, "target": 846936}, {"source": 846893, "target": 817240}, {"source": 846893, "target": 816989}, {"source": 846893, "target": 987872}, {"source": 846893, "target": 940769}, {"source": 846893, "target": 940768}, {"source": 846893, "target": 988643}, {"source": 846893, "target": 940774}, {"source": 846893, "target": 885222}, {"source": 846893, "target": 817126}, {"source": 846893, "target": 817258}, {"source": 846893, "target": 817132}, {"source": 846893, "target": 817140}, {"source": 846893, "target": 940788}, {"source": 846893, "target": 817014}, {"source": 846893, "target": 940793}, {"source": 846893, "target": 817147}, {"source": 817038, "target": 940801}, {"source": 817038, "target": 817410}, {"source": 817038, "target": 1092867}, {"source": 817038, "target": 885252}, {"source": 817038, "target": 885251}, {"source": 817038, "target": 885254}, {"source": 817038, "target": 846983}, {"source": 817038, "target": 817160}, {"source": 817038, "target": 817034}, {"source": 817038, "target": 905866}, {"source": 817038, "target": 1136397}, {"source": 817038, "target": 940814}, {"source": 817038, "target": 817293}, {"source": 817038, "target": 817175}, {"source": 817038, "target": 817047}, {"source": 817038, "target": 817306}, {"source": 817038, "target": 987934}, {"source": 817038, "target": 817191}, {"source": 817038, "target": 1000618}, {"source": 817038, "target": 1181226}, {"source": 817038, "target": 846893}, {"source": 817038, "target": 951089}, {"source": 817038, "target": 817458}, {"source": 817038, "target": 817464}, {"source": 817038, "target": 816958}, {"source": 817038, "target": 905919}, {"source": 817038, "target": 817344}, {"source": 817038, "target": 1092929}, {"source": 817038, "target": 988994}, {"source": 817038, "target": 1092930}, {"source": 817038, "target": 846915}, {"source": 817038, "target": 817091}, {"source": 817038, "target": 846918}, {"source": 817038, "target": 988996}, {"source": 817038, "target": 861512}, {"source": 817038, "target": 817106}, {"source": 817038, "target": 1092948}, {"source": 817038, "target": 817111}, {"source": 817038, "target": 940760}, {"source": 817038, "target": 885207}, {"source": 817038, "target": 817239}, {"source": 817038, "target": 987611}, {"source": 817038, "target": 816989}, {"source": 817038, "target": 987102}, {"source": 817038, "target": 1178591}, {"source": 817038, "target": 987872}, {"source": 817038, "target": 846946}, {"source": 817038, "target": 816997}, {"source": 817038, "target": 817126}, {"source": 817038, "target": 817125}, {"source": 817038, "target": 940785}, {"source": 951089, "target": 817410}, {"source": 951089, "target": 972550}, {"source": 951089, "target": 940809}, {"source": 951089, "target": 817038}, {"source": 951089, "target": 817422}, {"source": 951089, "target": 817044}, {"source": 951089, "target": 987933}, {"source": 951089, "target": 817442}, {"source": 951089, "target": 817191}, {"source": 951089, "target": 817063}, {"source": 951089, "target": 1000618}, {"source": 951089, "target": 1181226}, {"source": 951089, "target": 846893}, {"source": 951089, "target": 816958}, {"source": 951089, "target": 817344}, {"source": 951089, "target": 1092929}, {"source": 951089, "target": 988994}, {"source": 951089, "target": 1092930}, {"source": 951089, "target": 846915}, {"source": 951089, "target": 846918}, {"source": 951089, "target": 817354}, {"source": 951089, "target": 817357}, {"source": 951089, "target": 1092948}, {"source": 951089, "target": 817111}, {"source": 951089, "target": 940760}, {"source": 951089, "target": 816989}, {"source": 951089, "target": 987872}, {"source": 951089, "target": 988643}, {"source": 951089, "target": 940774}, {"source": 1092948, "target": 817410}, {"source": 1092948, "target": 988300}, {"source": 1092948, "target": 817038}, {"source": 1092948, "target": 989078}, {"source": 1092948, "target": 817063}, {"source": 1092948, "target": 1000618}, {"source": 1092948, "target": 1181226}, {"source": 1092948, "target": 846893}, {"source": 1092948, "target": 951089}, {"source": 1092948, "target": 817458}, {"source": 1092948, "target": 905908}, {"source": 1092948, "target": 816958}, {"source": 1092948, "target": 817406}, {"source": 1092948, "target": 817344}, {"source": 1092948, "target": 1092929}, {"source": 1092948, "target": 988994}, {"source": 1092948, "target": 1092930}, {"source": 1092948, "target": 1092928}, {"source": 1092948, "target": 846918}, {"source": 1092948, "target": 817357}, {"source": 1092948, "target": 817101}, {"source": 1092948, "target": 885200}, {"source": 1092948, "target": 940755}, {"source": 1092948, "target": 846933}, {"source": 1092948, "target": 817111}, {"source": 1092948, "target": 940760}, {"source": 1092948, "target": 1133787}, {"source": 1092948, "target": 816989}, {"source": 1092948, "target": 987872}, {"source": 1092948, "target": 988643}, {"source": 1092948, "target": 940774}, {"source": 1092948, "target": 940788}, {"source": 1092948, "target": 817022}, {"source": 817111, "target": 817410}, {"source": 817111, "target": 1092867}, {"source": 817111, "target": 885252}, {"source": 817111, "target": 885251}, {"source": 817111, "target": 817154}, {"source": 817111, "target": 846983}, {"source": 817111, "target": 817160}, {"source": 817111, "target": 817034}, {"source": 817111, "target": 1136397}, {"source": 817111, "target": 817038}, {"source": 817111, "target": 940814}, {"source": 817111, "target": 817293}, {"source": 817111, "target": 817175}, {"source": 817111, "target": 817047}, {"source": 817111, "target": 1000618}, {"source": 817111, "target": 1181226}, {"source": 817111, "target": 846893}, {"source": 817111, "target": 951089}, {"source": 817111, "target": 816958}, {"source": 817111, "target": 905919}, {"source": 817111, "target": 817344}, {"source": 817111, "target": 1092929}, {"source": 817111, "target": 988994}, {"source": 817111, "target": 1092930}, {"source": 817111, "target": 846915}, {"source": 817111, "target": 817091}, {"source": 817111, "target": 988996}, {"source": 817111, "target": 817351}, {"source": 817111, "target": 817354}, {"source": 817111, "target": 817357}, {"source": 817111, "target": 817106}, {"source": 817111, "target": 1092948}, {"source": 817111, "target": 817240}, {"source": 817111, "target": 987611}, {"source": 817111, "target": 885214}, {"source": 817111, "target": 987872}, {"source": 817111, "target": 885216}, {"source": 817111, "target": 846946}, {"source": 817111, "target": 816997}, {"source": 817111, "target": 817126}, {"source": 817111, "target": 817014}, {"source": 817111, "target": 817147}, {"source": 816958, "target": 885248}, {"source": 816958, "target": 940801}, {"source": 816958, "target": 817410}, {"source": 816958, "target": 885254}, {"source": 816958, "target": 1092872}, {"source": 816958, "target": 1092873}, {"source": 816958, "target": 817160}, {"source": 816958, "target": 905866}, {"source": 816958, "target": 817038}, {"source": 816958, "target": 940814}, {"source": 816958, "target": 817173}, {"source": 816958, "target": 817047}, {"source": 816958, "target": 987933}, {"source": 816958, "target": 987934}, {"source": 816958, "target": 817058}, {"source": 816958, "target": 1133988}, {"source": 816958, "target": 817063}, {"source": 816958, "target": 1000618}, {"source": 816958, "target": 1181226}, {"source": 816958, "target": 816938}, {"source": 816958, "target": 846893}, {"source": 816958, "target": 817453}, {"source": 816958, "target": 951089}, {"source": 816958, "target": 817458}, {"source": 816958, "target": 817204}, {"source": 816958, "target": 817206}, {"source": 816958, "target": 817344}, {"source": 816958, "target": 1092929}, {"source": 816958, "target": 988994}, {"source": 816958, "target": 1092930}, {"source": 816958, "target": 846915}, {"source": 816958, "target": 988996}, {"source": 816958, "target": 1134024}, {"source": 816958, "target": 817357}, {"source": 816958, "target": 817229}, {"source": 816958, "target": 817106}, {"source": 816958, "target": 1092948}, {"source": 816958, "target": 846933}, {"source": 816958, "target": 940758}, {"source": 816958, "target": 817111}, {"source": 816958, "target": 817244}, {"source": 816958, "target": 816989}, {"source": 816958, "target": 987102}, {"source": 816958, "target": 987872}, {"source": 816958, "target": 817121}, {"source": 816958, "target": 817125}, {"source": 816958, "target": 940778}, {"source": 816958, "target": 940779}, {"source": 816958, "target": 940785}, {"source": 816958, "target": 846963}, {"source": 816958, "target": 846964}, {"source": 816958, "target": 846965}, {"source": 816958, "target": 817270}, {"source": 1133989, "target": 885256}, {"source": 1133989, "target": 817044}, {"source": 1133989, "target": 817428}, {"source": 1133989, "target": 817172}, {"source": 1133989, "target": 817180}, {"source": 1133989, "target": 817437}, {"source": 1133989, "target": 957469}, {"source": 1133989, "target": 817324}, {"source": 1133989, "target": 817453}, {"source": 1133989, "target": 1134001}, {"source": 1133989, "target": 817332}, {"source": 1133989, "target": 861639}, {"source": 1133989, "target": 817229}, {"source": 1133989, "target": 846927}, {"source": 1133989, "target": 989007}, {"source": 1133989, "target": 817108}, {"source": 1133989, "target": 816981}, {"source": 1133989, "target": 989017}, {"source": 1133989, "target": 817115}, {"source": 1133989, "target": 816989}, {"source": 1133989, "target": 1133811}, {"source": 1133989, "target": 817279}, {"source": 817324, "target": 885251}, {"source": 817324, "target": 885252}, {"source": 817324, "target": 885258}, {"source": 817324, "target": 990763}, {"source": 817324, "target": 817199}, {"source": 817324, "target": 817206}, {"source": 817324, "target": 846915}, {"source": 817324, "target": 846917}, {"source": 817324, "target": 846918}, {"source": 817324, "target": 817229}, {"source": 817324, "target": 817230}, {"source": 817324, "target": 846927}, {"source": 817324, "target": 817232}, {"source": 817324, "target": 846928}, {"source": 817324, "target": 817236}, {"source": 817324, "target": 817237}, {"source": 817324, "target": 817240}, {"source": 817324, "target": 817249}, {"source": 817324, "target": 905846}, {"source": 817324, "target": 817279}, {"source": 817324, "target": 905866}, {"source": 817324, "target": 817307}, {"source": 817324, "target": 817332}, {"source": 817324, "target": 817351}, {"source": 817324, "target": 817353}, {"source": 817324, "target": 1133782}, {"source": 817324, "target": 940760}, {"source": 817324, "target": 1133786}, {"source": 817324, "target": 817376}, {"source": 817324, "target": 940773}, {"source": 817324, "target": 940776}, {"source": 817324, "target": 998636}, {"source": 817324, "target": 1133811}, {"source": 817324, "target": 940793}, {"source": 817324, "target": 940798}, {"source": 817324, "target": 1092868}, {"source": 817324, "target": 940809}, {"source": 817324, "target": 1092874}, {"source": 817324, "target": 817422}, {"source": 817324, "target": 1133845}, {"source": 817324, "target": 817437}, {"source": 817324, "target": 1133854}, {"source": 817324, "target": 1092901}, {"source": 817324, "target": 1092907}, {"source": 817324, "target": 817455}, {"source": 817324, "target": 817458}, {"source": 817324, "target": 817463}, {"source": 817324, "target": 817464}, {"source": 817324, "target": 989005}, {"source": 817324, "target": 989007}, {"source": 817324, "target": 989009}, {"source": 817324, "target": 816979}, {"source": 817324, "target": 816981}, {"source": 817324, "target": 1092951}, {"source": 817324, "target": 989016}, {"source": 817324, "target": 989017}, {"source": 817324, "target": 1092952}, {"source": 817324, "target": 816990}, {"source": 817324, "target": 816997}, {"source": 817324, "target": 903020}, {"source": 817324, "target": 817039}, {"source": 817324, "target": 817044}, {"source": 817324, "target": 817058}, {"source": 817324, "target": 1133989}, {"source": 817324, "target": 1134020}, {"source": 817324, "target": 817101}, {"source": 817324, "target": 817108}, {"source": 817324, "target": 885206}, {"source": 817324, "target": 885208}, {"source": 817324, "target": 885209}, {"source": 817324, "target": 817115}, {"source": 817324, "target": 885211}, {"source": 817324, "target": 987613}, {"source": 817324, "target": 817119}, {"source": 817324, "target": 817125}, {"source": 817324, "target": 817127}, {"source": 817324, "target": 817136}, {"source": 817324, "target": 817139}, {"source": 817324, "target": 817147}, {"source": 817229, "target": 885248}, {"source": 817229, "target": 885250}, {"source": 817229, "target": 885256}, {"source": 817229, "target": 817044}, {"source": 817229, "target": 817428}, {"source": 817229, "target": 817172}, {"source": 817229, "target": 817180}, {"source": 817229, "target": 817437}, {"source": 817229, "target": 957469}, {"source": 817229, "target": 817058}, {"source": 817229, "target": 1133989}, {"source": 817229, "target": 817324}, {"source": 817229, "target": 817453}, {"source": 817229, "target": 1134001}, {"source": 817229, "target": 817458}, {"source": 817229, "target": 817332}, {"source": 817229, "target": 817206}, {"source": 817229, "target": 816958}, {"source": 817229, "target": 861639}, {"source": 817229, "target": 846927}, {"source": 817229, "target": 989007}, {"source": 817229, "target": 846928}, {"source": 817229, "target": 817106}, {"source": 817229, "target": 817108}, {"source": 817229, "target": 816981}, {"source": 817229, "target": 940758}, {"source": 817229, "target": 817239}, {"source": 817229, "target": 989017}, {"source": 817229, "target": 817115}, {"source": 817229, "target": 817244}, {"source": 817229, "target": 816989}, {"source": 817229, "target": 940768}, {"source": 817229, "target": 817121}, {"source": 817229, "target": 817125}, {"source": 817229, "target": 940778}, {"source": 817229, "target": 817136}, {"source": 817229, "target": 1133811}, {"source": 817229, "target": 905844}, {"source": 817229, "target": 846964}, {"source": 817229, "target": 846965}, {"source": 817229, "target": 817270}, {"source": 817229, "target": 846963}, {"source": 817229, "target": 846971}, {"source": 817229, "target": 846972}, {"source": 817229, "target": 817279}, {"source": 989007, "target": 885256}, {"source": 989007, "target": 817044}, {"source": 989007, "target": 817428}, {"source": 989007, "target": 817172}, {"source": 989007, "target": 817180}, {"source": 989007, "target": 817437}, {"source": 989007, "target": 957469}, {"source": 989007, "target": 1133989}, {"source": 989007, "target": 817324}, {"source": 989007, "target": 817453}, {"source": 989007, "target": 1134001}, {"source": 989007, "target": 817332}, {"source": 989007, "target": 861639}, {"source": 989007, "target": 817229}, {"source": 989007, "target": 846927}, {"source": 989007, "target": 817108}, {"source": 989007, "target": 816981}, {"source": 989007, "target": 989017}, {"source": 989007, "target": 817115}, {"source": 989007, "target": 816989}, {"source": 989007, "target": 1133811}, {"source": 989007, "target": 817279}, {"source": 846927, "target": 885251}, {"source": 846927, "target": 885256}, {"source": 846927, "target": 817034}, {"source": 846927, "target": 817044}, {"source": 846927, "target": 817428}, {"source": 846927, "target": 817172}, {"source": 846927, "target": 817180}, {"source": 846927, "target": 817437}, {"source": 846927, "target": 957469}, {"source": 846927, "target": 817181}, {"source": 846927, "target": 1133989}, {"source": 846927, "target": 817324}, {"source": 846927, "target": 817453}, {"source": 846927, "target": 855982}, {"source": 846927, "target": 1134001}, {"source": 846927, "target": 817332}, {"source": 846927, "target": 817338}, {"source": 846927, "target": 861639}, {"source": 846927, "target": 817229}, {"source": 846927, "target": 817101}, {"source": 846927, "target": 989007}, {"source": 846927, "target": 846928}, {"source": 846927, "target": 817357}, {"source": 846927, "target": 817108}, {"source": 846927, "target": 816981}, {"source": 846927, "target": 817236}, {"source": 846927, "target": 940759}, {"source": 846927, "target": 989017}, {"source": 846927, "target": 817115}, {"source": 846927, "target": 816989}, {"source": 846927, "target": 885214}, {"source": 846927, "target": 885215}, {"source": 846927, "target": 940768}, {"source": 846927, "target": 885217}, {"source": 846927, "target": 885216}, {"source": 846927, "target": 817125}, {"source": 846927, "target": 940776}, {"source": 846927, "target": 817258}, {"source": 846927, "target": 817136}, {"source": 846927, "target": 1133811}, {"source": 846927, "target": 817012}, {"source": 846927, "target": 855801}, {"source": 846927, "target": 940794}, {"source": 846927, "target": 817020}, {"source": 846927, "target": 817279}, {"source": 1133811, "target": 940805}, {"source": 1133811, "target": 817044}, {"source": 1133811, "target": 817437}, {"source": 1133811, "target": 1133989}, {"source": 1133811, "target": 817324}, {"source": 1133811, "target": 817199}, {"source": 1133811, "target": 1092914}, {"source": 1133811, "target": 817332}, {"source": 1133811, "target": 817205}, {"source": 1133811, "target": 817344}, {"source": 1133811, "target": 846917}, {"source": 1133811, "target": 817229}, {"source": 1133811, "target": 846927}, {"source": 1133811, "target": 989007}, {"source": 1133811, "target": 846928}, {"source": 1133811, "target": 816979}, {"source": 1133811, "target": 817108}, {"source": 1133811, "target": 816981}, {"source": 1133811, "target": 989017}, {"source": 1133811, "target": 817114}, {"source": 1133811, "target": 885211}, {"source": 1133811, "target": 817115}, {"source": 1133811, "target": 885209}, {"source": 1133811, "target": 1133917}, {"source": 1133811, "target": 817376}, {"source": 1133811, "target": 940773}, {"source": 1133811, "target": 817126}, {"source": 1133811, "target": 817125}, {"source": 1133811, "target": 817258}, {"source": 1133811, "target": 885239}, {"source": 1133811, "target": 817020}, {"source": 1133811, "target": 817279}, {"source": 817332, "target": 885250}, {"source": 817332, "target": 817412}, {"source": 817332, "target": 988678}, {"source": 817332, "target": 885256}, {"source": 817332, "target": 942986}, {"source": 817332, "target": 817044}, {"source": 817332, "target": 817428}, {"source": 817332, "target": 817172}, {"source": 817332, "target": 817300}, {"source": 817332, "target": 817180}, {"source": 817332, "target": 817437}, {"source": 817332, "target": 817057}, {"source": 817332, "target": 1133989}, {"source": 817332, "target": 817317}, {"source": 817332, "target": 817191}, {"source": 817332, "target": 817324}, {"source": 817332, "target": 817196}, {"source": 817332, "target": 855985}, {"source": 817332, "target": 817458}, {"source": 817332, "target": 817206}, {"source": 817332, "target": 817464}, {"source": 817332, "target": 861639}, {"source": 817332, "target": 817352}, {"source": 817332, "target": 1092937}, {"source": 817332, "target": 817228}, {"source": 817332, "target": 817229}, {"source": 817332, "target": 989005}, {"source": 817332, "target": 846927}, {"source": 817332, "target": 989007}, {"source": 817332, "target": 817232}, {"source": 817332, "target": 817108}, {"source": 817332, "target": 816981}, {"source": 817332, "target": 1133781}, {"source": 817332, "target": 817239}, {"source": 817332, "target": 885208}, {"source": 817332, "target": 989017}, {"source": 817332, "target": 1092954}, {"source": 817332, "target": 817115}, {"source": 817332, "target": 816990}, {"source": 817332, "target": 940767}, {"source": 817332, "target": 817121}, {"source": 817332, "target": 1133811}, {"source": 817332, "target": 905844}, {"source": 817332, "target": 885242}, {"source": 817332, "target": 846971}, {"source": 817332, "target": 846972}, {"source": 817332, "target": 846973}, {"source": 817332, "target": 817279}, {"source": 817108, "target": 817280}, {"source": 817108, "target": 817154}, {"source": 817108, "target": 817414}, {"source": 817108, "target": 817287}, {"source": 817108, "target": 885256}, {"source": 817108, "target": 817296}, {"source": 817108, "target": 817044}, {"source": 817108, "target": 817428}, {"source": 817108, "target": 817172}, {"source": 817108, "target": 817305}, {"source": 817108, "target": 817180}, {"source": 817108, "target": 817437}, {"source": 817108, "target": 957469}, {"source": 817108, "target": 1133989}, {"source": 817108, "target": 940841}, {"source": 817108, "target": 816938}, {"source": 817108, "target": 817324}, {"source": 817108, "target": 817453}, {"source": 817108, "target": 1134001}, {"source": 817108, "target": 817332}, {"source": 817108, "target": 817463}, {"source": 817108, "target": 988996}, {"source": 817108, "target": 861639}, {"source": 817108, "target": 816970}, {"source": 817108, "target": 817229}, {"source": 817108, "target": 846927}, {"source": 817108, "target": 989007}, {"source": 817108, "target": 846928}, {"source": 817108, "target": 817361}, {"source": 817108, "target": 816981}, {"source": 817108, "target": 817109}, {"source": 817108, "target": 989017}, {"source": 817108, "target": 817115}, {"source": 817108, "target": 816989}, {"source": 817108, "target": 817119}, {"source": 817108, "target": 940768}, {"source": 817108, "target": 846946}, {"source": 817108, "target": 817125}, {"source": 817108, "target": 817256}, {"source": 817108, "target": 885229}, {"source": 817108, "target": 817136}, {"source": 817108, "target": 1133811}, {"source": 817108, "target": 846968}, {"source": 817108, "target": 940798}, {"source": 817108, "target": 817279}, {"source": 816981, "target": 817025}, {"source": 816981, "target": 1092868}, {"source": 816981, "target": 885256}, {"source": 816981, "target": 905866}, {"source": 816981, "target": 885258}, {"source": 816981, "target": 817044}, {"source": 816981, "target": 817428}, {"source": 816981, "target": 817172}, {"source": 816981, "target": 817180}, {"source": 816981, "target": 817437}, {"source": 816981, "target": 957469}, {"source": 816981, "target": 1133989}, {"source": 816981, "target": 990763}, {"source": 816981, "target": 817324}, {"source": 816981, "target": 817453}, {"source": 816981, "target": 1134001}, {"source": 816981, "target": 817332}, {"source": 816981, "target": 817464}, {"source": 816981, "target": 817208}, {"source": 816981, "target": 861639}, {"source": 816981, "target": 817353}, {"source": 816981, "target": 817229}, {"source": 816981, "target": 817230}, {"source": 816981, "target": 846927}, {"source": 816981, "target": 989007}, {"source": 816981, "target": 989009}, {"source": 816981, "target": 817232}, {"source": 816981, "target": 816979}, {"source": 816981, "target": 817108}, {"source": 816981, "target": 817237}, {"source": 816981, "target": 885206}, {"source": 816981, "target": 989016}, {"source": 816981, "target": 989017}, {"source": 816981, "target": 817115}, {"source": 816981, "target": 816989}, {"source": 816981, "target": 987613}, {"source": 816981, "target": 816990}, {"source": 816981, "target": 817249}, {"source": 816981, "target": 1133811}, {"source": 816981, "target": 817270}, {"source": 816981, "target": 940793}, {"source": 816981, "target": 940794}, {"source": 816981, "target": 817147}, {"source": 816981, "target": 940798}, {"source": 816981, "target": 817279}, {"source": 817044, "target": 817025}, {"source": 817044, "target": 817410}, {"source": 817044, "target": 817412}, {"source": 817044, "target": 988678}, {"source": 817044, "target": 846983}, {"source": 817044, "target": 885256}, {"source": 817044, "target": 940809}, {"source": 817044, "target": 817287}, {"source": 817044, "target": 817163}, {"source": 817044, "target": 817422}, {"source": 817044, "target": 988302}, {"source": 817044, "target": 817296}, {"source": 817044, "target": 817428}, {"source": 817044, "target": 817172}, {"source": 817044, "target": 817300}, {"source": 817044, "target": 817180}, {"source": 817044, "target": 817437}, {"source": 817044, "target": 957469}, {"source": 817044, "target": 987933}, {"source": 817044, "target": 817442}, {"source": 817044, "target": 1133989}, {"source": 817044, "target": 817063}, {"source": 817044, "target": 817324}, {"source": 817044, "target": 823344}, {"source": 817044, "target": 855985}, {"source": 817044, "target": 951089}, {"source": 817044, "target": 817332}, {"source": 817044, "target": 817204}, {"source": 817044, "target": 817464}, {"source": 817044, "target": 817081}, {"source": 817044, "target": 817344}, {"source": 817044, "target": 861639}, {"source": 817044, "target": 817351}, {"source": 817044, "target": 817229}, {"source": 817044, "target": 846927}, {"source": 817044, "target": 989007}, {"source": 817044, "target": 817232}, {"source": 817044, "target": 817108}, {"source": 817044, "target": 816981}, {"source": 817044, "target": 1133781}, {"source": 817044, "target": 817109}, {"source": 817044, "target": 885208}, {"source": 817044, "target": 989017}, {"source": 817044, "target": 940761}, {"source": 817044, "target": 817115}, {"source": 817044, "target": 816989}, {"source": 817044, "target": 940767}, {"source": 817044, "target": 940768}, {"source": 817044, "target": 817119}, {"source": 817044, "target": 817376}, {"source": 817044, "target": 846947}, {"source": 817044, "target": 846949}, {"source": 817044, "target": 817126}, {"source": 817044, "target": 940774}, {"source": 817044, "target": 846950}, {"source": 817044, "target": 940777}, {"source": 817044, "target": 817258}, {"source": 817044, "target": 817133}, {"source": 817044, "target": 1133811}, {"source": 817044, "target": 885237}, {"source": 817044, "target": 885242}, {"source": 817044, "target": 817022}, {"source": 817044, "target": 817279}, {"source": 989017, "target": 885256}, {"source": 989017, "target": 817044}, {"source": 989017, "target": 817428}, {"source": 989017, "target": 817172}, {"source": 989017, "target": 817180}, {"source": 989017, "target": 817437}, {"source": 989017, "target": 957469}, {"source": 989017, "target": 1133989}, {"source": 989017, "target": 817324}, {"source": 989017, "target": 817453}, {"source": 989017, "target": 1134001}, {"source": 989017, "target": 817332}, {"source": 989017, "target": 861639}, {"source": 989017, "target": 817229}, {"source": 989017, "target": 817101}, {"source": 989017, "target": 846927}, {"source": 989017, "target": 989007}, {"source": 989017, "target": 846928}, {"source": 989017, "target": 817108}, {"source": 989017, "target": 816981}, {"source": 989017, "target": 817115}, {"source": 989017, "target": 816989}, {"source": 989017, "target": 940768}, {"source": 989017, "target": 817125}, {"source": 989017, "target": 817136}, {"source": 989017, "target": 1133811}, {"source": 989017, "target": 940794}, {"source": 989017, "target": 817279}, {"source": 817115, "target": 817025}, {"source": 817115, "target": 817412}, {"source": 817115, "target": 885254}, {"source": 817115, "target": 846983}, {"source": 817115, "target": 817159}, {"source": 817115, "target": 861455}, {"source": 817115, "target": 817296}, {"source": 817115, "target": 817044}, {"source": 817115, "target": 905364}, {"source": 817115, "target": 989078}, {"source": 817115, "target": 1092887}, {"source": 817115, "target": 817428}, {"source": 817115, "target": 817305}, {"source": 817115, "target": 817306}, {"source": 817115, "target": 817437}, {"source": 817115, "target": 1133853}, {"source": 817115, "target": 817054}, {"source": 817115, "target": 817315}, {"source": 817115, "target": 1133989}, {"source": 817115, "target": 987558}, {"source": 817115, "target": 817324}, {"source": 817115, "target": 817455}, {"source": 817115, "target": 817022}, {"source": 817115, "target": 817332}, {"source": 817115, "target": 817205}, {"source": 817115, "target": 846905}, {"source": 817115, "target": 1092924}, {"source": 817115, "target": 817344}, {"source": 817115, "target": 861639}, {"source": 817115, "target": 816970}, {"source": 817115, "target": 817229}, {"source": 817115, "target": 846927}, {"source": 817115, "target": 989007}, {"source": 817115, "target": 817361}, {"source": 817115, "target": 817108}, {"source": 817115, "target": 816981}, {"source": 817115, "target": 817237}, {"source": 817115, "target": 1092951}, {"source": 817115, "target": 846936}, {"source": 817115, "target": 989017}, {"source": 817115, "target": 989020}, {"source": 817115, "target": 817244}, {"source": 817115, "target": 816989}, {"source": 817115, "target": 817376}, {"source": 817115, "target": 817126}, {"source": 817115, "target": 817127}, {"source": 817115, "target": 940779}, {"source": 817115, "target": 817133}, {"source": 817115, "target": 1133934}, {"source": 817115, "target": 817136}, {"source": 817115, "target": 1133811}, {"source": 817115, "target": 1133822}, {"source": 817115, "target": 817279}, {"source": 817437, "target": 885258}, {"source": 817437, "target": 817172}, {"source": 817437, "target": 817180}, {"source": 817437, "target": 957469}, {"source": 817437, "target": 817181}, {"source": 817437, "target": 1134115}, {"source": 817437, "target": 817196}, {"source": 817437, "target": 817205}, {"source": 817437, "target": 846919}, {"source": 817437, "target": 817228}, {"source": 817437, "target": 817229}, {"source": 817437, "target": 1415757}, {"source": 817437, "target": 846927}, {"source": 817437, "target": 817237}, {"source": 817437, "target": 817249}, {"source": 817437, "target": 956516}, {"source": 817437, "target": 817256}, {"source": 817437, "target": 988788}, {"source": 817437, "target": 846965}, {"source": 817437, "target": 846968}, {"source": 817437, "target": 1132153}, {"source": 817437, "target": 817279}, {"source": 817437, "target": 817280}, {"source": 817437, "target": 846983}, {"source": 817437, "target": 817287}, {"source": 817437, "target": 817293}, {"source": 817437, "target": 817296}, {"source": 817437, "target": 817305}, {"source": 817437, "target": 817306}, {"source": 817437, "target": 817315}, {"source": 817437, "target": 817317}, {"source": 817437, "target": 817324}, {"source": 817437, "target": 817332}, {"source": 817437, "target": 817344}, {"source": 817437, "target": 987343}, {"source": 817437, "target": 817361}, {"source": 817437, "target": 940758}, {"source": 817437, "target": 940759}, {"source": 817437, "target": 913627}, {"source": 817437, "target": 817376}, {"source": 817437, "target": 1133811}, {"source": 817437, "target": 855801}, {"source": 817437, "target": 940794}, {"source": 817437, "target": 940798}, {"source": 817437, "target": 1092867}, {"source": 817437, "target": 940804}, {"source": 817437, "target": 817412}, {"source": 817437, "target": 1136397}, {"source": 817437, "target": 940841}, {"source": 817437, "target": 816938}, {"source": 817437, "target": 817455}, {"source": 817437, "target": 817464}, {"source": 817437, "target": 988996}, {"source": 817437, "target": 861512}, {"source": 817437, "target": 816970}, {"source": 817437, "target": 989007}, {"source": 817437, "target": 816981}, {"source": 817437, "target": 989017}, {"source": 817437, "target": 816985}, {"source": 817437, "target": 816989}, {"source": 817437, "target": 989026}, {"source": 817437, "target": 817022}, {"source": 817437, "target": 817034}, {"source": 817437, "target": 817044}, {"source": 817437, "target": 817054}, {"source": 817437, "target": 1133989}, {"source": 817437, "target": 817069}, {"source": 817437, "target": 855982}, {"source": 817437, "target": 817074}, {"source": 817437, "target": 861639}, {"source": 817437, "target": 998860}, {"source": 817437, "target": 817101}, {"source": 817437, "target": 905681}, {"source": 817437, "target": 817106}, {"source": 817437, "target": 817108}, {"source": 817437, "target": 817109}, {"source": 817437, "target": 885207}, {"source": 817437, "target": 817115}, {"source": 817437, "target": 1178591}, {"source": 817437, "target": 885216}, {"source": 817437, "target": 817119}, {"source": 817437, "target": 817126}, {"source": 817437, "target": 817133}, {"source": 817279, "target": 817280}, {"source": 817279, "target": 817412}, {"source": 817279, "target": 885256}, {"source": 817279, "target": 817165}, {"source": 817279, "target": 861455}, {"source": 817279, "target": 817044}, {"source": 817279, "target": 817428}, {"source": 817279, "target": 817172}, {"source": 817279, "target": 989079}, {"source": 817279, "target": 817047}, {"source": 817279, "target": 817177}, {"source": 817279, "target": 817429}, {"source": 817279, "target": 817049}, {"source": 817279, "target": 817180}, {"source": 817279, "target": 817437}, {"source": 817279, "target": 957469}, {"source": 817279, "target": 989085}, {"source": 817279, "target": 1133989}, {"source": 817279, "target": 817065}, {"source": 817279, "target": 817324}, {"source": 817279, "target": 817453}, {"source": 817279, "target": 817196}, {"source": 817279, "target": 817069}, {"source": 817279, "target": 817068}, {"source": 817279, "target": 1134001}, {"source": 817279, "target": 817329}, {"source": 817279, "target": 846898}, {"source": 817279, "target": 817332}, {"source": 817279, "target": 817338}, {"source": 817279, "target": 988995}, {"source": 817279, "target": 861639}, {"source": 817279, "target": 817353}, {"source": 817279, "target": 817228}, {"source": 817279, "target": 817229}, {"source": 817279, "target": 846927}, {"source": 817279, "target": 989007}, {"source": 817279, "target": 846928}, {"source": 817279, "target": 885203}, {"source": 817279, "target": 817108}, {"source": 817279, "target": 816981}, {"source": 817279, "target": 817109}, {"source": 817279, "target": 940756}, {"source": 817279, "target": 885208}, {"source": 817279, "target": 989017}, {"source": 817279, "target": 817239}, {"source": 817279, "target": 817115}, {"source": 817279, "target": 817244}, {"source": 817279, "target": 816989}, {"source": 817279, "target": 987101}, {"source": 817279, "target": 817375}, {"source": 817279, "target": 940768}, {"source": 817279, "target": 817376}, {"source": 817279, "target": 940771}, {"source": 817279, "target": 817125}, {"source": 817279, "target": 885224}, {"source": 817279, "target": 817133}, {"source": 817279, "target": 940782}, {"source": 817279, "target": 817136}, {"source": 817279, "target": 1133811}, {"source": 817279, "target": 817012}, {"source": 817279, "target": 817141}, {"source": 817279, "target": 817147}, {"source": 817279, "target": 817020}, {"source": 940800, "target": 1092865}, {"source": 940800, "target": 817025}, {"source": 940800, "target": 817160}, {"source": 940800, "target": 940810}, {"source": 940800, "target": 817422}, {"source": 940800, "target": 1092881}, {"source": 940800, "target": 1094164}, {"source": 940800, "target": 817317}, {"source": 940800, "target": 905898}, {"source": 940800, "target": 905900}, {"source": 940800, "target": 1181231}, {"source": 940800, "target": 817328}, {"source": 940800, "target": 958769}, {"source": 940800, "target": 990002}, {"source": 940800, "target": 817329}, {"source": 940800, "target": 817463}, {"source": 940800, "target": 963001}, {"source": 940800, "target": 1092921}, {"source": 940800, "target": 1134017}, {"source": 940800, "target": 817218}, {"source": 940800, "target": 817352}, {"source": 940800, "target": 1178446}, {"source": 940800, "target": 1092949}, {"source": 940800, "target": 817237}, {"source": 940800, "target": 1132119}, {"source": 940800, "target": 940759}, {"source": 940800, "target": 989015}, {"source": 940800, "target": 885207}, {"source": 940800, "target": 987099}, {"source": 940800, "target": 846933}, {"source": 940800, "target": 816989}, {"source": 940800, "target": 987103}, {"source": 940800, "target": 989029}, {"source": 940800, "target": 905191}, {"source": 940800, "target": 885228}, {"source": 940800, "target": 817139}, {"source": 940800, "target": 846963}, {"source": 940800, "target": 885237}, {"source": 1092865, "target": 940800}, {"source": 1092865, "target": 817025}, {"source": 1092865, "target": 940810}, {"source": 1092865, "target": 817423}, {"source": 1092865, "target": 1094164}, {"source": 1092865, "target": 905900}, {"source": 1092865, "target": 1181231}, {"source": 1092865, "target": 817328}, {"source": 1092865, "target": 958769}, {"source": 1092865, "target": 1134017}, {"source": 1092865, "target": 817094}, {"source": 1092865, "target": 817352}, {"source": 1092865, "target": 816970}, {"source": 1092865, "target": 1178446}, {"source": 1092865, "target": 1092949}, {"source": 1092865, "target": 817237}, {"source": 1092865, "target": 1132119}, {"source": 1092865, "target": 940759}, {"source": 1092865, "target": 817114}, {"source": 1092865, "target": 987099}, {"source": 1092865, "target": 816989}, {"source": 1092865, "target": 987103}, {"source": 1092865, "target": 989029}, {"source": 1092865, "target": 905191}, {"source": 1092865, "target": 885228}, {"source": 1092865, "target": 817139}, {"source": 1092865, "target": 885237}, {"source": 817025, "target": 940800}, {"source": 817025, "target": 1092865}, {"source": 817025, "target": 817412}, {"source": 817025, "target": 846983}, {"source": 817025, "target": 817160}, {"source": 817025, "target": 940810}, {"source": 817025, "target": 885258}, {"source": 817025, "target": 817423}, {"source": 817025, "target": 817296}, {"source": 817025, "target": 1094164}, {"source": 817025, "target": 817044}, {"source": 817025, "target": 817017}, {"source": 817025, "target": 817058}, {"source": 817025, "target": 817315}, {"source": 817025, "target": 817060}, {"source": 817025, "target": 817317}, {"source": 817025, "target": 905900}, {"source": 817025, "target": 1181231}, {"source": 817025, "target": 817328}, {"source": 817025, "target": 958769}, {"source": 817025, "target": 817329}, {"source": 817025, "target": 817463}, {"source": 817025, "target": 817208}, {"source": 817025, "target": 817464}, {"source": 817025, "target": 817081}, {"source": 817025, "target": 817344}, {"source": 817025, "target": 1134017}, {"source": 817025, "target": 817218}, {"source": 817025, "target": 816960}, {"source": 817025, "target": 817094}, {"source": 817025, "target": 861639}, {"source": 817025, "target": 817352}, {"source": 817025, "target": 816970}, {"source": 817025, "target": 1178446}, {"source": 817025, "target": 987343}, {"source": 817025, "target": 940798}, {"source": 817025, "target": 846931}, {"source": 817025, "target": 1092949}, {"source": 817025, "target": 817237}, {"source": 817025, "target": 1132119}, {"source": 817025, "target": 940759}, {"source": 817025, "target": 816981}, {"source": 817025, "target": 817114}, {"source": 817025, "target": 987099}, {"source": 817025, "target": 817115}, {"source": 817025, "target": 816989}, {"source": 817025, "target": 846933}, {"source": 817025, "target": 987103}, {"source": 817025, "target": 885207}, {"source": 817025, "target": 817119}, {"source": 817025, "target": 989029}, {"source": 817025, "target": 905191}, {"source": 817025, "target": 817109}, {"source": 817025, "target": 817256}, {"source": 817025, "target": 940779}, {"source": 817025, "target": 885228}, {"source": 817025, "target": 817133}, {"source": 817025, "target": 817265}, {"source": 817025, "target": 817139}, {"source": 817025, "target": 846963}, {"source": 817025, "target": 885237}, {"source": 817025, "target": 940793}, {"source": 817025, "target": 940794}, {"source": 817025, "target": 817022}, {"source": 1094164, "target": 940800}, {"source": 1094164, "target": 1092865}, {"source": 1094164, "target": 817025}, {"source": 1094164, "target": 1134017}, {"source": 1094164, "target": 989029}, {"source": 1094164, "target": 1132119}, {"source": 1094164, "target": 905191}, {"source": 1094164, "target": 817352}, {"source": 1094164, "target": 885228}, {"source": 1094164, "target": 1178446}, {"source": 1094164, "target": 1181231}, {"source": 1094164, "target": 958769}, {"source": 1094164, "target": 817139}, {"source": 1094164, "target": 1092949}, {"source": 1094164, "target": 885237}, {"source": 1094164, "target": 940759}, {"source": 1094164, "target": 987099}, {"source": 1094164, "target": 987103}, {"source": 1181231, "target": 940800}, {"source": 1181231, "target": 1092865}, {"source": 1181231, "target": 817025}, {"source": 1181231, "target": 940810}, {"source": 1181231, "target": 1094164}, {"source": 1181231, "target": 958769}, {"source": 1181231, "target": 1134017}, {"source": 1181231, "target": 817352}, {"source": 1181231, "target": 1178446}, {"source": 1181231, "target": 1092949}, {"source": 1181231, "target": 817237}, {"source": 1181231, "target": 1132119}, {"source": 1181231, "target": 940759}, {"source": 1181231, "target": 987099}, {"source": 1181231, "target": 816989}, {"source": 1181231, "target": 987103}, {"source": 1181231, "target": 989029}, {"source": 1181231, "target": 905191}, {"source": 1181231, "target": 885228}, {"source": 1181231, "target": 817139}, {"source": 1181231, "target": 885237}, {"source": 958769, "target": 940800}, {"source": 958769, "target": 1092865}, {"source": 958769, "target": 817025}, {"source": 958769, "target": 817154}, {"source": 958769, "target": 817414}, {"source": 958769, "target": 817160}, {"source": 958769, "target": 993675}, {"source": 958769, "target": 861455}, {"source": 958769, "target": 1094164}, {"source": 958769, "target": 817172}, {"source": 958769, "target": 817429}, {"source": 958769, "target": 817305}, {"source": 958769, "target": 1092897}, {"source": 958769, "target": 1181231}, {"source": 958769, "target": 823344}, {"source": 958769, "target": 1092913}, {"source": 958769, "target": 817206}, {"source": 958769, "target": 817463}, {"source": 958769, "target": 846905}, {"source": 958769, "target": 1134017}, {"source": 958769, "target": 817352}, {"source": 958769, "target": 817354}, {"source": 958769, "target": 989900}, {"source": 958769, "target": 1178446}, {"source": 958769, "target": 1092944}, {"source": 958769, "target": 846931}, {"source": 958769, "target": 1092949}, {"source": 958769, "target": 1132119}, {"source": 958769, "target": 940759}, {"source": 958769, "target": 846936}, {"source": 958769, "target": 987099}, {"source": 958769, "target": 1133916}, {"source": 958769, "target": 816989}, {"source": 958769, "target": 987611}, {"source": 958769, "target": 987103}, {"source": 958769, "target": 1133920}, {"source": 958769, "target": 817249}, {"source": 958769, "target": 885239}, {"source": 958769, "target": 989029}, {"source": 958769, "target": 816997}, {"source": 958769, "target": 905191}, {"source": 958769, "target": 817256}, {"source": 958769, "target": 885228}, {"source": 958769, "target": 885229}, {"source": 958769, "target": 817139}, {"source": 958769, "target": 885237}, {"source": 958769, "target": 905846}, {"source": 958769, "target": 940789}, {"source": 958769, "target": 846968}, {"source": 958769, "target": 817406}, {"source": 1134017, "target": 940800}, {"source": 1134017, "target": 1092865}, {"source": 1134017, "target": 817025}, {"source": 1134017, "target": 940810}, {"source": 1134017, "target": 1094164}, {"source": 1134017, "target": 1181231}, {"source": 1134017, "target": 817328}, {"source": 1134017, "target": 958769}, {"source": 1134017, "target": 817352}, {"source": 1134017, "target": 1178446}, {"source": 1134017, "target": 1092949}, {"source": 1134017, "target": 817237}, {"source": 1134017, "target": 1132119}, {"source": 1134017, "target": 940759}, {"source": 1134017, "target": 987099}, {"source": 1134017, "target": 816989}, {"source": 1134017, "target": 987103}, {"source": 1134017, "target": 989029}, {"source": 1134017, "target": 905191}, {"source": 1134017, "target": 885228}, {"source": 1134017, "target": 817139}, {"source": 1134017, "target": 885237}, {"source": 817352, "target": 940800}, {"source": 817352, "target": 1092865}, {"source": 817352, "target": 817025}, {"source": 817352, "target": 940810}, {"source": 817352, "target": 817423}, {"source": 817352, "target": 1094164}, {"source": 817352, "target": 817057}, {"source": 817352, "target": 817191}, {"source": 817352, "target": 905900}, {"source": 817352, "target": 1181231}, {"source": 817352, "target": 817328}, {"source": 817352, "target": 958769}, {"source": 817352, "target": 817458}, {"source": 817352, "target": 817332}, {"source": 817352, "target": 817206}, {"source": 817352, "target": 1134017}, {"source": 817352, "target": 817094}, {"source": 817352, "target": 816970}, {"source": 817352, "target": 1178446}, {"source": 817352, "target": 987343}, {"source": 817352, "target": 817106}, {"source": 817352, "target": 1092949}, {"source": 817352, "target": 817237}, {"source": 817352, "target": 1132119}, {"source": 817352, "target": 940759}, {"source": 817352, "target": 940760}, {"source": 817352, "target": 817114}, {"source": 817352, "target": 987099}, {"source": 817352, "target": 817239}, {"source": 817352, "target": 816989}, {"source": 817352, "target": 816990}, {"source": 817352, "target": 987103}, {"source": 817352, "target": 989029}, {"source": 817352, "target": 817126}, {"source": 817352, "target": 905191}, {"source": 817352, "target": 885228}, {"source": 817352, "target": 817139}, {"source": 817352, "target": 885237}, {"source": 817352, "target": 846972}, {"source": 817352, "target": 846973}, {"source": 1178446, "target": 940800}, {"source": 1178446, "target": 1092865}, {"source": 1178446, "target": 817025}, {"source": 1178446, "target": 1134017}, {"source": 1178446, "target": 989029}, {"source": 1178446, "target": 1132119}, {"source": 1178446, "target": 905191}, {"source": 1178446, "target": 817352}, {"source": 1178446, "target": 885228}, {"source": 1178446, "target": 1181231}, {"source": 1178446, "target": 958769}, {"source": 1178446, "target": 817139}, {"source": 1178446, "target": 1094164}, {"source": 1178446, "target": 1092949}, {"source": 1178446, "target": 885237}, {"source": 1178446, "target": 940759}, {"source": 1178446, "target": 987099}, {"source": 1178446, "target": 987103}, {"source": 1092949, "target": 940800}, {"source": 1092949, "target": 1092865}, {"source": 1092949, "target": 817025}, {"source": 1092949, "target": 940810}, {"source": 1092949, "target": 1094164}, {"source": 1092949, "target": 905900}, {"source": 1092949, "target": 1181231}, {"source": 1092949, "target": 817328}, {"source": 1092949, "target": 958769}, {"source": 1092949, "target": 817199}, {"source": 1092949, "target": 1092914}, {"source": 1092949, "target": 1134017}, {"source": 1092949, "target": 846917}, {"source": 1092949, "target": 861639}, {"source": 1092949, "target": 817352}, {"source": 1092949, "target": 1178446}, {"source": 1092949, "target": 816979}, {"source": 1092949, "target": 817237}, {"source": 1092949, "target": 1132119}, {"source": 1092949, "target": 940759}, {"source": 1092949, "target": 885209}, {"source": 1092949, "target": 987099}, {"source": 1092949, "target": 885211}, {"source": 1092949, "target": 816989}, {"source": 1092949, "target": 987103}, {"source": 1092949, "target": 989029}, {"source": 1092949, "target": 940773}, {"source": 1092949, "target": 905191}, {"source": 1092949, "target": 817125}, {"source": 1092949, "target": 885228}, {"source": 1092949, "target": 817139}, {"source": 1092949, "target": 885237}, {"source": 940759, "target": 940800}, {"source": 940759, "target": 1092865}, {"source": 940759, "target": 817025}, {"source": 940759, "target": 940804}, {"source": 940759, "target": 817287}, {"source": 940759, "target": 940810}, {"source": 940759, "target": 988300}, {"source": 940759, "target": 817293}, {"source": 940759, "target": 1094164}, {"source": 940759, "target": 817428}, {"source": 940759, "target": 989079}, {"source": 940759, "target": 817437}, {"source": 940759, "target": 817181}, {"source": 940759, "target": 817054}, {"source": 940759, "target": 905898}, {"source": 940759, "target": 855982}, {"source": 940759, "target": 1181231}, {"source": 940759, "target": 817328}, {"source": 940759, "target": 958769}, {"source": 940759, "target": 1092911}, {"source": 940759, "target": 1092913}, {"source": 940759, "target": 846898}, {"source": 940759, "target": 817338}, {"source": 940759, "target": 1134017}, {"source": 940759, "target": 817094}, {"source": 940759, "target": 817352}, {"source": 940759, "target": 817228}, {"source": 940759, "target": 1178446}, {"source": 940759, "target": 987343}, {"source": 940759, "target": 846927}, {"source": 940759, "target": 905681}, {"source": 940759, "target": 885203}, {"source": 940759, "target": 940756}, {"source": 940759, "target": 1092949}, {"source": 940759, "target": 817237}, {"source": 940759, "target": 1132119}, {"source": 940759, "target": 817236}, {"source": 940759, "target": 816985}, {"source": 940759, "target": 987099}, {"source": 940759, "target": 913627}, {"source": 940759, "target": 816989}, {"source": 940759, "target": 987101}, {"source": 940759, "target": 987103}, {"source": 940759, "target": 817375}, {"source": 940759, "target": 885216}, {"source": 940759, "target": 817376}, {"source": 940759, "target": 885215}, {"source": 940759, "target": 885214}, {"source": 940759, "target": 989029}, {"source": 940759, "target": 885217}, {"source": 940759, "target": 905191}, {"source": 940759, "target": 940776}, {"source": 940759, "target": 817258}, {"source": 940759, "target": 885228}, {"source": 940759, "target": 817139}, {"source": 940759, "target": 988788}, {"source": 940759, "target": 885237}, {"source": 940759, "target": 846965}, {"source": 940759, "target": 817012}, {"source": 940759, "target": 855801}, {"source": 940759, "target": 817020}, {"source": 940759, "target": 817406}, {"source": 1132119, "target": 940800}, {"source": 1132119, "target": 1092865}, {"source": 1132119, "target": 817025}, {"source": 1132119, "target": 940801}, {"source": 1132119, "target": 817154}, {"source": 1132119, "target": 817159}, {"source": 1132119, "target": 940810}, {"source": 1132119, "target": 993675}, {"source": 1132119, "target": 940814}, {"source": 1132119, "target": 817039}, {"source": 1132119, "target": 1094164}, {"source": 1132119, "target": 817172}, {"source": 1132119, "target": 1092884}, {"source": 1132119, "target": 817173}, {"source": 1132119, "target": 817050}, {"source": 1132119, "target": 817442}, {"source": 1132119, "target": 905898}, {"source": 1132119, "target": 851371}, {"source": 1132119, "target": 855982}, {"source": 1132119, "target": 1181231}, {"source": 1132119, "target": 817328}, {"source": 1132119, "target": 958769}, {"source": 1132119, "target": 817329}, {"source": 1132119, "target": 1134004}, {"source": 1132119, "target": 816960}, {"source": 1132119, "target": 1134017}, {"source": 1132119, "target": 816961}, {"source": 1132119, "target": 817352}, {"source": 1132119, "target": 998860}, {"source": 1132119, "target": 1178446}, {"source": 1132119, "target": 817235}, {"source": 1132119, "target": 817236}, {"source": 1132119, "target": 1092949}, {"source": 1132119, "target": 817237}, {"source": 1132119, "target": 940759}, {"source": 1132119, "target": 987099}, {"source": 1132119, "target": 816989}, {"source": 1132119, "target": 1132126}, {"source": 1132119, "target": 987103}, {"source": 1132119, "target": 989024}, {"source": 1132119, "target": 817249}, {"source": 1132119, "target": 817122}, {"source": 1132119, "target": 989029}, {"source": 1132119, "target": 1132134}, {"source": 1132119, "target": 905191}, {"source": 1132119, "target": 885228}, {"source": 1132119, "target": 817265}, {"source": 1132119, "target": 817139}, {"source": 1132119, "target": 885237}, {"source": 1132119, "target": 817404}, {"source": 1132119, "target": 940799}, {"source": 987099, "target": 940800}, {"source": 987099, "target": 1092865}, {"source": 987099, "target": 817025}, {"source": 987099, "target": 940810}, {"source": 987099, "target": 817165}, {"source": 987099, "target": 1094164}, {"source": 987099, "target": 989078}, {"source": 987099, "target": 989079}, {"source": 987099, "target": 1181231}, {"source": 987099, "target": 1092911}, {"source": 987099, "target": 958769}, {"source": 987099, "target": 1092913}, {"source": 987099, "target": 846898}, {"source": 987099, "target": 1134017}, {"source": 987099, "target": 817352}, {"source": 987099, "target": 1178446}, {"source": 987099, "target": 817361}, {"source": 987099, "target": 885203}, {"source": 987099, "target": 940756}, {"source": 987099, "target": 1092949}, {"source": 987099, "target": 817237}, {"source": 987099, "target": 1132119}, {"source": 987099, "target": 940759}, {"source": 987099, "target": 816989}, {"source": 987099, "target": 987101}, {"source": 987099, "target": 987103}, {"source": 987099, "target": 817375}, {"source": 987099, "target": 989029}, {"source": 987099, "target": 905191}, {"source": 987099, "target": 885228}, {"source": 987099, "target": 817139}, {"source": 987099, "target": 885237}, {"source": 987103, "target": 940800}, {"source": 987103, "target": 1092865}, {"source": 987103, "target": 817025}, {"source": 987103, "target": 940810}, {"source": 987103, "target": 817423}, {"source": 987103, "target": 1094164}, {"source": 987103, "target": 905900}, {"source": 987103, "target": 1181231}, {"source": 987103, "target": 817328}, {"source": 987103, "target": 958769}, {"source": 987103, "target": 1134017}, {"source": 987103, "target": 817094}, {"source": 987103, "target": 817352}, {"source": 987103, "target": 816970}, {"source": 987103, "target": 1178446}, {"source": 987103, "target": 987343}, {"source": 987103, "target": 1092949}, {"source": 987103, "target": 817237}, {"source": 987103, "target": 1132119}, {"source": 987103, "target": 940759}, {"source": 987103, "target": 817114}, {"source": 987103, "target": 987099}, {"source": 987103, "target": 816989}, {"source": 987103, "target": 989029}, {"source": 987103, "target": 905191}, {"source": 987103, "target": 885228}, {"source": 987103, "target": 817139}, {"source": 987103, "target": 885237}, {"source": 989029, "target": 940800}, {"source": 989029, "target": 1092865}, {"source": 989029, "target": 817025}, {"source": 989029, "target": 1133825}, {"source": 989029, "target": 885251}, {"source": 989029, "target": 817154}, {"source": 989029, "target": 972550}, {"source": 989029, "target": 817287}, {"source": 989029, "target": 940810}, {"source": 989029, "target": 988301}, {"source": 989029, "target": 817165}, {"source": 989029, "target": 1094164}, {"source": 989029, "target": 1133847}, {"source": 989029, "target": 957474}, {"source": 989029, "target": 940841}, {"source": 989029, "target": 1181231}, {"source": 989029, "target": 958769}, {"source": 989029, "target": 996152}, {"source": 989029, "target": 817344}, {"source": 989029, "target": 1134017}, {"source": 989029, "target": 817091}, {"source": 989029, "target": 988996}, {"source": 989029, "target": 817352}, {"source": 989029, "target": 1178446}, {"source": 989029, "target": 817230}, {"source": 989029, "target": 1092949}, {"source": 989029, "target": 817237}, {"source": 989029, "target": 1132119}, {"source": 989029, "target": 940759}, {"source": 989029, "target": 1092950}, {"source": 989029, "target": 885206}, {"source": 989029, "target": 987099}, {"source": 989029, "target": 816989}, {"source": 989029, "target": 987103}, {"source": 989029, "target": 989030}, {"source": 989029, "target": 905191}, {"source": 989029, "target": 940776}, {"source": 989029, "target": 885228}, {"source": 989029, "target": 903020}, {"source": 989029, "target": 817139}, {"source": 989029, "target": 1133812}, {"source": 989029, "target": 885237}, {"source": 989029, "target": 1133815}, {"source": 989029, "target": 940794}, {"source": 989029, "target": 885243}, {"source": 989029, "target": 940798}, {"source": 905191, "target": 940800}, {"source": 905191, "target": 1092865}, {"source": 905191, "target": 817025}, {"source": 905191, "target": 940810}, {"source": 905191, "target": 1094164}, {"source": 905191, "target": 1181231}, {"source": 905191, "target": 958769}, {"source": 905191, "target": 1134017}, {"source": 905191, "target": 817352}, {"source": 905191, "target": 1178446}, {"source": 905191, "target": 1092949}, {"source": 905191, "target": 817237}, {"source": 905191, "target": 1132119}, {"source": 905191, "target": 940759}, {"source": 905191, "target": 987099}, {"source": 905191, "target": 816989}, {"source": 905191, "target": 987103}, {"source": 905191, "target": 989029}, {"source": 905191, "target": 885228}, {"source": 905191, "target": 817139}, {"source": 905191, "target": 885237}, {"source": 885228, "target": 940800}, {"source": 885228, "target": 1092865}, {"source": 885228, "target": 817025}, {"source": 885228, "target": 940810}, {"source": 885228, "target": 817423}, {"source": 885228, "target": 1094164}, {"source": 885228, "target": 905900}, {"source": 885228, "target": 1181231}, {"source": 885228, "target": 817328}, {"source": 885228, "target": 958769}, {"source": 885228, "target": 1134017}, {"source": 885228, "target": 817094}, {"source": 885228, "target": 817352}, {"source": 885228, "target": 816970}, {"source": 885228, "target": 1178446}, {"source": 885228, "target": 987343}, {"source": 885228, "target": 1092949}, {"source": 885228, "target": 817237}, {"source": 885228, "target": 1132119}, {"source": 885228, "target": 940759}, {"source": 885228, "target": 940760}, {"source": 885228, "target": 817114}, {"source": 885228, "target": 987099}, {"source": 885228, "target": 816989}, {"source": 885228, "target": 816990}, {"source": 885228, "target": 987103}, {"source": 885228, "target": 989029}, {"source": 885228, "target": 817126}, {"source": 885228, "target": 905191}, {"source": 885228, "target": 817139}, {"source": 885228, "target": 885237}, {"source": 817139, "target": 940800}, {"source": 817139, "target": 1092865}, {"source": 817139, "target": 817025}, {"source": 817139, "target": 885252}, {"source": 817139, "target": 940809}, {"source": 817139, "target": 940810}, {"source": 817139, "target": 817422}, {"source": 817139, "target": 1094164}, {"source": 817139, "target": 817300}, {"source": 817139, "target": 905900}, {"source": 817139, "target": 817324}, {"source": 817139, "target": 1181231}, {"source": 817139, "target": 817328}, {"source": 817139, "target": 958769}, {"source": 817139, "target": 817199}, {"source": 817139, "target": 1092914}, {"source": 817139, "target": 1134017}, {"source": 817139, "target": 846915}, {"source": 817139, "target": 846917}, {"source": 817139, "target": 846918}, {"source": 817139, "target": 861639}, {"source": 817139, "target": 817352}, {"source": 817139, "target": 816970}, {"source": 817139, "target": 989005}, {"source": 817139, "target": 1178446}, {"source": 817139, "target": 817101}, {"source": 817139, "target": 816979}, {"source": 817139, "target": 1092949}, {"source": 817139, "target": 817237}, {"source": 817139, "target": 1132119}, {"source": 817139, "target": 940759}, {"source": 817139, "target": 885209}, {"source": 817139, "target": 940760}, {"source": 817139, "target": 987099}, {"source": 817139, "target": 885211}, {"source": 817139, "target": 816989}, {"source": 817139, "target": 817240}, {"source": 817139, "target": 987103}, {"source": 817139, "target": 817119}, {"source": 817139, "target": 989029}, {"source": 817139, "target": 940773}, {"source": 817139, "target": 905191}, {"source": 817139, "target": 817125}, {"source": 817139, "target": 817258}, {"source": 817139, "target": 885228}, {"source": 817139, "target": 885237}, {"source": 817139, "target": 905846}, {"source": 885237, "target": 940800}, {"source": 885237, "target": 1092865}, {"source": 885237, "target": 817025}, {"source": 885237, "target": 972549}, {"source": 885237, "target": 817287}, {"source": 885237, "target": 940810}, {"source": 885237, "target": 817163}, {"source": 885237, "target": 817423}, {"source": 885237, "target": 1094164}, {"source": 885237, "target": 817044}, {"source": 885237, "target": 905900}, {"source": 885237, "target": 1181231}, {"source": 885237, "target": 817328}, {"source": 885237, "target": 958769}, {"source": 885237, "target": 823344}, {"source": 885237, "target": 817081}, {"source": 885237, "target": 1134017}, {"source": 885237, "target": 817094}, {"source": 885237, "target": 817352}, {"source": 885237, "target": 816970}, {"source": 885237, "target": 1178446}, {"source": 885237, "target": 987343}, {"source": 885237, "target": 1092949}, {"source": 885237, "target": 817237}, {"source": 885237, "target": 1132119}, {"source": 885237, "target": 940759}, {"source": 885237, "target": 817114}, {"source": 885237, "target": 987099}, {"source": 885237, "target": 817244}, {"source": 885237, "target": 816989}, {"source": 885237, "target": 987103}, {"source": 885237, "target": 940768}, {"source": 885237, "target": 846947}, {"source": 885237, "target": 989029}, {"source": 885237, "target": 846949}, {"source": 885237, "target": 905191}, {"source": 885237, "target": 846950}, {"source": 885237, "target": 940777}, {"source": 885237, "target": 885228}, {"source": 885237, "target": 817139}, {"source": 885237, "target": 817141}, {"source": 885237, "target": 817017}, {"source": 1133792, "target": 940803}, {"source": 1133792, "target": 957958}, {"source": 1133792, "target": 846983}, {"source": 1133792, "target": 1092877}, {"source": 1133792, "target": 817296}, {"source": 1133792, "target": 987931}, {"source": 1133792, "target": 987559}, {"source": 1133792, "target": 1092912}, {"source": 1133792, "target": 817338}, {"source": 1133792, "target": 988995}, {"source": 1133792, "target": 817094}, {"source": 1133792, "target": 861639}, {"source": 1133792, "target": 817351}, {"source": 1133792, "target": 1133771}, {"source": 1133792, "target": 817109}, {"source": 1133792, "target": 1092954}, {"source": 1133792, "target": 885214}, {"source": 1133792, "target": 940771}, {"source": 1133792, "target": 1133798}, {"source": 1133792, "target": 885224}, {"source": 1133792, "target": 940782}, {"source": 1133792, "target": 846963}, {"source": 1133792, "target": 817012}, {"source": 1133792, "target": 817014}, {"source": 988995, "target": 940803}, {"source": 988995, "target": 957958}, {"source": 988995, "target": 846983}, {"source": 988995, "target": 1092877}, {"source": 988995, "target": 817422}, {"source": 988995, "target": 817296}, {"source": 988995, "target": 987931}, {"source": 988995, "target": 987559}, {"source": 988995, "target": 905898}, {"source": 988995, "target": 1092912}, {"source": 988995, "target": 817329}, {"source": 988995, "target": 817205}, {"source": 988995, "target": 817338}, {"source": 988995, "target": 817344}, {"source": 988995, "target": 816961}, {"source": 988995, "target": 817094}, {"source": 988995, "target": 861639}, {"source": 988995, "target": 817351}, {"source": 988995, "target": 1133771}, {"source": 988995, "target": 817109}, {"source": 988995, "target": 885208}, {"source": 988995, "target": 1092954}, {"source": 988995, "target": 885214}, {"source": 988995, "target": 1133792}, {"source": 988995, "target": 940771}, {"source": 988995, "target": 1133798}, {"source": 988995, "target": 885224}, {"source": 988995, "target": 940782}, {"source": 988995, "target": 846963}, {"source": 988995, "target": 817012}, {"source": 988995, "target": 817014}, {"source": 988995, "target": 817279}, {"source": 940803, "target": 957958}, {"source": 940803, "target": 1092877}, {"source": 940803, "target": 817296}, {"source": 940803, "target": 817049}, {"source": 940803, "target": 987931}, {"source": 940803, "target": 987559}, {"source": 940803, "target": 861608}, {"source": 940803, "target": 817065}, {"source": 940803, "target": 817191}, {"source": 940803, "target": 817455}, {"source": 940803, "target": 1092912}, {"source": 940803, "target": 817330}, {"source": 940803, "target": 817331}, {"source": 940803, "target": 817458}, {"source": 940803, "target": 817205}, {"source": 940803, "target": 996152}, {"source": 940803, "target": 817338}, {"source": 940803, "target": 846909}, {"source": 940803, "target": 988995}, {"source": 940803, "target": 817094}, {"source": 940803, "target": 861639}, {"source": 940803, "target": 817351}, {"source": 940803, "target": 1133771}, {"source": 940803, "target": 1092940}, {"source": 940803, "target": 816977}, {"source": 940803, "target": 940755}, {"source": 940803, "target": 817109}, {"source": 940803, "target": 861655}, {"source": 940803, "target": 885208}, {"source": 940803, "target": 1092954}, {"source": 940803, "target": 817244}, {"source": 940803, "target": 885214}, {"source": 940803, "target": 1133792}, {"source": 940803, "target": 817249}, {"source": 940803, "target": 940771}, {"source": 940803, "target": 1133798}, {"source": 940803, "target": 989030}, {"source": 940803, "target": 885224}, {"source": 940803, "target": 817256}, {"source": 940803, "target": 940777}, {"source": 940803, "target": 817132}, {"source": 940803, "target": 846963}, {"source": 940803, "target": 817012}, {"source": 940803, "target": 846965}, {"source": 940803, "target": 885243}, {"source": 940771, "target": 940803}, {"source": 940771, "target": 957958}, {"source": 940771, "target": 846983}, {"source": 940771, "target": 1092877}, {"source": 940771, "target": 817422}, {"source": 940771, "target": 817296}, {"source": 940771, "target": 987931}, {"source": 940771, "target": 987559}, {"source": 940771, "target": 905898}, {"source": 940771, "target": 1092912}, {"source": 940771, "target": 817329}, {"source": 940771, "target": 817330}, {"source": 940771, "target": 817205}, {"source": 940771, "target": 817338}, {"source": 940771, "target": 817344}, {"source": 940771, "target": 816961}, {"source": 940771, "target": 988995}, {"source": 940771, "target": 817094}, {"source": 940771, "target": 861639}, {"source": 940771, "target": 817351}, {"source": 940771, "target": 1133771}, {"source": 940771, "target": 817109}, {"source": 940771, "target": 885208}, {"source": 940771, "target": 1092954}, {"source": 940771, "target": 885214}, {"source": 940771, "target": 1133792}, {"source": 940771, "target": 817249}, {"source": 940771, "target": 1133798}, {"source": 940771, "target": 885224}, {"source": 940771, "target": 817132}, {"source": 940771, "target": 940782}, {"source": 940771, "target": 846963}, {"source": 940771, "target": 817012}, {"source": 940771, "target": 817014}, {"source": 940771, "target": 817279}, {"source": 817094, "target": 1092865}, {"source": 817094, "target": 817025}, {"source": 817094, "target": 940803}, {"source": 817094, "target": 957958}, {"source": 817094, "target": 846983}, {"source": 817094, "target": 940810}, {"source": 817094, "target": 1092877}, {"source": 817094, "target": 817165}, {"source": 817094, "target": 817423}, {"source": 817094, "target": 817296}, {"source": 817094, "target": 817172}, {"source": 817094, "target": 817173}, {"source": 817094, "target": 989079}, {"source": 817094, "target": 817305}, {"source": 817094, "target": 817049}, {"source": 817094, "target": 987931}, {"source": 817094, "target": 817058}, {"source": 817094, "target": 987559}, {"source": 817094, "target": 905898}, {"source": 817094, "target": 905900}, {"source": 817094, "target": 1092911}, {"source": 817094, "target": 1092912}, {"source": 817094, "target": 1092913}, {"source": 817094, "target": 846898}, {"source": 817094, "target": 996152}, {"source": 817094, "target": 817338}, {"source": 817094, "target": 988995}, {"source": 817094, "target": 861639}, {"source": 817094, "target": 817351}, {"source": 817094, "target": 817352}, {"source": 817094, "target": 816970}, {"source": 817094, "target": 1133771}, {"source": 817094, "target": 817101}, {"source": 817094, "target": 987343}, {"source": 817094, "target": 885203}, {"source": 817094, "target": 940756}, {"source": 817094, "target": 817109}, {"source": 817094, "target": 846933}, {"source": 817094, "target": 940759}, {"source": 817094, "target": 940760}, {"source": 817094, "target": 1092954}, {"source": 817094, "target": 817114}, {"source": 817094, "target": 987101}, {"source": 817094, "target": 885214}, {"source": 817094, "target": 817375}, {"source": 817094, "target": 1133792}, {"source": 817094, "target": 987103}, {"source": 817094, "target": 816990}, {"source": 817094, "target": 940771}, {"source": 817094, "target": 1133798}, {"source": 817094, "target": 817126}, {"source": 817094, "target": 885224}, {"source": 817094, "target": 817258}, {"source": 817094, "target": 885228}, {"source": 817094, "target": 940782}, {"source": 817094, "target": 846963}, {"source": 817094, "target": 885237}, {"source": 817094, "target": 817014}, {"source": 817094, "target": 817141}, {"source": 817094, "target": 817406}, {"source": 861639, "target": 817025}, {"source": 861639, "target": 940803}, {"source": 861639, "target": 817412}, {"source": 861639, "target": 1133830}, {"source": 861639, "target": 846983}, {"source": 861639, "target": 885256}, {"source": 861639, "target": 1092877}, {"source": 861639, "target": 817044}, {"source": 861639, "target": 817172}, {"source": 861639, "target": 905877}, {"source": 861639, "target": 987161}, {"source": 861639, "target": 987931}, {"source": 861639, "target": 817180}, {"source": 861639, "target": 957469}, {"source": 861639, "target": 817437}, {"source": 861639, "target": 817315}, {"source": 861639, "target": 1092900}, {"source": 861639, "target": 1133989}, {"source": 861639, "target": 817060}, {"source": 861639, "target": 987559}, {"source": 861639, "target": 987560}, {"source": 861639, "target": 987564}, {"source": 861639, "target": 817453}, {"source": 861639, "target": 846893}, {"source": 861639, "target": 817069}, {"source": 861639, "target": 1092912}, {"source": 861639, "target": 1134001}, {"source": 861639, "target": 817199}, {"source": 861639, "target": 1092915}, {"source": 861639, "target": 817332}, {"source": 861639, "target": 1092914}, {"source": 861639, "target": 817338}, {"source": 861639, "target": 817344}, {"source": 861639, "target": 988995}, {"source": 861639, "target": 846917}, {"source": 861639, "target": 817094}, {"source": 861639, "target": 817351}, {"source": 861639, "target": 817354}, {"source": 861639, "target": 1133771}, {"source": 861639, "target": 817229}, {"source": 861639, "target": 989007}, {"source": 861639, "target": 846927}, {"source": 861639, "target": 816979}, {"source": 861639, "target": 817108}, {"source": 861639, "target": 817109}, {"source": 861639, "target": 816981}, {"source": 861639, "target": 817238}, {"source": 861639, "target": 885207}, {"source": 861639, "target": 989017}, {"source": 861639, "target": 1092954}, {"source": 861639, "target": 1092949}, {"source": 861639, "target": 885209}, {"source": 861639, "target": 885211}, {"source": 861639, "target": 885214}, {"source": 861639, "target": 817115}, {"source": 861639, "target": 1133792}, {"source": 861639, "target": 940769}, {"source": 861639, "target": 940771}, {"source": 861639, "target": 940773}, {"source": 861639, "target": 1133798}, {"source": 861639, "target": 885222}, {"source": 861639, "target": 817125}, {"source": 861639, "target": 817126}, {"source": 861639, "target": 940779}, {"source": 861639, "target": 817133}, {"source": 861639, "target": 846963}, {"source": 861639, "target": 817139}, {"source": 861639, "target": 817022}, {"source": 861639, "target": 817279}, {"source": 1133798, "target": 940803}, {"source": 1133798, "target": 957958}, {"source": 1133798, "target": 846983}, {"source": 1133798, "target": 1092877}, {"source": 1133798, "target": 817296}, {"source": 1133798, "target": 987931}, {"source": 1133798, "target": 987559}, {"source": 1133798, "target": 1092912}, {"source": 1133798, "target": 817338}, {"source": 1133798, "target": 988995}, {"source": 1133798, "target": 817094}, {"source": 1133798, "target": 861639}, {"source": 1133798, "target": 817351}, {"source": 1133798, "target": 1133771}, {"source": 1133798, "target": 817109}, {"source": 1133798, "target": 1092954}, {"source": 1133798, "target": 885214}, {"source": 1133798, "target": 1133792}, {"source": 1133798, "target": 940771}, {"source": 1133798, "target": 885224}, {"source": 1133798, "target": 940782}, {"source": 1133798, "target": 846963}, {"source": 1133798, "target": 817012}, {"source": 1133798, "target": 817014}, {"source": 817351, "target": 885251}, {"source": 817351, "target": 885252}, {"source": 817351, "target": 957958}, {"source": 817351, "target": 885256}, {"source": 817351, "target": 817160}, {"source": 817351, "target": 817175}, {"source": 817351, "target": 817177}, {"source": 817351, "target": 817180}, {"source": 817351, "target": 817181}, {"source": 817351, "target": 817191}, {"source": 817351, "target": 817204}, {"source": 817351, "target": 846928}, {"source": 817351, "target": 817237}, {"source": 817351, "target": 817238}, {"source": 817351, "target": 846947}, {"source": 817351, "target": 817256}, {"source": 817351, "target": 846963}, {"source": 817351, "target": 817280}, {"source": 817351, "target": 846983}, {"source": 817351, "target": 817293}, {"source": 817351, "target": 988302}, {"source": 817351, "target": 817296}, {"source": 817351, "target": 905877}, {"source": 817351, "target": 905898}, {"source": 817351, "target": 817324}, {"source": 817351, "target": 817329}, {"source": 817351, "target": 817330}, {"source": 817351, "target": 817338}, {"source": 817351, "target": 905919}, {"source": 817351, "target": 817344}, {"source": 817351, "target": 817354}, {"source": 817351, "target": 1133771}, {"source": 817351, "target": 1133792}, {"source": 817351, "target": 817376}, {"source": 817351, "target": 940771}, {"source": 817351, "target": 1133798}, {"source": 817351, "target": 940774}, {"source": 817351, "target": 940776}, {"source": 817351, "target": 998636}, {"source": 817351, "target": 940782}, {"source": 817351, "target": 817406}, {"source": 817351, "target": 817410}, {"source": 817351, "target": 940803}, {"source": 817351, "target": 940805}, {"source": 817351, "target": 940809}, {"source": 817351, "target": 1092874}, {"source": 817351, "target": 1092877}, {"source": 817351, "target": 987931}, {"source": 817351, "target": 817442}, {"source": 817351, "target": 1092901}, {"source": 817351, "target": 817455}, {"source": 817351, "target": 1092912}, {"source": 817351, "target": 817458}, {"source": 817351, "target": 816961}, {"source": 817351, "target": 988995}, {"source": 817351, "target": 816970}, {"source": 817351, "target": 1092951}, {"source": 817351, "target": 1092952}, {"source": 817351, "target": 1092954}, {"source": 817351, "target": 817012}, {"source": 817351, "target": 817014}, {"source": 817351, "target": 817017}, {"source": 817351, "target": 817044}, {"source": 817351, "target": 817047}, {"source": 817351, "target": 817058}, {"source": 817351, "target": 987559}, {"source": 817351, "target": 817063}, {"source": 817351, "target": 817069}, {"source": 817351, "target": 817091}, {"source": 817351, "target": 817094}, {"source": 817351, "target": 861639}, {"source": 817351, "target": 817109}, {"source": 817351, "target": 885206}, {"source": 817351, "target": 817111}, {"source": 817351, "target": 885214}, {"source": 817351, "target": 817119}, {"source": 817351, "target": 817126}, {"source": 817351, "target": 817127}, {"source": 817351, "target": 885224}, {"source": 987559, "target": 885248}, {"source": 987559, "target": 940803}, {"source": 987559, "target": 846983}, {"source": 987559, "target": 940809}, {"source": 987559, "target": 1092877}, {"source": 987559, "target": 817296}, {"source": 987559, "target": 1092880}, {"source": 987559, "target": 987931}, {"source": 987559, "target": 987552}, {"source": 987559, "target": 817057}, {"source": 987559, "target": 817063}, {"source": 987559, "target": 1092912}, {"source": 987559, "target": 817463}, {"source": 987559, "target": 817338}, {"source": 987559, "target": 988995}, {"source": 987559, "target": 817094}, {"source": 987559, "target": 861639}, {"source": 987559, "target": 817351}, {"source": 987559, "target": 954950}, {"source": 987559, "target": 1133771}, {"source": 987559, "target": 817106}, {"source": 987559, "target": 1092947}, {"source": 987559, "target": 817109}, {"source": 987559, "target": 940758}, {"source": 987559, "target": 817240}, {"source": 987559, "target": 1092954}, {"source": 987559, "target": 885214}, {"source": 987559, "target": 1133792}, {"source": 987559, "target": 940771}, {"source": 987559, "target": 1133798}, {"source": 987559, "target": 817256}, {"source": 987559, "target": 940778}, {"source": 987559, "target": 1133165}, {"source": 987559, "target": 940782}, {"source": 987559, "target": 846963}, {"source": 987559, "target": 846964}, {"source": 987559, "target": 846965}, {"source": 987559, "target": 817014}, {"source": 987559, "target": 817270}, {"source": 987559, "target": 885242}, {"source": 987559, "target": 846973}, {"source": 1133771, "target": 940803}, {"source": 1133771, "target": 957958}, {"source": 1133771, "target": 846983}, {"source": 1133771, "target": 1092877}, {"source": 1133771, "target": 817296}, {"source": 1133771, "target": 987931}, {"source": 1133771, "target": 987559}, {"source": 1133771, "target": 1092912}, {"source": 1133771, "target": 817338}, {"source": 1133771, "target": 988995}, {"source": 1133771, "target": 817094}, {"source": 1133771, "target": 861639}, {"source": 1133771, "target": 817351}, {"source": 1133771, "target": 817109}, {"source": 1133771, "target": 1092954}, {"source": 1133771, "target": 885214}, {"source": 1133771, "target": 1133792}, {"source": 1133771, "target": 940771}, {"source": 1133771, "target": 1133798}, {"source": 1133771, "target": 885224}, {"source": 1133771, "target": 940782}, {"source": 1133771, "target": 846963}, {"source": 1133771, "target": 817012}, {"source": 1133771, "target": 817014}, {"source": 1092954, "target": 885250}, {"source": 1092954, "target": 940803}, {"source": 1092954, "target": 972549}, {"source": 1092954, "target": 942986}, {"source": 1092954, "target": 1092877}, {"source": 1092954, "target": 987931}, {"source": 1092954, "target": 987559}, {"source": 1092954, "target": 905900}, {"source": 1092954, "target": 817068}, {"source": 1092954, "target": 817196}, {"source": 1092954, "target": 1092912}, {"source": 1092954, "target": 817332}, {"source": 1092954, "target": 817338}, {"source": 1092954, "target": 988995}, {"source": 1092954, "target": 817094}, {"source": 1092954, "target": 861639}, {"source": 1092954, "target": 817351}, {"source": 1092954, "target": 1092937}, {"source": 1092954, "target": 1133771}, {"source": 1092954, "target": 817228}, {"source": 1092954, "target": 989005}, {"source": 1092954, "target": 817109}, {"source": 1092954, "target": 817239}, {"source": 1092954, "target": 1133784}, {"source": 1092954, "target": 940761}, {"source": 1092954, "target": 885214}, {"source": 1092954, "target": 1133792}, {"source": 1092954, "target": 940771}, {"source": 1092954, "target": 1133795}, {"source": 1092954, "target": 1133798}, {"source": 1092954, "target": 846963}, {"source": 1092954, "target": 905844}, {"source": 1092954, "target": 846971}, {"source": 1092954, "target": 846972}, {"source": 1092954, "target": 1092863}, {"source": 1092877, "target": 940803}, {"source": 1092877, "target": 957958}, {"source": 1092877, "target": 846983}, {"source": 1092877, "target": 817296}, {"source": 1092877, "target": 987931}, {"source": 1092877, "target": 987559}, {"source": 1092877, "target": 1092912}, {"source": 1092877, "target": 817338}, {"source": 1092877, "target": 817344}, {"source": 1092877, "target": 988995}, {"source": 1092877, "target": 817094}, {"source": 1092877, "target": 861639}, {"source": 1092877, "target": 817351}, {"source": 1092877, "target": 1133771}, {"source": 1092877, "target": 817109}, {"source": 1092877, "target": 885208}, {"source": 1092877, "target": 1092954}, {"source": 1092877, "target": 885214}, {"source": 1092877, "target": 1133792}, {"source": 1092877, "target": 940771}, {"source": 1092877, "target": 1133798}, {"source": 1092877, "target": 885224}, {"source": 1092877, "target": 940782}, {"source": 1092877, "target": 846963}, {"source": 1092877, "target": 817012}, {"source": 1092877, "target": 817014}, {"source": 1092912, "target": 940803}, {"source": 1092912, "target": 957958}, {"source": 1092912, "target": 846983}, {"source": 1092912, "target": 1092877}, {"source": 1092912, "target": 817296}, {"source": 1092912, "target": 987931}, {"source": 1092912, "target": 987559}, {"source": 1092912, "target": 817338}, {"source": 1092912, "target": 817344}, {"source": 1092912, "target": 988995}, {"source": 1092912, "target": 817094}, {"source": 1092912, "target": 861639}, {"source": 1092912, "target": 817351}, {"source": 1092912, "target": 1133771}, {"source": 1092912, "target": 817109}, {"source": 1092912, "target": 885208}, {"source": 1092912, "target": 1092954}, {"source": 1092912, "target": 885214}, {"source": 1092912, "target": 1133792}, {"source": 1092912, "target": 940771}, {"source": 1092912, "target": 1133798}, {"source": 1092912, "target": 885224}, {"source": 1092912, "target": 940782}, {"source": 1092912, "target": 846963}, {"source": 1092912, "target": 817012}, {"source": 1092912, "target": 817014}, {"source": 817109, "target": 817025}, {"source": 817109, "target": 817410}, {"source": 817109, "target": 940803}, {"source": 817109, "target": 957958}, {"source": 817109, "target": 846983}, {"source": 817109, "target": 817160}, {"source": 817109, "target": 940809}, {"source": 817109, "target": 1092877}, {"source": 817109, "target": 817422}, {"source": 817109, "target": 988302}, {"source": 817109, "target": 817296}, {"source": 817109, "target": 817044}, {"source": 817109, "target": 905877}, {"source": 817109, "target": 817305}, {"source": 817109, "target": 987931}, {"source": 817109, "target": 817437}, {"source": 817109, "target": 817442}, {"source": 817109, "target": 987559}, {"source": 817109, "target": 817063}, {"source": 817109, "target": 817191}, {"source": 817109, "target": 905898}, {"source": 817109, "target": 816938}, {"source": 817109, "target": 1092912}, {"source": 817109, "target": 817329}, {"source": 817109, "target": 817204}, {"source": 817109, "target": 817338}, {"source": 817109, "target": 817344}, {"source": 817109, "target": 816961}, {"source": 817109, "target": 988995}, {"source": 817109, "target": 817094}, {"source": 817109, "target": 861639}, {"source": 817109, "target": 817351}, {"source": 817109, "target": 816970}, {"source": 817109, "target": 1133771}, {"source": 817109, "target": 817108}, {"source": 817109, "target": 817237}, {"source": 817109, "target": 885208}, {"source": 817109, "target": 1092954}, {"source": 817109, "target": 885214}, {"source": 817109, "target": 817119}, {"source": 817109, "target": 1133792}, {"source": 817109, "target": 940771}, {"source": 817109, "target": 846947}, {"source": 817109, "target": 1133798}, {"source": 817109, "target": 940774}, {"source": 817109, "target": 885224}, {"source": 817109, "target": 817256}, {"source": 817109, "target": 940782}, {"source": 817109, "target": 846963}, {"source": 817109, "target": 817012}, {"source": 817109, "target": 817014}, {"source": 817109, "target": 846968}, {"source": 817109, "target": 817017}, {"source": 817109, "target": 817279}, {"source": 817338, "target": 940803}, {"source": 817338, "target": 885251}, {"source": 817338, "target": 957958}, {"source": 817338, "target": 846983}, {"source": 817338, "target": 817159}, {"source": 817338, "target": 817034}, {"source": 817338, "target": 988300}, {"source": 817338, "target": 1092877}, {"source": 817338, "target": 817422}, {"source": 817338, "target": 817296}, {"source": 817338, "target": 987931}, {"source": 817338, "target": 817181}, {"source": 817338, "target": 817054}, {"source": 817338, "target": 987559}, {"source": 817338, "target": 905898}, {"source": 817338, "target": 817196}, {"source": 817338, "target": 855982}, {"source": 817338, "target": 817455}, {"source": 817338, "target": 1092912}, {"source": 817338, "target": 817329}, {"source": 817338, "target": 817344}, {"source": 817338, "target": 816961}, {"source": 817338, "target": 988995}, {"source": 817338, "target": 817094}, {"source": 817338, "target": 861639}, {"source": 817338, "target": 817351}, {"source": 817338, "target": 1133771}, {"source": 817338, "target": 817357}, {"source": 817338, "target": 846927}, {"source": 817338, "target": 817236}, {"source": 817338, "target": 817109}, {"source": 817338, "target": 885206}, {"source": 817338, "target": 940759}, {"source": 817338, "target": 885208}, {"source": 817338, "target": 1092954}, {"source": 817338, "target": 885214}, {"source": 817338, "target": 885215}, {"source": 817338, "target": 1133792}, {"source": 817338, "target": 885217}, {"source": 817338, "target": 885216}, {"source": 817338, "target": 940771}, {"source": 817338, "target": 1133798}, {"source": 817338, "target": 885224}, {"source": 817338, "target": 940782}, {"source": 817338, "target": 846963}, {"source": 817338, "target": 817012}, {"source": 817338, "target": 817014}, {"source": 817338, "target": 855801}, {"source": 817338, "target": 817020}, {"source": 817338, "target": 817279}, {"source": 885214, "target": 817154}, {"source": 885214, "target": 940803}, {"source": 885214, "target": 988678}, {"source": 885214, "target": 817159}, {"source": 885214, "target": 817287}, {"source": 885214, "target": 817034}, {"source": 885214, "target": 988300}, {"source": 885214, "target": 1092877}, {"source": 885214, "target": 1136397}, {"source": 885214, "target": 817293}, {"source": 885214, "target": 817300}, {"source": 885214, "target": 817175}, {"source": 885214, "target": 957469}, {"source": 885214, "target": 817181}, {"source": 885214, "target": 987559}, {"source": 885214, "target": 817191}, {"source": 885214, "target": 816938}, {"source": 885214, "target": 817196}, {"source": 885214, "target": 817453}, {"source": 885214, "target": 855982}, {"source": 885214, "target": 817455}, {"source": 885214, "target": 1092912}, {"source": 885214, "target": 1134001}, {"source": 885214, "target": 817464}, {"source": 885214, "target": 817338}, {"source": 885214, "target": 988994}, {"source": 885214, "target": 988995}, {"source": 885214, "target": 817091}, {"source": 885214, "target": 817094}, {"source": 885214, "target": 861639}, {"source": 885214, "target": 817351}, {"source": 885214, "target": 1133771}, {"source": 885214, "target": 817357}, {"source": 885214, "target": 846927}, {"source": 885214, "target": 817232}, {"source": 885214, "target": 817236}, {"source": 885214, "target": 817109}, {"source": 885214, "target": 846933}, {"source": 885214, "target": 1133781}, {"source": 885214, "target": 885208}, {"source": 885214, "target": 885206}, {"source": 885214, "target": 1092954}, {"source": 885214, "target": 940759}, {"source": 885214, "target": 855801}, {"source": 885214, "target": 817111}, {"source": 885214, "target": 940767}, {"source": 885214, "target": 1133792}, {"source": 885214, "target": 817119}, {"source": 885214, "target": 885217}, {"source": 885214, "target": 940771}, {"source": 885214, "target": 885215}, {"source": 885214, "target": 885216}, {"source": 885214, "target": 1133798}, {"source": 885214, "target": 940776}, {"source": 885214, "target": 817258}, {"source": 885214, "target": 957172}, {"source": 885214, "target": 817012}, {"source": 885214, "target": 817014}, {"source": 885214, "target": 940793}, {"source": 885214, "target": 817147}, {"source": 885214, "target": 817020}, {"source": 817376, "target": 817159}, {"source": 817376, "target": 885256}, {"source": 817376, "target": 1182729}, {"source": 817376, "target": 817163}, {"source": 817376, "target": 817172}, {"source": 817376, "target": 817180}, {"source": 817376, "target": 1134112}, {"source": 817376, "target": 1134115}, {"source": 817376, "target": 1134118}, {"source": 817376, "target": 990763}, {"source": 817376, "target": 817196}, {"source": 817376, "target": 817199}, {"source": 817376, "target": 1184816}, {"source": 817376, "target": 823344}, {"source": 817376, "target": 817205}, {"source": 817376, "target": 846917}, {"source": 817376, "target": 817228}, {"source": 817376, "target": 817237}, {"source": 817376, "target": 817239}, {"source": 817376, "target": 817244}, {"source": 817376, "target": 846949}, {"source": 817376, "target": 846950}, {"source": 817376, "target": 817258}, {"source": 817376, "target": 988788}, {"source": 817376, "target": 846965}, {"source": 817376, "target": 817279}, {"source": 817376, "target": 817280}, {"source": 817376, "target": 905866}, {"source": 817376, "target": 817293}, {"source": 817376, "target": 817296}, {"source": 817376, "target": 817307}, {"source": 817376, "target": 817324}, {"source": 817376, "target": 817330}, {"source": 817376, "target": 817344}, {"source": 817376, "target": 817351}, {"source": 817376, "target": 817353}, {"source": 817376, "target": 1133782}, {"source": 817376, "target": 940759}, {"source": 817376, "target": 1133786}, {"source": 817376, "target": 913627}, {"source": 817376, "target": 940773}, {"source": 817376, "target": 940776}, {"source": 817376, "target": 1133811}, {"source": 817376, "target": 940789}, {"source": 817376, "target": 940793}, {"source": 817376, "target": 1092868}, {"source": 817376, "target": 940805}, {"source": 817376, "target": 940804}, {"source": 817376, "target": 817412}, {"source": 817376, "target": 817428}, {"source": 817376, "target": 817429}, {"source": 817376, "target": 817437}, {"source": 817376, "target": 1178405}, {"source": 817376, "target": 816938}, {"source": 817376, "target": 1092907}, {"source": 817376, "target": 1092914}, {"source": 817376, "target": 989009}, {"source": 817376, "target": 989016}, {"source": 817376, "target": 816985}, {"source": 817376, "target": 816989}, {"source": 817376, "target": 816990}, {"source": 817376, "target": 989026}, {"source": 817376, "target": 989030}, {"source": 817376, "target": 817012}, {"source": 817376, "target": 817020}, {"source": 817376, "target": 817044}, {"source": 817376, "target": 817054}, {"source": 817376, "target": 817065}, {"source": 817376, "target": 817068}, {"source": 817376, "target": 817069}, {"source": 817376, "target": 1178030}, {"source": 817376, "target": 855982}, {"source": 817376, "target": 817074}, {"source": 817376, "target": 817081}, {"source": 817376, "target": 1134020}, {"source": 817376, "target": 905681}, {"source": 817376, "target": 817114}, {"source": 817376, "target": 885211}, {"source": 817376, "target": 817115}, {"source": 817376, "target": 987613}, {"source": 817376, "target": 885215}, {"source": 817376, "target": 885216}, {"source": 817376, "target": 817119}, {"source": 817376, "target": 817125}, {"source": 817376, "target": 817126}, {"source": 817376, "target": 817127}, {"source": 817376, "target": 817133}, {"source": 817376, "target": 817136}, {"source": 817376, "target": 817141}, {"source": 817376, "target": 885239}, {"source": 817376, "target": 817147}, {"source": 885216, "target": 817280}, {"source": 885216, "target": 817154}, {"source": 885216, "target": 885251}, {"source": 885216, "target": 940804}, {"source": 885216, "target": 940805}, {"source": 885216, "target": 885252}, {"source": 885216, "target": 1182729}, {"source": 885216, "target": 817034}, {"source": 885216, "target": 817293}, {"source": 885216, "target": 817428}, {"source": 885216, "target": 817175}, {"source": 885216, "target": 817307}, {"source": 885216, "target": 817180}, {"source": 885216, "target": 817181}, {"source": 885216, "target": 957469}, {"source": 885216, "target": 817054}, {"source": 885216, "target": 817437}, {"source": 885216, "target": 1134112}, {"source": 885216, "target": 1134115}, {"source": 885216, "target": 1178405}, {"source": 885216, "target": 1134118}, {"source": 885216, "target": 817065}, {"source": 885216, "target": 817196}, {"source": 885216, "target": 1178030}, {"source": 885216, "target": 817199}, {"source": 885216, "target": 1184816}, {"source": 885216, "target": 855982}, {"source": 885216, "target": 1092914}, {"source": 885216, "target": 817330}, {"source": 885216, "target": 817329}, {"source": 885216, "target": 817205}, {"source": 885216, "target": 817328}, {"source": 885216, "target": 817338}, {"source": 885216, "target": 817344}, {"source": 885216, "target": 817091}, {"source": 885216, "target": 846917}, {"source": 885216, "target": 846919}, {"source": 885216, "target": 816970}, {"source": 885216, "target": 817354}, {"source": 885216, "target": 998860}, {"source": 885216, "target": 1415757}, {"source": 885216, "target": 817228}, {"source": 885216, "target": 987343}, {"source": 885216, "target": 846927}, {"source": 885216, "target": 817361}, {"source": 885216, "target": 905681}, {"source": 885216, "target": 816979}, {"source": 885216, "target": 817236}, {"source": 885216, "target": 817237}, {"source": 885216, "target": 940758}, {"source": 885216, "target": 940759}, {"source": 885216, "target": 855801}, {"source": 885216, "target": 885209}, {"source": 885216, "target": 817114}, {"source": 885216, "target": 885211}, {"source": 885216, "target": 816985}, {"source": 885216, "target": 816989}, {"source": 885216, "target": 913627}, {"source": 885216, "target": 885215}, {"source": 885216, "target": 817376}, {"source": 885216, "target": 885214}, {"source": 885216, "target": 989026}, {"source": 885216, "target": 885217}, {"source": 885216, "target": 956516}, {"source": 885216, "target": 940773}, {"source": 885216, "target": 817126}, {"source": 885216, "target": 817136}, {"source": 885216, "target": 817111}, {"source": 885216, "target": 988788}, {"source": 885216, "target": 940789}, {"source": 885216, "target": 846965}, {"source": 885216, "target": 817014}, {"source": 885216, "target": 1132153}, {"source": 885216, "target": 817147}, {"source": 885216, "target": 817020}, {"source": 1178405, "target": 817376}, {"source": 1178405, "target": 885216}, {"source": 1178405, "target": 940805}, {"source": 1178405, "target": 940773}, {"source": 1178405, "target": 846917}, {"source": 1178405, "target": 817126}, {"source": 1178405, "target": 1182729}, {"source": 1178405, "target": 817020}, {"source": 1178405, "target": 1178030}, {"source": 1178405, "target": 817199}, {"source": 1178405, "target": 1184816}, {"source": 1178405, "target": 1092914}, {"source": 1178405, "target": 817205}, {"source": 1178405, "target": 817114}, {"source": 1178405, "target": 885211}, {"source": 1178405, "target": 817180}, {"source": 846917, "target": 885252}, {"source": 846917, "target": 940805}, {"source": 846917, "target": 1182729}, {"source": 846917, "target": 940809}, {"source": 846917, "target": 817422}, {"source": 846917, "target": 817300}, {"source": 846917, "target": 817180}, {"source": 846917, "target": 1178405}, {"source": 846917, "target": 817324}, {"source": 846917, "target": 1178030}, {"source": 846917, "target": 817199}, {"source": 846917, "target": 1184816}, {"source": 846917, "target": 1092914}, {"source": 846917, "target": 817205}, {"source": 846917, "target": 817344}, {"source": 846917, "target": 846915}, {"source": 846917, "target": 846918}, {"source": 846917, "target": 861639}, {"source": 846917, "target": 816970}, {"source": 846917, "target": 989005}, {"source": 846917, "target": 817101}, {"source": 846917, "target": 846928}, {"source": 846917, "target": 816979}, {"source": 846917, "target": 1092949}, {"source": 846917, "target": 940760}, {"source": 846917, "target": 885209}, {"source": 846917, "target": 817114}, {"source": 846917, "target": 885211}, {"source": 846917, "target": 817240}, {"source": 846917, "target": 1133917}, {"source": 846917, "target": 817119}, {"source": 846917, "target": 817376}, {"source": 846917, "target": 885216}, {"source": 846917, "target": 940773}, {"source": 846917, "target": 817126}, {"source": 846917, "target": 817125}, {"source": 846917, "target": 817258}, {"source": 846917, "target": 1133811}, {"source": 846917, "target": 817139}, {"source": 846917, "target": 905846}, {"source": 846917, "target": 885239}, {"source": 846917, "target": 817020}, {"source": 940773, "target": 940805}, {"source": 940773, "target": 1182729}, {"source": 940773, "target": 940809}, {"source": 940773, "target": 817422}, {"source": 940773, "target": 817180}, {"source": 940773, "target": 1178405}, {"source": 940773, "target": 817324}, {"source": 940773, "target": 1178030}, {"source": 940773, "target": 817199}, {"source": 940773, "target": 1184816}, {"source": 940773, "target": 1092914}, {"source": 940773, "target": 817205}, {"source": 940773, "target": 817344}, {"source": 940773, "target": 846915}, {"source": 940773, "target": 846917}, {"source": 940773, "target": 846918}, {"source": 940773, "target": 861639}, {"source": 940773, "target": 989005}, {"source": 940773, "target": 846928}, {"source": 940773, "target": 816979}, {"source": 940773, "target": 1092949}, {"source": 940773, "target": 940760}, {"source": 940773, "target": 885209}, {"source": 940773, "target": 817114}, {"source": 940773, "target": 885211}, {"source": 940773, "target": 817240}, {"source": 940773, "target": 1133917}, {"source": 940773, "target": 817119}, {"source": 940773, "target": 817376}, {"source": 940773, "target": 885216}, {"source": 940773, "target": 817125}, {"source": 940773, "target": 817126}, {"source": 940773, "target": 817258}, {"source": 940773, "target": 1133811}, {"source": 940773, "target": 817139}, {"source": 940773, "target": 905846}, {"source": 940773, "target": 885239}, {"source": 940773, "target": 817020}, {"source": 940805, "target": 817280}, {"source": 940805, "target": 940801}, {"source": 940805, "target": 885256}, {"source": 940805, "target": 1182729}, {"source": 940805, "target": 817422}, {"source": 940805, "target": 817049}, {"source": 940805, "target": 817177}, {"source": 940805, "target": 817180}, {"source": 940805, "target": 957469}, {"source": 940805, "target": 817196}, {"source": 940805, "target": 1178405}, {"source": 940805, "target": 817191}, {"source": 940805, "target": 817065}, {"source": 940805, "target": 1133995}, {"source": 940805, "target": 817068}, {"source": 940805, "target": 817069}, {"source": 940805, "target": 1178030}, {"source": 940805, "target": 817199}, {"source": 940805, "target": 1184816}, {"source": 940805, "target": 846893}, {"source": 940805, "target": 1092914}, {"source": 940805, "target": 817074}, {"source": 940805, "target": 817455}, {"source": 940805, "target": 817205}, {"source": 940805, "target": 905919}, {"source": 940805, "target": 817344}, {"source": 940805, "target": 1134015}, {"source": 940805, "target": 1134019}, {"source": 940805, "target": 846917}, {"source": 940805, "target": 817351}, {"source": 940805, "target": 989006}, {"source": 940805, "target": 846936}, {"source": 940805, "target": 817114}, {"source": 940805, "target": 885211}, {"source": 940805, "target": 817376}, {"source": 940805, "target": 885216}, {"source": 940805, "target": 940768}, {"source": 940805, "target": 940773}, {"source": 940805, "target": 817126}, {"source": 940805, "target": 817125}, {"source": 940805, "target": 846949}, {"source": 940805, "target": 817127}, {"source": 940805, "target": 885222}, {"source": 940805, "target": 940776}, {"source": 940805, "target": 989030}, {"source": 940805, "target": 885229}, {"source": 940805, "target": 817133}, {"source": 940805, "target": 1133811}, {"source": 940805, "target": 817140}, {"source": 940805, "target": 817012}, {"source": 940805, "target": 817270}, {"source": 940805, "target": 885239}, {"source": 940805, "target": 817020}, {"source": 817126, "target": 817154}, {"source": 817126, "target": 885251}, {"source": 817126, "target": 885252}, {"source": 817126, "target": 1182729}, {"source": 817126, "target": 817172}, {"source": 817126, "target": 817175}, {"source": 817126, "target": 817177}, {"source": 817126, "target": 817180}, {"source": 817126, "target": 817181}, {"source": 817126, "target": 817191}, {"source": 817126, "target": 846893}, {"source": 817126, "target": 817199}, {"source": 817126, "target": 1184816}, {"source": 817126, "target": 817205}, {"source": 817126, "target": 846917}, {"source": 817126, "target": 846928}, {"source": 817126, "target": 817238}, {"source": 817126, "target": 846936}, {"source": 817126, "target": 846946}, {"source": 817126, "target": 817258}, {"source": 817126, "target": 988788}, {"source": 817126, "target": 817270}, {"source": 817126, "target": 817280}, {"source": 817126, "target": 846983}, {"source": 817126, "target": 817293}, {"source": 817126, "target": 905877}, {"source": 817126, "target": 817306}, {"source": 817126, "target": 817307}, {"source": 817126, "target": 817315}, {"source": 817126, "target": 905900}, {"source": 817126, "target": 817328}, {"source": 817126, "target": 817329}, {"source": 817126, "target": 817331}, {"source": 817126, "target": 905919}, {"source": 817126, "target": 817344}, {"source": 817126, "target": 817351}, {"source": 817126, "target": 817352}, {"source": 817126, "target": 817375}, {"source": 817126, "target": 817376}, {"source": 817126, "target": 940768}, {"source": 817126, "target": 940769}, {"source": 817126, "target": 940773}, {"source": 817126, "target": 1133811}, {"source": 817126, "target": 817406}, {"source": 817126, "target": 940801}, {"source": 817126, "target": 817412}, {"source": 817126, "target": 940805}, {"source": 817126, "target": 940804}, {"source": 817126, "target": 817422}, {"source": 817126, "target": 940814}, {"source": 817126, "target": 817423}, {"source": 817126, "target": 817428}, {"source": 817126, "target": 817437}, {"source": 817126, "target": 1178405}, {"source": 817126, "target": 1092914}, {"source": 817126, "target": 816970}, {"source": 817126, "target": 989006}, {"source": 817126, "target": 816979}, {"source": 817126, "target": 816985}, {"source": 817126, "target": 1133917}, {"source": 817126, "target": 816990}, {"source": 817126, "target": 816997}, {"source": 817126, "target": 817020}, {"source": 817126, "target": 817022}, {"source": 817126, "target": 817034}, {"source": 817126, "target": 817038}, {"source": 817126, "target": 817044}, {"source": 817126, "target": 817047}, {"source": 817126, "target": 817058}, {"source": 817126, "target": 817065}, {"source": 817126, "target": 1133995}, {"source": 817126, "target": 1178030}, {"source": 817126, "target": 855982}, {"source": 817126, "target": 817074}, {"source": 817126, "target": 1134015}, {"source": 817126, "target": 1134019}, {"source": 817126, "target": 817091}, {"source": 817126, "target": 817094}, {"source": 817126, "target": 861639}, {"source": 817126, "target": 817111}, {"source": 817126, "target": 885209}, {"source": 817126, "target": 817114}, {"source": 817126, "target": 885211}, {"source": 817126, "target": 817115}, {"source": 817126, "target": 987611}, {"source": 817126, "target": 885216}, {"source": 817126, "target": 817125}, {"source": 817126, "target": 885222}, {"source": 817126, "target": 817127}, {"source": 817126, "target": 885228}, {"source": 817126, "target": 817133}, {"source": 817126, "target": 817140}, {"source": 817126, "target": 885239}, {"source": 1182729, "target": 817376}, {"source": 1182729, "target": 885216}, {"source": 1182729, "target": 846917}, {"source": 1182729, "target": 1178405}, {"source": 1182729, "target": 940773}, {"source": 1182729, "target": 940805}, {"source": 1182729, "target": 817126}, {"source": 1182729, "target": 817020}, {"source": 1182729, "target": 1178030}, {"source": 1182729, "target": 817199}, {"source": 1182729, "target": 1184816}, {"source": 1182729, "target": 1092914}, {"source": 1182729, "target": 817205}, {"source": 1182729, "target": 817114}, {"source": 1182729, "target": 885211}, {"source": 1182729, "target": 817180}, {"source": 817180, "target": 817280}, {"source": 817180, "target": 1092868}, {"source": 817180, "target": 940805}, {"source": 817180, "target": 885256}, {"source": 817180, "target": 1182729}, {"source": 817180, "target": 817044}, {"source": 817180, "target": 817428}, {"source": 817180, "target": 817172}, {"source": 817180, "target": 817307}, {"source": 817180, "target": 957469}, {"source": 817180, "target": 817437}, {"source": 817180, "target": 1178405}, {"source": 817180, "target": 1133989}, {"source": 817180, "target": 817065}, {"source": 817180, "target": 816938}, {"source": 817180, "target": 1092907}, {"source": 817180, "target": 817196}, {"source": 817180, "target": 817453}, {"source": 817180, "target": 1178030}, {"source": 817180, "target": 817199}, {"source": 817180, "target": 1184816}, {"source": 817180, "target": 1134001}, {"source": 817180, "target": 1092914}, {"source": 817180, "target": 817455}, {"source": 817180, "target": 817332}, {"source": 817180, "target": 817205}, {"source": 817180, "target": 817069}, {"source": 817180, "target": 817074}, {"source": 817180, "target": 1134020}, {"source": 817180, "target": 846917}, {"source": 817180, "target": 861639}, {"source": 817180, "target": 817351}, {"source": 817180, "target": 817353}, {"source": 817180, "target": 817229}, {"source": 817180, "target": 989007}, {"source": 817180, "target": 846927}, {"source": 817180, "target": 846928}, {"source": 817180, "target": 817108}, {"source": 817180, "target": 816981}, {"source": 817180, "target": 1133782}, {"source": 817180, "target": 989016}, {"source": 817180, "target": 989017}, {"source": 817180, "target": 817114}, {"source": 817180, "target": 885211}, {"source": 817180, "target": 1133786}, {"source": 817180, "target": 987613}, {"source": 817180, "target": 816989}, {"source": 817180, "target": 817244}, {"source": 817180, "target": 817376}, {"source": 817180, "target": 885216}, {"source": 817180, "target": 940768}, {"source": 817180, "target": 940773}, {"source": 817180, "target": 817126}, {"source": 817180, "target": 817125}, {"source": 817180, "target": 817127}, {"source": 817180, "target": 940776}, {"source": 817180, "target": 989030}, {"source": 817180, "target": 903020}, {"source": 817180, "target": 817133}, {"source": 817180, "target": 817136}, {"source": 817180, "target": 817012}, {"source": 817180, "target": 817141}, {"source": 817180, "target": 817147}, {"source": 817180, "target": 817020}, {"source": 817180, "target": 817279}, {"source": 1178030, "target": 817376}, {"source": 1178030, "target": 885216}, {"source": 1178030, "target": 846917}, {"source": 1178030, "target": 1178405}, {"source": 1178030, "target": 940773}, {"source": 1178030, "target": 940805}, {"source": 1178030, "target": 817126}, {"source": 1178030, "target": 1182729}, {"source": 1178030, "target": 817020}, {"source": 1178030, "target": 817199}, {"source": 1178030, "target": 1184816}, {"source": 1178030, "target": 1092914}, {"source": 1178030, "target": 817205}, {"source": 1178030, "target": 817114}, {"source": 1178030, "target": 885211}, {"source": 1178030, "target": 817180}, {"source": 817199, "target": 885252}, {"source": 817199, "target": 940805}, {"source": 817199, "target": 1182729}, {"source": 817199, "target": 940809}, {"source": 817199, "target": 817422}, {"source": 817199, "target": 817300}, {"source": 817199, "target": 817180}, {"source": 817199, "target": 1178405}, {"source": 817199, "target": 817324}, {"source": 817199, "target": 1178030}, {"source": 817199, "target": 1184816}, {"source": 817199, "target": 1092914}, {"source": 817199, "target": 817205}, {"source": 817199, "target": 817344}, {"source": 817199, "target": 846915}, {"source": 817199, "target": 846917}, {"source": 817199, "target": 846918}, {"source": 817199, "target": 861639}, {"source": 817199, "target": 816970}, {"source": 817199, "target": 989005}, {"source": 817199, "target": 817101}, {"source": 817199, "target": 846928}, {"source": 817199, "target": 816979}, {"source": 817199, "target": 1092949}, {"source": 817199, "target": 940760}, {"source": 817199, "target": 885209}, {"source": 817199, "target": 817114}, {"source": 817199, "target": 885211}, {"source": 817199, "target": 817240}, {"source": 817199, "target": 1133917}, {"source": 817199, "target": 817119}, {"source": 817199, "target": 817376}, {"source": 817199, "target": 885216}, {"source": 817199, "target": 940773}, {"source": 817199, "target": 817126}, {"source": 817199, "target": 817125}, {"source": 817199, "target": 817258}, {"source": 817199, "target": 1133811}, {"source": 817199, "target": 817139}, {"source": 817199, "target": 905846}, {"source": 817199, "target": 885239}, {"source": 817199, "target": 817020}, {"source": 1184816, "target": 817376}, {"source": 1184816, "target": 885216}, {"source": 1184816, "target": 846917}, {"source": 1184816, "target": 1178405}, {"source": 1184816, "target": 940773}, {"source": 1184816, "target": 940805}, {"source": 1184816, "target": 817126}, {"source": 1184816, "target": 1182729}, {"source": 1184816, "target": 817020}, {"source": 1184816, "target": 1178030}, {"source": 1184816, "target": 817199}, {"source": 1184816, "target": 1092914}, {"source": 1184816, "target": 817205}, {"source": 1184816, "target": 817114}, {"source": 1184816, "target": 885211}, {"source": 1184816, "target": 817180}, {"source": 1092914, "target": 940805}, {"source": 1092914, "target": 1182729}, {"source": 1092914, "target": 817180}, {"source": 1092914, "target": 1178405}, {"source": 1092914, "target": 1178030}, {"source": 1092914, "target": 817199}, {"source": 1092914, "target": 1184816}, {"source": 1092914, "target": 817205}, {"source": 1092914, "target": 817344}, {"source": 1092914, "target": 846917}, {"source": 1092914, "target": 861639}, {"source": 1092914, "target": 846928}, {"source": 1092914, "target": 816979}, {"source": 1092914, "target": 1092949}, {"source": 1092914, "target": 885209}, {"source": 1092914, "target": 817114}, {"source": 1092914, "target": 885211}, {"source": 1092914, "target": 1133917}, {"source": 1092914, "target": 817376}, {"source": 1092914, "target": 885216}, {"source": 1092914, "target": 940773}, {"source": 1092914, "target": 817126}, {"source": 1092914, "target": 817125}, {"source": 1092914, "target": 817258}, {"source": 1092914, "target": 1133811}, {"source": 1092914, "target": 817139}, {"source": 1092914, "target": 885239}, {"source": 1092914, "target": 817020}, {"source": 817205, "target": 1182729}, {"source": 817205, "target": 885258}, {"source": 817205, "target": 817177}, {"source": 817205, "target": 817180}, {"source": 817205, "target": 957469}, {"source": 817205, "target": 817181}, {"source": 817205, "target": 817191}, {"source": 817205, "target": 817196}, {"source": 817205, "target": 846893}, {"source": 817205, "target": 817199}, {"source": 817205, "target": 1184816}, {"source": 817205, "target": 846909}, {"source": 817205, "target": 846917}, {"source": 817205, "target": 1415757}, {"source": 817205, "target": 846936}, {"source": 817205, "target": 817244}, {"source": 817205, "target": 817249}, {"source": 817205, "target": 846946}, {"source": 817205, "target": 956516}, {"source": 817205, "target": 846950}, {"source": 817205, "target": 817256}, {"source": 817205, "target": 817270}, {"source": 817205, "target": 817296}, {"source": 817205, "target": 817315}, {"source": 817205, "target": 905898}, {"source": 817205, "target": 817331}, {"source": 817205, "target": 817344}, {"source": 817205, "target": 987343}, {"source": 817205, "target": 940768}, {"source": 817205, "target": 817376}, {"source": 817205, "target": 940771}, {"source": 817205, "target": 940773}, {"source": 817205, "target": 940777}, {"source": 817205, "target": 940779}, {"source": 817205, "target": 940782}, {"source": 817205, "target": 1133811}, {"source": 817205, "target": 940801}, {"source": 817205, "target": 940803}, {"source": 817205, "target": 940805}, {"source": 817205, "target": 817422}, {"source": 817205, "target": 817437}, {"source": 817205, "target": 1178405}, {"source": 817205, "target": 1092906}, {"source": 817205, "target": 1092914}, {"source": 817205, "target": 1092926}, {"source": 817205, "target": 816961}, {"source": 817205, "target": 988994}, {"source": 817205, "target": 988995}, {"source": 817205, "target": 816970}, {"source": 817205, "target": 989006}, {"source": 817205, "target": 1092943}, {"source": 817205, "target": 816977}, {"source": 817205, "target": 1133907}, {"source": 817205, "target": 816989}, {"source": 817205, "target": 1133927}, {"source": 817205, "target": 817012}, {"source": 817205, "target": 817020}, {"source": 817205, "target": 817049}, {"source": 817205, "target": 989085}, {"source": 817205, "target": 817054}, {"source": 817205, "target": 861608}, {"source": 817205, "target": 817065}, {"source": 817205, "target": 1133995}, {"source": 817205, "target": 1178030}, {"source": 817205, "target": 817074}, {"source": 817205, "target": 817081}, {"source": 817205, "target": 1134015}, {"source": 817205, "target": 1134019}, {"source": 817205, "target": 817101}, {"source": 817205, "target": 861655}, {"source": 817205, "target": 885208}, {"source": 817205, "target": 817114}, {"source": 817205, "target": 885211}, {"source": 817205, "target": 817115}, {"source": 817205, "target": 885216}, {"source": 817205, "target": 817121}, {"source": 817205, "target": 817125}, {"source": 817205, "target": 817126}, {"source": 817205, "target": 817127}, {"source": 817205, "target": 885222}, {"source": 817205, "target": 885224}, {"source": 817205, "target": 817133}, {"source": 817205, "target": 817136}, {"source": 817205, "target": 817140}, {"source": 817205, "target": 817141}, {"source": 817205, "target": 885239}, {"source": 817114, "target": 1092865}, {"source": 817114, "target": 817025}, {"source": 817114, "target": 940805}, {"source": 817114, "target": 1182729}, {"source": 817114, "target": 940810}, {"source": 817114, "target": 817423}, {"source": 817114, "target": 817172}, {"source": 817114, "target": 817305}, {"source": 817114, "target": 817049}, {"source": 817114, "target": 817180}, {"source": 817114, "target": 817058}, {"source": 817114, "target": 1178405}, {"source": 817114, "target": 905900}, {"source": 817114, "target": 1178030}, {"source": 817114, "target": 817199}, {"source": 817114, "target": 1184816}, {"source": 817114, "target": 1092914}, {"source": 817114, "target": 817205}, {"source": 817114, "target": 817344}, {"source": 817114, "target": 846917}, {"source": 817114, "target": 817094}, {"source": 817114, "target": 817352}, {"source": 817114, "target": 816970}, {"source": 817114, "target": 987343}, {"source": 817114, "target": 846928}, {"source": 817114, "target": 816979}, {"source": 817114, "target": 940760}, {"source": 817114, "target": 885209}, {"source": 817114, "target": 885211}, {"source": 817114, "target": 1133917}, {"source": 817114, "target": 816990}, {"source": 817114, "target": 987103}, {"source": 817114, "target": 817376}, {"source": 817114, "target": 885216}, {"source": 817114, "target": 940773}, {"source": 817114, "target": 817126}, {"source": 817114, "target": 817125}, {"source": 817114, "target": 817258}, {"source": 817114, "target": 885228}, {"source": 817114, "target": 1133811}, {"source": 817114, "target": 885237}, {"source": 817114, "target": 817141}, {"source": 817114, "target": 885239}, {"source": 817114, "target": 817020}, {"source": 885211, "target": 885252}, {"source": 885211, "target": 940805}, {"source": 885211, "target": 1182729}, {"source": 885211, "target": 940809}, {"source": 885211, "target": 817422}, {"source": 885211, "target": 817180}, {"source": 885211, "target": 1178405}, {"source": 885211, "target": 817324}, {"source": 885211, "target": 1178030}, {"source": 885211, "target": 817199}, {"source": 885211, "target": 1184816}, {"source": 885211, "target": 1092914}, {"source": 885211, "target": 817205}, {"source": 885211, "target": 817344}, {"source": 885211, "target": 846915}, {"source": 885211, "target": 846917}, {"source": 885211, "target": 846918}, {"source": 885211, "target": 861639}, {"source": 885211, "target": 817101}, {"source": 885211, "target": 846928}, {"source": 885211, "target": 816979}, {"source": 885211, "target": 1092949}, {"source": 885211, "target": 940760}, {"source": 885211, "target": 885209}, {"source": 885211, "target": 817114}, {"source": 885211, "target": 817240}, {"source": 885211, "target": 1133917}, {"source": 885211, "target": 817119}, {"source": 885211, "target": 817376}, {"source": 885211, "target": 885216}, {"source": 885211, "target": 940773}, {"source": 885211, "target": 817126}, {"source": 885211, "target": 817125}, {"source": 885211, "target": 817258}, {"source": 885211, "target": 1133811}, {"source": 885211, "target": 817139}, {"source": 885211, "target": 905846}, {"source": 885211, "target": 885239}, {"source": 885211, "target": 817020}, {"source": 817020, "target": 817280}, {"source": 817020, "target": 940805}, {"source": 817020, "target": 817287}, {"source": 817020, "target": 885256}, {"source": 817020, "target": 1182729}, {"source": 817020, "target": 817034}, {"source": 817020, "target": 988300}, {"source": 817020, "target": 817293}, {"source": 817020, "target": 817180}, {"source": 817020, "target": 817181}, {"source": 817020, "target": 817054}, {"source": 817020, "target": 1134112}, {"source": 817020, "target": 1134115}, {"source": 817020, "target": 1178405}, {"source": 817020, "target": 1134118}, {"source": 817020, "target": 817065}, {"source": 817020, "target": 817196}, {"source": 817020, "target": 817069}, {"source": 817020, "target": 1178030}, {"source": 817020, "target": 817199}, {"source": 817020, "target": 1184816}, {"source": 817020, "target": 855982}, {"source": 817020, "target": 1092914}, {"source": 817020, "target": 817330}, {"source": 817020, "target": 817205}, {"source": 817020, "target": 817338}, {"source": 817020, "target": 817344}, {"source": 817020, "target": 846917}, {"source": 817020, "target": 846919}, {"source": 817020, "target": 816970}, {"source": 817020, "target": 817228}, {"source": 817020, "target": 987343}, {"source": 817020, "target": 846927}, {"source": 817020, "target": 905681}, {"source": 817020, "target": 817361}, {"source": 817020, "target": 817236}, {"source": 817020, "target": 817237}, {"source": 817020, "target": 940759}, {"source": 817020, "target": 816985}, {"source": 817020, "target": 817114}, {"source": 817020, "target": 885211}, {"source": 817020, "target": 913627}, {"source": 817020, "target": 817244}, {"source": 817020, "target": 885214}, {"source": 817020, "target": 885215}, {"source": 817020, "target": 817376}, {"source": 817020, "target": 885216}, {"source": 817020, "target": 989026}, {"source": 817020, "target": 817249}, {"source": 817020, "target": 817121}, {"source": 817020, "target": 940773}, {"source": 817020, "target": 817126}, {"source": 817020, "target": 817125}, {"source": 817020, "target": 885217}, {"source": 817020, "target": 940776}, {"source": 817020, "target": 817258}, {"source": 817020, "target": 817136}, {"source": 817020, "target": 817265}, {"source": 817020, "target": 1133811}, {"source": 817020, "target": 988788}, {"source": 817020, "target": 940789}, {"source": 817020, "target": 846965}, {"source": 817020, "target": 885239}, {"source": 817020, "target": 817012}, {"source": 817020, "target": 855801}, {"source": 817020, "target": 817141}, {"source": 817020, "target": 817279}, {"source": 1092867, "target": 885251}, {"source": 1092867, "target": 885252}, {"source": 1092867, "target": 1182725}, {"source": 1092867, "target": 846983}, {"source": 1092867, "target": 817034}, {"source": 1092867, "target": 1136397}, {"source": 1092867, "target": 817038}, {"source": 1092867, "target": 817175}, {"source": 1092867, "target": 817306}, {"source": 1092867, "target": 817437}, {"source": 1092867, "target": 1178022}, {"source": 1092867, "target": 817464}, {"source": 1092867, "target": 905919}, {"source": 1092867, "target": 988994}, {"source": 1092867, "target": 846915}, {"source": 1092867, "target": 817091}, {"source": 1092867, "target": 846918}, {"source": 1092867, "target": 846919}, {"source": 1092867, "target": 861512}, {"source": 1092867, "target": 998860}, {"source": 1092867, "target": 817106}, {"source": 1092867, "target": 885207}, {"source": 1092867, "target": 940760}, {"source": 1092867, "target": 817111}, {"source": 1092867, "target": 987611}, {"source": 1092867, "target": 816989}, {"source": 1092867, "target": 1178591}, {"source": 1092867, "target": 846946}, {"source": 1092867, "target": 816997}, {"source": 1182725, "target": 1092867}, {"source": 1182725, "target": 1178022}, {"source": 1182725, "target": 846919}, {"source": 1182725, "target": 861512}, {"source": 1182725, "target": 817034}, {"source": 1182725, "target": 998860}, {"source": 1182725, "target": 1136397}, {"source": 1182725, "target": 817106}, {"source": 1182725, "target": 885207}, {"source": 1182725, "target": 817306}, {"source": 1182725, "target": 1178591}, {"source": 1178022, "target": 1092867}, {"source": 1178022, "target": 1182725}, {"source": 1178022, "target": 846919}, {"source": 1178022, "target": 861512}, {"source": 1178022, "target": 817034}, {"source": 1178022, "target": 998860}, {"source": 1178022, "target": 1136397}, {"source": 1178022, "target": 817106}, {"source": 1178022, "target": 885207}, {"source": 1178022, "target": 817306}, {"source": 1178022, "target": 1178591}, {"source": 846919, "target": 1182725}, {"source": 846919, "target": 817160}, {"source": 846919, "target": 817163}, {"source": 846919, "target": 817173}, {"source": 846919, "target": 957469}, {"source": 846919, "target": 817181}, {"source": 846919, "target": 817196}, {"source": 846919, "target": 817208}, {"source": 846919, "target": 846905}, {"source": 846919, "target": 817228}, {"source": 846919, "target": 1415757}, {"source": 846919, "target": 817235}, {"source": 846919, "target": 846933}, {"source": 846919, "target": 817240}, {"source": 846919, "target": 817249}, {"source": 846919, "target": 846946}, {"source": 846919, "target": 846947}, {"source": 846919, "target": 956516}, {"source": 846919, "target": 1132132}, {"source": 846919, "target": 1132138}, {"source": 846919, "target": 817258}, {"source": 846919, "target": 1000050}, {"source": 846919, "target": 988788}, {"source": 846919, "target": 905844}, {"source": 846919, "target": 846968}, {"source": 846919, "target": 1132153}, {"source": 846919, "target": 817280}, {"source": 846919, "target": 988300}, {"source": 846919, "target": 988302}, {"source": 846919, "target": 817306}, {"source": 846919, "target": 817315}, {"source": 846919, "target": 817317}, {"source": 846919, "target": 905908}, {"source": 846919, "target": 817357}, {"source": 846919, "target": 987343}, {"source": 846919, "target": 817361}, {"source": 846919, "target": 940755}, {"source": 846919, "target": 940758}, {"source": 846919, "target": 940778}, {"source": 846919, "target": 940788}, {"source": 846919, "target": 855801}, {"source": 846919, "target": 817404}, {"source": 846919, "target": 817406}, {"source": 846919, "target": 940799}, {"source": 846919, "target": 940801}, {"source": 846919, "target": 1092867}, {"source": 846919, "target": 940804}, {"source": 846919, "target": 940807}, {"source": 846919, "target": 940811}, {"source": 846919, "target": 940812}, {"source": 846919, "target": 1136397}, {"source": 846919, "target": 817437}, {"source": 846919, "target": 1092897}, {"source": 846919, "target": 817458}, {"source": 846919, "target": 817464}, {"source": 846919, "target": 861512}, {"source": 846919, "target": 816970}, {"source": 846919, "target": 989005}, {"source": 846919, "target": 1092944}, {"source": 846919, "target": 816977}, {"source": 846919, "target": 816989}, {"source": 846919, "target": 989024}, {"source": 846919, "target": 817000}, {"source": 846919, "target": 817020}, {"source": 846919, "target": 817022}, {"source": 846919, "target": 817034}, {"source": 846919, "target": 989078}, {"source": 846919, "target": 817047}, {"source": 846919, "target": 817050}, {"source": 846919, "target": 817054}, {"source": 846919, "target": 817058}, {"source": 846919, "target": 1178022}, {"source": 846919, "target": 851371}, {"source": 846919, "target": 817069}, {"source": 846919, "target": 817074}, {"source": 846919, "target": 998860}, {"source": 846919, "target": 817101}, {"source": 846919, "target": 885200}, {"source": 846919, "target": 817106}, {"source": 846919, "target": 885207}, {"source": 846919, "target": 1178591}, {"source": 846919, "target": 885216}, {"source": 846919, "target": 885215}, {"source": 846919, "target": 817122}, {"source": 846919, "target": 988643}, {"source": 846919, "target": 817136}, {"source": 846919, "target": 885244}, {"source": 861512, "target": 1092867}, {"source": 861512, "target": 885252}, {"source": 861512, "target": 1182725}, {"source": 861512, "target": 817034}, {"source": 861512, "target": 1136397}, {"source": 861512, "target": 817038}, {"source": 861512, "target": 817306}, {"source": 861512, "target": 817437}, {"source": 861512, "target": 1178022}, {"source": 861512, "target": 817464}, {"source": 861512, "target": 988994}, {"source": 861512, "target": 846915}, {"source": 861512, "target": 846918}, {"source": 861512, "target": 846919}, {"source": 861512, "target": 998860}, {"source": 861512, "target": 817106}, {"source": 861512, "target": 885207}, {"source": 861512, "target": 940760}, {"source": 861512, "target": 816989}, {"source": 861512, "target": 1178591}, {"source": 817034, "target": 817154}, {"source": 817034, "target": 1092867}, {"source": 817034, "target": 885252}, {"source": 817034, "target": 1182725}, {"source": 817034, "target": 885251}, {"source": 817034, "target": 846983}, {"source": 817034, "target": 905866}, {"source": 817034, "target": 1136397}, {"source": 817034, "target": 817038}, {"source": 817034, "target": 905877}, {"source": 817034, "target": 817175}, {"source": 817034, "target": 987161}, {"source": 817034, "target": 817306}, {"source": 817034, "target": 817437}, {"source": 817034, "target": 817181}, {"source": 817034, "target": 817060}, {"source": 817034, "target": 817317}, {"source": 817034, "target": 1178022}, {"source": 817034, "target": 987558}, {"source": 817034, "target": 987564}, {"source": 817034, "target": 855982}, {"source": 817034, "target": 817464}, {"source": 817034, "target": 817338}, {"source": 817034, "target": 905919}, {"source": 817034, "target": 988994}, {"source": 817034, "target": 846915}, {"source": 817034, "target": 817091}, {"source": 817034, "target": 846918}, {"source": 817034, "target": 846919}, {"source": 817034, "target": 861512}, {"source": 817034, "target": 998860}, {"source": 817034, "target": 817357}, {"source": 817034, "target": 846927}, {"source": 817034, "target": 817106}, {"source": 817034, "target": 817236}, {"source": 817034, "target": 817238}, {"source": 817034, "target": 885207}, {"source": 817034, "target": 940760}, {"source": 817034, "target": 817111}, {"source": 817034, "target": 987611}, {"source": 817034, "target": 816989}, {"source": 817034, "target": 885214}, {"source": 817034, "target": 1178591}, {"source": 817034, "target": 885215}, {"source": 817034, "target": 940769}, {"source": 817034, "target": 846946}, {"source": 817034, "target": 885216}, {"source": 817034, "target": 885217}, {"source": 817034, "target": 816997}, {"source": 817034, "target": 817126}, {"source": 817034, "target": 817014}, {"source": 817034, "target": 855801}, {"source": 817034, "target": 817020}, {"source": 817034, "target": 817406}, {"source": 998860, "target": 1092867}, {"source": 998860, "target": 940804}, {"source": 998860, "target": 1182725}, {"source": 998860, "target": 817034}, {"source": 998860, "target": 1136397}, {"source": 998860, "target": 1092884}, {"source": 998860, "target": 817173}, {"source": 998860, "target": 817306}, {"source": 998860, "target": 817050}, {"source": 998860, "target": 817307}, {"source": 998860, "target": 957469}, {"source": 998860, "target": 817181}, {"source": 998860, "target": 817437}, {"source": 998860, "target": 817054}, {"source": 998860, "target": 817442}, {"source": 998860, "target": 1178022}, {"source": 998860, "target": 851371}, {"source": 998860, "target": 817196}, {"source": 998860, "target": 855982}, {"source": 998860, "target": 817328}, {"source": 998860, "target": 817464}, {"source": 998860, "target": 846919}, {"source": 998860, "target": 861512}, {"source": 998860, "target": 816970}, {"source": 998860, "target": 1415757}, {"source": 998860, "target": 987343}, {"source": 998860, "target": 1180496}, {"source": 998860, "target": 817361}, {"source": 998860, "target": 817106}, {"source": 998860, "target": 817235}, {"source": 998860, "target": 940758}, {"source": 998860, "target": 885207}, {"source": 998860, "target": 1132119}, {"source": 998860, "target": 816989}, {"source": 998860, "target": 1132126}, {"source": 998860, "target": 1178591}, {"source": 998860, "target": 885216}, {"source": 998860, "target": 989024}, {"source": 998860, "target": 817122}, {"source": 998860, "target": 956516}, {"source": 998860, "target": 1132134}, {"source": 998860, "target": 988788}, {"source": 998860, "target": 1132153}, {"source": 998860, "target": 817404}, {"source": 1136397, "target": 1092867}, {"source": 1136397, "target": 885252}, {"source": 1136397, "target": 1182725}, {"source": 1136397, "target": 846983}, {"source": 1136397, "target": 817034}, {"source": 1136397, "target": 817038}, {"source": 1136397, "target": 817175}, {"source": 1136397, "target": 817306}, {"source": 1136397, "target": 817437}, {"source": 1136397, "target": 957469}, {"source": 1136397, "target": 1178022}, {"source": 1136397, "target": 817191}, {"source": 1136397, "target": 816938}, {"source": 1136397, "target": 817464}, {"source": 1136397, "target": 905919}, {"source": 1136397, "target": 988994}, {"source": 1136397, "target": 846915}, {"source": 1136397, "target": 846918}, {"source": 1136397, "target": 846919}, {"source": 1136397, "target": 861512}, {"source": 1136397, "target": 998860}, {"source": 1136397, "target": 817106}, {"source": 1136397, "target": 885207}, {"source": 1136397, "target": 940760}, {"source": 1136397, "target": 817111}, {"source": 1136397, "target": 987611}, {"source": 1136397, "target": 816989}, {"source": 1136397, "target": 885214}, {"source": 1136397, "target": 1178591}, {"source": 1136397, "target": 885217}, {"source": 1136397, "target": 846946}, {"source": 1136397, "target": 816997}, {"source": 817106, "target": 885248}, {"source": 817106, "target": 817154}, {"source": 817106, "target": 1092867}, {"source": 817106, "target": 885252}, {"source": 817106, "target": 1182725}, {"source": 817106, "target": 846983}, {"source": 817106, "target": 940809}, {"source": 817106, "target": 817034}, {"source": 817106, "target": 1136397}, {"source": 817106, "target": 817038}, {"source": 817106, "target": 1092880}, {"source": 817106, "target": 817175}, {"source": 817106, "target": 817049}, {"source": 817106, "target": 817306}, {"source": 817106, "target": 817437}, {"source": 817106, "target": 987552}, {"source": 817106, "target": 817057}, {"source": 817106, "target": 817058}, {"source": 817106, "target": 1178022}, {"source": 817106, "target": 987559}, {"source": 817106, "target": 817063}, {"source": 817106, "target": 817464}, {"source": 817106, "target": 846905}, {"source": 817106, "target": 816958}, {"source": 817106, "target": 905919}, {"source": 817106, "target": 988994}, {"source": 817106, "target": 846915}, {"source": 817106, "target": 846918}, {"source": 817106, "target": 846919}, {"source": 817106, "target": 861512}, {"source": 817106, "target": 954950}, {"source": 817106, "target": 817352}, {"source": 817106, "target": 998860}, {"source": 817106, "target": 817229}, {"source": 817106, "target": 1092947}, {"source": 817106, "target": 940758}, {"source": 817106, "target": 885207}, {"source": 817106, "target": 940760}, {"source": 817106, "target": 817111}, {"source": 817106, "target": 817240}, {"source": 817106, "target": 987611}, {"source": 817106, "target": 817239}, {"source": 817106, "target": 816989}, {"source": 817106, "target": 1178591}, {"source": 817106, "target": 817121}, {"source": 817106, "target": 846946}, {"source": 817106, "target": 816997}, {"source": 817106, "target": 940778}, {"source": 817106, "target": 1133165}, {"source": 817106, "target": 846963}, {"source": 817106, "target": 846964}, {"source": 817106, "target": 846965}, {"source": 817106, "target": 817270}, {"source": 817106, "target": 885242}, {"source": 817106, "target": 885243}, {"source": 817106, "target": 885244}, {"source": 817106, "target": 846973}, {"source": 885207, "target": 940800}, {"source": 885207, "target": 817025}, {"source": 885207, "target": 817410}, {"source": 885207, "target": 1092867}, {"source": 885207, "target": 885252}, {"source": 885207, "target": 1182725}, {"source": 885207, "target": 1133830}, {"source": 885207, "target": 885251}, {"source": 885207, "target": 940804}, {"source": 885207, "target": 817160}, {"source": 885207, "target": 817034}, {"source": 885207, "target": 1136397}, {"source": 885207, "target": 817038}, {"source": 885207, "target": 817293}, {"source": 885207, "target": 817423}, {"source": 885207, "target": 1092881}, {"source": 885207, "target": 861455}, {"source": 885207, "target": 817422}, {"source": 885207, "target": 905877}, {"source": 885207, "target": 987161}, {"source": 885207, "target": 817306}, {"source": 885207, "target": 817017}, {"source": 885207, "target": 817437}, {"source": 885207, "target": 817057}, {"source": 885207, "target": 817442}, {"source": 885207, "target": 1092900}, {"source": 885207, "target": 817317}, {"source": 885207, "target": 1178022}, {"source": 885207, "target": 817063}, {"source": 885207, "target": 987560}, {"source": 885207, "target": 905898}, {"source": 885207, "target": 987564}, {"source": 885207, "target": 817328}, {"source": 885207, "target": 817329}, {"source": 885207, "target": 990002}, {"source": 885207, "target": 1092915}, {"source": 885207, "target": 817204}, {"source": 885207, "target": 817463}, {"source": 885207, "target": 817464}, {"source": 885207, "target": 996152}, {"source": 885207, "target": 963001}, {"source": 885207, "target": 1092921}, {"source": 885207, "target": 988994}, {"source": 885207, "target": 817218}, {"source": 885207, "target": 846918}, {"source": 885207, "target": 846919}, {"source": 885207, "target": 861512}, {"source": 885207, "target": 861639}, {"source": 885207, "target": 817354}, {"source": 885207, "target": 954825}, {"source": 885207, "target": 998860}, {"source": 885207, "target": 817106}, {"source": 885207, "target": 817237}, {"source": 885207, "target": 817238}, {"source": 885207, "target": 1133911}, {"source": 885207, "target": 940760}, {"source": 885207, "target": 846936}, {"source": 885207, "target": 989015}, {"source": 885207, "target": 846933}, {"source": 885207, "target": 1178591}, {"source": 885207, "target": 940769}, {"source": 885207, "target": 885217}, {"source": 885207, "target": 885222}, {"source": 885207, "target": 846963}, {"source": 885207, "target": 855801}, {"source": 817306, "target": 1092867}, {"source": 817306, "target": 1182725}, {"source": 817306, "target": 846983}, {"source": 817306, "target": 817034}, {"source": 817306, "target": 1092874}, {"source": 817306, "target": 940811}, {"source": 817306, "target": 1136397}, {"source": 817306, "target": 817038}, {"source": 817306, "target": 817165}, {"source": 817306, "target": 817296}, {"source": 817306, "target": 861455}, {"source": 817306, "target": 905364}, {"source": 817306, "target": 1133845}, {"source": 817306, "target": 817428}, {"source": 817306, "target": 1092887}, {"source": 817306, "target": 817173}, {"source": 817306, "target": 817305}, {"source": 817306, "target": 817047}, {"source": 817306, "target": 817437}, {"source": 817306, "target": 1133854}, {"source": 817306, "target": 1133853}, {"source": 817306, "target": 1391264}, {"source": 817306, "target": 1092901}, {"source": 817306, "target": 1178022}, {"source": 817306, "target": 987558}, {"source": 817306, "target": 817191}, {"source": 817306, "target": 817068}, {"source": 817306, "target": 817453}, {"source": 817306, "target": 817455}, {"source": 817306, "target": 958896}, {"source": 817306, "target": 855985}, {"source": 817306, "target": 990002}, {"source": 817306, "target": 846898}, {"source": 817306, "target": 817331}, {"source": 817306, "target": 817206}, {"source": 817306, "target": 817464}, {"source": 817306, "target": 1092924}, {"source": 817306, "target": 988994}, {"source": 817306, "target": 945092}, {"source": 817306, "target": 846918}, {"source": 817306, "target": 846919}, {"source": 817306, "target": 861512}, {"source": 817306, "target": 817353}, {"source": 817306, "target": 816970}, {"source": 817306, "target": 998860}, {"source": 817306, "target": 817230}, {"source": 817306, "target": 846928}, {"source": 817306, "target": 817106}, {"source": 817306, "target": 885203}, {"source": 817306, "target": 885206}, {"source": 817306, "target": 885207}, {"source": 817306, "target": 940760}, {"source": 817306, "target": 1092952}, {"source": 817306, "target": 817240}, {"source": 817306, "target": 885208}, {"source": 817306, "target": 1092951}, {"source": 817306, "target": 817115}, {"source": 817306, "target": 1133822}, {"source": 817306, "target": 1178591}, {"source": 817306, "target": 817119}, {"source": 817306, "target": 817375}, {"source": 817306, "target": 885218}, {"source": 817306, "target": 956516}, {"source": 817306, "target": 816997}, {"source": 817306, "target": 817126}, {"source": 817306, "target": 1132139}, {"source": 817306, "target": 998636}, {"source": 817306, "target": 988789}, {"source": 817306, "target": 817014}, {"source": 817306, "target": 885239}, {"source": 817306, "target": 817144}, {"source": 817306, "target": 817017}, {"source": 817306, "target": 817147}, {"source": 817306, "target": 940798}, {"source": 817306, "target": 1092863}, {"source": 1178591, "target": 1092867}, {"source": 1178591, "target": 885252}, {"source": 1178591, "target": 1182725}, {"source": 1178591, "target": 817034}, {"source": 1178591, "target": 1136397}, {"source": 1178591, "target": 817038}, {"source": 1178591, "target": 817306}, {"source": 1178591, "target": 817437}, {"source": 1178591, "target": 1178022}, {"source": 1178591, "target": 817464}, {"source": 1178591, "target": 988994}, {"source": 1178591, "target": 846915}, {"source": 1178591, "target": 846918}, {"source": 1178591, "target": 846919}, {"source": 1178591, "target": 861512}, {"source": 1178591, "target": 998860}, {"source": 1178591, "target": 817106}, {"source": 1178591, "target": 885207}, {"source": 1178591, "target": 940760}, {"source": 1178591, "target": 816989}, {"source": 1133920, "target": 817154}, {"source": 1133920, "target": 1181316}, {"source": 1133920, "target": 817414}, {"source": 1133920, "target": 817160}, {"source": 1133920, "target": 993675}, {"source": 1133920, "target": 861455}, {"source": 1133920, "target": 817172}, {"source": 1133920, "target": 817429}, {"source": 1133920, "target": 1092897}, {"source": 1133920, "target": 1179821}, {"source": 1133920, "target": 823344}, {"source": 1133920, "target": 1092913}, {"source": 1133920, "target": 958769}, {"source": 1133920, "target": 846905}, {"source": 1133920, "target": 1181383}, {"source": 1133920, "target": 817354}, {"source": 1133920, "target": 989900}, {"source": 1133920, "target": 1092944}, {"source": 1133920, "target": 846931}, {"source": 1133920, "target": 1189206}, {"source": 1133920, "target": 846936}, {"source": 1133920, "target": 1133916}, {"source": 1133920, "target": 1133928}, {"source": 1133920, "target": 817256}, {"source": 1133920, "target": 885229}, {"source": 1133920, "target": 940789}, {"source": 1133920, "target": 905846}, {"source": 1133920, "target": 846968}, {"source": 1133920, "target": 817406}, {"source": 1092897, "target": 940801}, {"source": 1092897, "target": 817154}, {"source": 1092897, "target": 1181316}, {"source": 1092897, "target": 817414}, {"source": 1092897, "target": 940807}, {"source": 1092897, "target": 993675}, {"source": 1092897, "target": 940812}, {"source": 1092897, "target": 988302}, {"source": 1092897, "target": 861455}, {"source": 1092897, "target": 817172}, {"source": 1092897, "target": 817429}, {"source": 1092897, "target": 817047}, {"source": 1092897, "target": 817315}, {"source": 1092897, "target": 817317}, {"source": 1092897, "target": 1179821}, {"source": 1092897, "target": 823344}, {"source": 1092897, "target": 1092913}, {"source": 1092897, "target": 958769}, {"source": 1092897, "target": 817208}, {"source": 1092897, "target": 846905}, {"source": 1092897, "target": 1181383}, {"source": 1092897, "target": 846919}, {"source": 1092897, "target": 817354}, {"source": 1092897, "target": 989900}, {"source": 1092897, "target": 1092944}, {"source": 1092897, "target": 846931}, {"source": 1092897, "target": 1189206}, {"source": 1092897, "target": 1133916}, {"source": 1092897, "target": 816990}, {"source": 1092897, "target": 1133920}, {"source": 1092897, "target": 940768}, {"source": 1092897, "target": 846947}, {"source": 1092897, "target": 1133928}, {"source": 1092897, "target": 817000}, {"source": 1092897, "target": 817258}, {"source": 1092897, "target": 905846}, {"source": 1092897, "target": 885243}, {"source": 1092897, "target": 817406}, {"source": 817154, "target": 885251}, {"source": 817154, "target": 885252}, {"source": 817154, "target": 817159}, {"source": 817154, "target": 817165}, {"source": 817154, "target": 817172}, {"source": 817154, "target": 817175}, {"source": 817154, "target": 817181}, {"source": 817154, "target": 957474}, {"source": 817154, "target": 846893}, {"source": 817154, "target": 823344}, {"source": 817154, "target": 846905}, {"source": 817154, "target": 817230}, {"source": 817154, "target": 846931}, {"source": 817154, "target": 817236}, {"source": 817154, "target": 817237}, {"source": 817154, "target": 817238}, {"source": 817154, "target": 1132119}, {"source": 817154, "target": 817240}, {"source": 817154, "target": 817249}, {"source": 817154, "target": 846946}, {"source": 817154, "target": 846949}, {"source": 817154, "target": 846950}, {"source": 817154, "target": 817265}, {"source": 817154, "target": 905846}, {"source": 817154, "target": 1181316}, {"source": 817154, "target": 817287}, {"source": 817154, "target": 905866}, {"source": 817154, "target": 988301}, {"source": 817154, "target": 817293}, {"source": 817154, "target": 905877}, {"source": 817154, "target": 905898}, {"source": 817154, "target": 1179821}, {"source": 817154, "target": 817329}, {"source": 817154, "target": 905908}, {"source": 817154, "target": 1181383}, {"source": 817154, "target": 817354}, {"source": 817154, "target": 989900}, {"source": 817154, "target": 940769}, {"source": 817154, "target": 940776}, {"source": 817154, "target": 940777}, {"source": 817154, "target": 940794}, {"source": 817154, "target": 940798}, {"source": 817154, "target": 940799}, {"source": 817154, "target": 817406}, {"source": 817154, "target": 940801}, {"source": 817154, "target": 817412}, {"source": 817154, "target": 817414}, {"source": 817154, "target": 972550}, {"source": 817154, "target": 940814}, {"source": 817154, "target": 861455}, {"source": 817154, "target": 1409308}, {"source": 817154, "target": 1092897}, {"source": 817154, "target": 940841}, {"source": 817154, "target": 1092906}, {"source": 817154, "target": 1092913}, {"source": 817154, "target": 958769}, {"source": 817154, "target": 996152}, {"source": 817154, "target": 1092926}, {"source": 817154, "target": 816960}, {"source": 817154, "target": 816961}, {"source": 817154, "target": 988996}, {"source": 817154, "target": 816970}, {"source": 817154, "target": 1092943}, {"source": 817154, "target": 1092944}, {"source": 817154, "target": 1133907}, {"source": 817154, "target": 1189206}, {"source": 817154, "target": 1092950}, {"source": 817154, "target": 1133916}, {"source": 817154, "target": 1133920}, {"source": 817154, "target": 989029}, {"source": 817154, "target": 989030}, {"source": 817154, "target": 1133927}, {"source": 817154, "target": 1133928}, {"source": 817154, "target": 903020}, {"source": 817154, "target": 817014}, {"source": 817154, "target": 817034}, {"source": 817154, "target": 993675}, {"source": 817154, "target": 817039}, {"source": 817154, "target": 817049}, {"source": 817154, "target": 989085}, {"source": 817154, "target": 987558}, {"source": 817154, "target": 817147}, {"source": 817154, "target": 817069}, {"source": 817154, "target": 1134004}, {"source": 817154, "target": 817081}, {"source": 817154, "target": 817091}, {"source": 817154, "target": 817106}, {"source": 817154, "target": 817108}, {"source": 817154, "target": 885206}, {"source": 817154, "target": 817111}, {"source": 817154, "target": 885214}, {"source": 817154, "target": 885216}, {"source": 817154, "target": 817121}, {"source": 817154, "target": 817126}, {"source": 817154, "target": 817141}, {"source": 817154, "target": 885243}, {"source": 817154, "target": 885244}, {"source": 1181316, "target": 1133920}, {"source": 1181316, "target": 1092897}, {"source": 1181316, "target": 817154}, {"source": 1181316, "target": 817414}, {"source": 1181316, "target": 1181383}, {"source": 1181316, "target": 1133928}, {"source": 1181316, "target": 993675}, {"source": 1181316, "target": 989900}, {"source": 1181316, "target": 1179821}, {"source": 1181316, "target": 861455}, {"source": 1181316, "target": 1092944}, {"source": 1181316, "target": 1092913}, {"source": 1181316, "target": 823344}, {"source": 1181316, "target": 817172}, {"source": 1181316, "target": 1189206}, {"source": 1181316, "target": 846905}, {"source": 1181316, "target": 1133916}, {"source": 817414, "target": 817154}, {"source": 817414, "target": 1181316}, {"source": 817414, "target": 817160}, {"source": 817414, "target": 993675}, {"source": 817414, "target": 861455}, {"source": 817414, "target": 817172}, {"source": 817414, "target": 817429}, {"source": 817414, "target": 817305}, {"source": 817414, "target": 1092897}, {"source": 817414, "target": 1179821}, {"source": 817414, "target": 823344}, {"source": 817414, "target": 1092913}, {"source": 817414, "target": 958769}, {"source": 817414, "target": 817206}, {"source": 817414, "target": 817463}, {"source": 817414, "target": 846905}, {"source": 817414, "target": 1181383}, {"source": 817414, "target": 817354}, {"source": 817414, "target": 989900}, {"source": 817414, "target": 1092944}, {"source": 817414, "target": 846931}, {"source": 817414, "target": 817108}, {"source": 817414, "target": 1189206}, {"source": 817414, "target": 846936}, {"source": 817414, "target": 987611}, {"source": 817414, "target": 1133916}, {"source": 817414, "target": 1133920}, {"source": 817414, "target": 817249}, {"source": 817414, "target": 846946}, {"source": 817414, "target": 816997}, {"source": 817414, "target": 1133928}, {"source": 817414, "target": 817256}, {"source": 817414, "target": 885229}, {"source": 817414, "target": 940789}, {"source": 817414, "target": 905846}, {"source": 817414, "target": 885239}, {"source": 817414, "target": 846968}, {"source": 817414, "target": 817406}, {"source": 1181383, "target": 1133920}, {"source": 1181383, "target": 1092897}, {"source": 1181383, "target": 817154}, {"source": 1181383, "target": 1181316}, {"source": 1181383, "target": 817414}, {"source": 1181383, "target": 1133928}, {"source": 1181383, "target": 993675}, {"source": 1181383, "target": 989900}, {"source": 1181383, "target": 1179821}, {"source": 1181383, "target": 861455}, {"source": 1181383, "target": 1092944}, {"source": 1181383, "target": 1092913}, {"source": 1181383, "target": 823344}, {"source": 1181383, "target": 817172}, {"source": 1181383, "target": 1189206}, {"source": 1181383, "target": 846905}, {"source": 1181383, "target": 1133916}, {"source": 1133928, "target": 1133920}, {"source": 1133928, "target": 1092897}, {"source": 1133928, "target": 817154}, {"source": 1133928, "target": 1181316}, {"source": 1133928, "target": 817414}, {"source": 1133928, "target": 1181383}, {"source": 1133928, "target": 993675}, {"source": 1133928, "target": 989900}, {"source": 1133928, "target": 1179821}, {"source": 1133928, "target": 861455}, {"source": 1133928, "target": 1092944}, {"source": 1133928, "target": 1092913}, {"source": 1133928, "target": 823344}, {"source": 1133928, "target": 817172}, {"source": 1133928, "target": 1189206}, {"source": 1133928, "target": 846905}, {"source": 1133928, "target": 1133916}, {"source": 993675, "target": 940801}, {"source": 993675, "target": 817154}, {"source": 993675, "target": 1181316}, {"source": 993675, "target": 817412}, {"source": 993675, "target": 817414}, {"source": 993675, "target": 817159}, {"source": 993675, "target": 940814}, {"source": 993675, "target": 861455}, {"source": 993675, "target": 817039}, {"source": 993675, "target": 817172}, {"source": 993675, "target": 817175}, {"source": 993675, "target": 1409308}, {"source": 993675, "target": 1092897}, {"source": 993675, "target": 905898}, {"source": 993675, "target": 1179821}, {"source": 993675, "target": 823344}, {"source": 993675, "target": 1092913}, {"source": 993675, "target": 958769}, {"source": 993675, "target": 817329}, {"source": 993675, "target": 1134004}, {"source": 993675, "target": 846905}, {"source": 993675, "target": 816960}, {"source": 993675, "target": 816961}, {"source": 993675, "target": 1181383}, {"source": 993675, "target": 816970}, {"source": 993675, "target": 989900}, {"source": 993675, "target": 1092944}, {"source": 993675, "target": 817236}, {"source": 993675, "target": 1189206}, {"source": 993675, "target": 1132119}, {"source": 993675, "target": 1133916}, {"source": 993675, "target": 1133920}, {"source": 993675, "target": 817249}, {"source": 993675, "target": 1133928}, {"source": 993675, "target": 817265}, {"source": 993675, "target": 905846}, {"source": 993675, "target": 885243}, {"source": 993675, "target": 940799}, {"source": 989900, "target": 817154}, {"source": 989900, "target": 1181316}, {"source": 989900, "target": 817414}, {"source": 989900, "target": 817160}, {"source": 989900, "target": 993675}, {"source": 989900, "target": 861455}, {"source": 989900, "target": 817172}, {"source": 989900, "target": 817429}, {"source": 989900, "target": 1092897}, {"source": 989900, "target": 1179821}, {"source": 989900, "target": 823344}, {"source": 989900, "target": 1092913}, {"source": 989900, "target": 958769}, {"source": 989900, "target": 846905}, {"source": 989900, "target": 1181383}, {"source": 989900, "target": 817354}, {"source": 989900, "target": 1092944}, {"source": 989900, "target": 846931}, {"source": 989900, "target": 1189206}, {"source": 989900, "target": 846936}, {"source": 989900, "target": 1133916}, {"source": 989900, "target": 1133920}, {"source": 989900, "target": 1133928}, {"source": 989900, "target": 817256}, {"source": 989900, "target": 885229}, {"source": 989900, "target": 940789}, {"source": 989900, "target": 905846}, {"source": 989900, "target": 846968}, {"source": 989900, "target": 817406}, {"source": 1179821, "target": 1133920}, {"source": 1179821, "target": 1092897}, {"source": 1179821, "target": 817154}, {"source": 1179821, "target": 1181316}, {"source": 1179821, "target": 817414}, {"source": 1179821, "target": 1181383}, {"source": 1179821, "target": 1133928}, {"source": 1179821, "target": 993675}, {"source": 1179821, "target": 989900}, {"source": 1179821, "target": 861455}, {"source": 1179821, "target": 1092944}, {"source": 1179821, "target": 1092913}, {"source": 1179821, "target": 823344}, {"source": 1179821, "target": 817172}, {"source": 1179821, "target": 1189206}, {"source": 1179821, "target": 846905}, {"source": 1179821, "target": 1133916}, {"source": 861455, "target": 885248}, {"source": 861455, "target": 817154}, {"source": 861455, "target": 1181316}, {"source": 861455, "target": 940804}, {"source": 861455, "target": 817414}, {"source": 861455, "target": 846983}, {"source": 861455, "target": 1092872}, {"source": 861455, "target": 993675}, {"source": 861455, "target": 817165}, {"source": 861455, "target": 817423}, {"source": 861455, "target": 1092881}, {"source": 861455, "target": 817172}, {"source": 861455, "target": 817429}, {"source": 861455, "target": 905364}, {"source": 861455, "target": 989079}, {"source": 861455, "target": 817428}, {"source": 861455, "target": 1092887}, {"source": 861455, "target": 817177}, {"source": 861455, "target": 817047}, {"source": 861455, "target": 817306}, {"source": 861455, "target": 1133853}, {"source": 861455, "target": 989085}, {"source": 861455, "target": 1092897}, {"source": 861455, "target": 817057}, {"source": 861455, "target": 987558}, {"source": 861455, "target": 905898}, {"source": 861455, "target": 1179821}, {"source": 861455, "target": 1092911}, {"source": 861455, "target": 823344}, {"source": 861455, "target": 1092913}, {"source": 861455, "target": 958769}, {"source": 861455, "target": 846898}, {"source": 861455, "target": 817455}, {"source": 861455, "target": 817463}, {"source": 861455, "target": 846905}, {"source": 861455, "target": 963001}, {"source": 861455, "target": 1092921}, {"source": 861455, "target": 1092924}, {"source": 861455, "target": 817406}, {"source": 861455, "target": 817218}, {"source": 861455, "target": 1181383}, {"source": 861455, "target": 954825}, {"source": 861455, "target": 816970}, {"source": 861455, "target": 817353}, {"source": 861455, "target": 989900}, {"source": 861455, "target": 1092944}, {"source": 861455, "target": 885203}, {"source": 861455, "target": 940756}, {"source": 861455, "target": 1189206}, {"source": 861455, "target": 1092951}, {"source": 861455, "target": 1133911}, {"source": 861455, "target": 989015}, {"source": 861455, "target": 885207}, {"source": 861455, "target": 817115}, {"source": 861455, "target": 1133916}, {"source": 861455, "target": 989020}, {"source": 861455, "target": 987101}, {"source": 861455, "target": 817375}, {"source": 861455, "target": 1133920}, {"source": 861455, "target": 885217}, {"source": 861455, "target": 1133928}, {"source": 861455, "target": 1133934}, {"source": 861455, "target": 846963}, {"source": 861455, "target": 855801}, {"source": 861455, "target": 817147}, {"source": 861455, "target": 1133822}, {"source": 861455, "target": 817279}, {"source": 1092944, "target": 817154}, {"source": 1092944, "target": 1181316}, {"source": 1092944, "target": 817414}, {"source": 1092944, "target": 993675}, {"source": 1092944, "target": 817163}, {"source": 1092944, "target": 940811}, {"source": 1092944, "target": 861455}, {"source": 1092944, "target": 817172}, {"source": 1092944, "target": 817429}, {"source": 1092944, "target": 1092897}, {"source": 1092944, "target": 1179821}, {"source": 1092944, "target": 823344}, {"source": 1092944, "target": 1092913}, {"source": 1092944, "target": 958769}, {"source": 1092944, "target": 817458}, {"source": 1092944, "target": 817206}, {"source": 1092944, "target": 817208}, {"source": 1092944, "target": 846905}, {"source": 1092944, "target": 1181383}, {"source": 1092944, "target": 846919}, {"source": 1092944, "target": 817354}, {"source": 1092944, "target": 989900}, {"source": 1092944, "target": 817228}, {"source": 1092944, "target": 989005}, {"source": 1092944, "target": 816977}, {"source": 1092944, "target": 846931}, {"source": 1092944, "target": 1189206}, {"source": 1092944, "target": 1133916}, {"source": 1092944, "target": 1133920}, {"source": 1092944, "target": 988643}, {"source": 1092944, "target": 1132132}, {"source": 1092944, "target": 1133928}, {"source": 1092944, "target": 940778}, {"source": 1092944, "target": 1132138}, {"source": 1092944, "target": 1000050}, {"source": 1092944, "target": 905846}, {"source": 1092944, "target": 885244}, {"source": 1092944, "target": 817406}, {"source": 1092913, "target": 885248}, {"source": 1092913, "target": 817154}, {"source": 1092913, "target": 1181316}, {"source": 1092913, "target": 817414}, {"source": 1092913, "target": 957958}, {"source": 1092913, "target": 993675}, {"source": 1092913, "target": 817165}, {"source": 1092913, "target": 861455}, {"source": 1092913, "target": 817172}, {"source": 1092913, "target": 817429}, {"source": 1092913, "target": 989078}, {"source": 1092913, "target": 989079}, {"source": 1092913, "target": 1092897}, {"source": 1092913, "target": 905898}, {"source": 1092913, "target": 1179821}, {"source": 1092913, "target": 1092911}, {"source": 1092913, "target": 823344}, {"source": 1092913, "target": 958769}, {"source": 1092913, "target": 846898}, {"source": 1092913, "target": 996152}, {"source": 1092913, "target": 846905}, {"source": 1092913, "target": 846915}, {"source": 1092913, "target": 817094}, {"source": 1092913, "target": 1181383}, {"source": 1092913, "target": 954825}, {"source": 1092913, "target": 989900}, {"source": 1092913, "target": 1092944}, {"source": 1092913, "target": 817361}, {"source": 1092913, "target": 885203}, {"source": 1092913, "target": 940756}, {"source": 1092913, "target": 846933}, {"source": 1092913, "target": 1189206}, {"source": 1092913, "target": 940759}, {"source": 1092913, "target": 987099}, {"source": 1092913, "target": 1133916}, {"source": 1092913, "target": 987101}, {"source": 1092913, "target": 989020}, {"source": 1092913, "target": 817375}, {"source": 1092913, "target": 1133920}, {"source": 1092913, "target": 1133928}, {"source": 1092913, "target": 846963}, {"source": 1092913, "target": 885243}, {"source": 1092913, "target": 817406}, {"source": 823344, "target": 817154}, {"source": 823344, "target": 1181316}, {"source": 823344, "target": 972549}, {"source": 823344, "target": 817414}, {"source": 823344, "target": 817287}, {"source": 823344, "target": 817160}, {"source": 823344, "target": 993675}, {"source": 823344, "target": 817163}, {"source": 823344, "target": 817165}, {"source": 823344, "target": 861455}, {"source": 823344, "target": 817296}, {"source": 823344, "target": 817172}, {"source": 823344, "target": 817429}, {"source": 823344, "target": 989078}, {"source": 823344, "target": 817044}, {"source": 823344, "target": 817305}, {"source": 823344, "target": 817017}, {"source": 823344, "target": 1092897}, {"source": 823344, "target": 1179821}, {"source": 823344, "target": 1092913}, {"source": 823344, "target": 958769}, {"source": 823344, "target": 846905}, {"source": 823344, "target": 817081}, {"source": 823344, "target": 1181383}, {"source": 823344, "target": 817354}, {"source": 823344, "target": 989900}, {"source": 823344, "target": 1092944}, {"source": 823344, "target": 846931}, {"source": 823344, "target": 1189206}, {"source": 823344, "target": 846936}, {"source": 823344, "target": 987611}, {"source": 823344, "target": 1133916}, {"source": 823344, "target": 817244}, {"source": 823344, "target": 817119}, {"source": 823344, "target": 1133920}, {"source": 823344, "target": 940768}, {"source": 823344, "target": 817376}, {"source": 823344, "target": 846947}, {"source": 823344, "target": 846949}, {"source": 823344, "target": 846950}, {"source": 823344, "target": 1133928}, {"source": 823344, "target": 817256}, {"source": 823344, "target": 940777}, {"source": 823344, "target": 885229}, {"source": 823344, "target": 940789}, {"source": 823344, "target": 905846}, {"source": 823344, "target": 885239}, {"source": 823344, "target": 846968}, {"source": 823344, "target": 817141}, {"source": 823344, "target": 885237}, {"source": 823344, "target": 817406}, {"source": 817172, "target": 817154}, {"source": 817172, "target": 885250}, {"source": 817172, "target": 817159}, {"source": 817172, "target": 885256}, {"source": 817172, "target": 817175}, {"source": 817172, "target": 817180}, {"source": 817172, "target": 957469}, {"source": 817172, "target": 817191}, {"source": 817172, "target": 817196}, {"source": 817172, "target": 823344}, {"source": 817172, "target": 817206}, {"source": 817172, "target": 846905}, {"source": 817172, "target": 817229}, {"source": 817172, "target": 846927}, {"source": 817172, "target": 817236}, {"source": 817172, "target": 1132119}, {"source": 817172, "target": 817239}, {"source": 817172, "target": 817249}, {"source": 817172, "target": 817265}, {"source": 817172, "target": 905844}, {"source": 817172, "target": 846968}, {"source": 817172, "target": 846971}, {"source": 817172, "target": 846972}, {"source": 817172, "target": 846973}, {"source": 817172, "target": 817279}, {"source": 817172, "target": 1181316}, {"source": 817172, "target": 817317}, {"source": 817172, "target": 905898}, {"source": 817172, "target": 1179821}, {"source": 817172, "target": 817329}, {"source": 817172, "target": 817332}, {"source": 817172, "target": 1181383}, {"source": 817172, "target": 989900}, {"source": 817172, "target": 817376}, {"source": 817172, "target": 940801}, {"source": 817172, "target": 817412}, {"source": 817172, "target": 817414}, {"source": 817172, "target": 940814}, {"source": 817172, "target": 861455}, {"source": 817172, "target": 817423}, {"source": 817172, "target": 817437}, {"source": 817172, "target": 1092897}, {"source": 817172, "target": 816938}, {"source": 817172, "target": 817453}, {"source": 817172, "target": 1092913}, {"source": 817172, "target": 958769}, {"source": 817172, "target": 817458}, {"source": 817172, "target": 816960}, {"source": 817172, "target": 816961}, {"source": 817172, "target": 816970}, {"source": 817172, "target": 989005}, {"source": 817172, "target": 989007}, {"source": 817172, "target": 1092944}, {"source": 817172, "target": 816981}, {"source": 817172, "target": 1189206}, {"source": 817172, "target": 989017}, {"source": 817172, "target": 1133916}, {"source": 817172, "target": 816989}, {"source": 817172, "target": 816990}, {"source": 817172, "target": 1133920}, {"source": 817172, "target": 1133928}, {"source": 817172, "target": 993675}, {"source": 817172, "target": 817039}, {"source": 817172, "target": 817044}, {"source": 817172, "target": 817057}, {"source": 817172, "target": 817058}, {"source": 817172, "target": 1133989}, {"source": 817172, "target": 1134001}, {"source": 817172, "target": 817074}, {"source": 817172, "target": 1134004}, {"source": 817172, "target": 817094}, {"source": 817172, "target": 861639}, {"source": 817172, "target": 817108}, {"source": 817172, "target": 817114}, {"source": 817172, "target": 817121}, {"source": 817172, "target": 817126}, {"source": 817172, "target": 817133}, {"source": 1189206, "target": 1133920}, {"source": 1189206, "target": 1092897}, {"source": 1189206, "target": 817154}, {"source": 1189206, "target": 1181316}, {"source": 1189206, "target": 817414}, {"source": 1189206, "target": 1181383}, {"source": 1189206, "target": 1133928}, {"source": 1189206, "target": 993675}, {"source": 1189206, "target": 989900}, {"source": 1189206, "target": 1179821}, {"source": 1189206, "target": 861455}, {"source": 1189206, "target": 1092944}, {"source": 1189206, "target": 1092913}, {"source": 1189206, "target": 823344}, {"source": 1189206, "target": 817172}, {"source": 1189206, "target": 846905}, {"source": 1189206, "target": 1133916}, {"source": 846905, "target": 817154}, {"source": 846905, "target": 1181316}, {"source": 846905, "target": 817414}, {"source": 846905, "target": 817159}, {"source": 846905, "target": 1092873}, {"source": 846905, "target": 993675}, {"source": 846905, "target": 817163}, {"source": 846905, "target": 940811}, {"source": 846905, "target": 861455}, {"source": 846905, "target": 817172}, {"source": 846905, "target": 817429}, {"source": 846905, "target": 817054}, {"source": 846905, "target": 1092897}, {"source": 846905, "target": 817058}, {"source": 846905, "target": 1179821}, {"source": 846905, "target": 823344}, {"source": 846905, "target": 1092913}, {"source": 846905, "target": 958769}, {"source": 846905, "target": 817458}, {"source": 846905, "target": 905908}, {"source": 846905, "target": 817206}, {"source": 846905, "target": 817208}, {"source": 846905, "target": 1181383}, {"source": 846905, "target": 846919}, {"source": 846905, "target": 817354}, {"source": 846905, "target": 989900}, {"source": 846905, "target": 817228}, {"source": 846905, "target": 989005}, {"source": 846905, "target": 1092944}, {"source": 846905, "target": 816977}, {"source": 846905, "target": 817106}, {"source": 846905, "target": 846931}, {"source": 846905, "target": 1189206}, {"source": 846905, "target": 940761}, {"source": 846905, "target": 817115}, {"source": 846905, "target": 1133916}, {"source": 846905, "target": 1133920}, {"source": 846905, "target": 988643}, {"source": 846905, "target": 1132132}, {"source": 846905, "target": 1133928}, {"source": 846905, "target": 940778}, {"source": 846905, "target": 1132138}, {"source": 846905, "target": 1000050}, {"source": 846905, "target": 905846}, {"source": 846905, "target": 817014}, {"source": 846905, "target": 885242}, {"source": 846905, "target": 885243}, {"source": 846905, "target": 885244}, {"source": 846905, "target": 817406}, {"source": 1133916, "target": 817154}, {"source": 1133916, "target": 1181316}, {"source": 1133916, "target": 817414}, {"source": 1133916, "target": 817160}, {"source": 1133916, "target": 993675}, {"source": 1133916, "target": 861455}, {"source": 1133916, "target": 817172}, {"source": 1133916, "target": 817429}, {"source": 1133916, "target": 1092897}, {"source": 1133916, "target": 1179821}, {"source": 1133916, "target": 823344}, {"source": 1133916, "target": 1092913}, {"source": 1133916, "target": 958769}, {"source": 1133916, "target": 846905}, {"source": 1133916, "target": 1181383}, {"source": 1133916, "target": 817354}, {"source": 1133916, "target": 989900}, {"source": 1133916, "target": 1092944}, {"source": 1133916, "target": 846931}, {"source": 1133916, "target": 1189206}, {"source": 1133916, "target": 846936}, {"source": 1133916, "target": 1133920}, {"source": 1133916, "target": 1133928}, {"source": 1133916, "target": 817256}, {"source": 1133916, "target": 885229}, {"source": 1133916, "target": 940789}, {"source": 1133916, "target": 905846}, {"source": 1133916, "target": 846968}, {"source": 1133916, "target": 817406}, {"source": 940768, "target": 940801}, {"source": 940768, "target": 940805}, {"source": 940768, "target": 972549}, {"source": 940768, "target": 940807}, {"source": 940768, "target": 817287}, {"source": 940768, "target": 817163}, {"source": 940768, "target": 940812}, {"source": 940768, "target": 988302}, {"source": 940768, "target": 817422}, {"source": 940768, "target": 817044}, {"source": 940768, "target": 817429}, {"source": 940768, "target": 817047}, {"source": 940768, "target": 817177}, {"source": 940768, "target": 817180}, {"source": 940768, "target": 1092897}, {"source": 940768, "target": 817315}, {"source": 940768, "target": 817317}, {"source": 940768, "target": 817065}, {"source": 940768, "target": 851371}, {"source": 940768, "target": 846893}, {"source": 940768, "target": 823344}, {"source": 940768, "target": 817074}, {"source": 940768, "target": 817205}, {"source": 940768, "target": 817208}, {"source": 940768, "target": 817081}, {"source": 940768, "target": 1180100}, {"source": 940768, "target": 988996}, {"source": 940768, "target": 954950}, {"source": 940768, "target": 1133767}, {"source": 940768, "target": 817229}, {"source": 940768, "target": 989006}, {"source": 940768, "target": 846927}, {"source": 940768, "target": 846928}, {"source": 940768, "target": 817101}, {"source": 940768, "target": 817108}, {"source": 940768, "target": 1092952}, {"source": 940768, "target": 846936}, {"source": 940768, "target": 989017}, {"source": 940768, "target": 816989}, {"source": 940768, "target": 816990}, {"source": 940768, "target": 846947}, {"source": 940768, "target": 817125}, {"source": 940768, "target": 940774}, {"source": 940768, "target": 817126}, {"source": 940768, "target": 817000}, {"source": 940768, "target": 817127}, {"source": 940768, "target": 817258}, {"source": 940768, "target": 885222}, {"source": 940768, "target": 1133932}, {"source": 940768, "target": 817133}, {"source": 940768, "target": 846949}, {"source": 940768, "target": 846950}, {"source": 940768, "target": 817136}, {"source": 940768, "target": 940777}, {"source": 940768, "target": 817140}, {"source": 940768, "target": 940789}, {"source": 940768, "target": 905846}, {"source": 940768, "target": 885237}, {"source": 940768, "target": 817017}, {"source": 940768, "target": 940794}, {"source": 940768, "target": 885243}, {"source": 940768, "target": 817279}, {"source": 817315, "target": 940801}, {"source": 817315, "target": 817025}, {"source": 817315, "target": 817412}, {"source": 817315, "target": 940807}, {"source": 817315, "target": 817287}, {"source": 817315, "target": 846983}, {"source": 817315, "target": 940812}, {"source": 817315, "target": 988302}, {"source": 817315, "target": 817296}, {"source": 817315, "target": 817429}, {"source": 817315, "target": 817047}, {"source": 817315, "target": 817307}, {"source": 817315, "target": 817437}, {"source": 817315, "target": 1092897}, {"source": 817315, "target": 817317}, {"source": 817315, "target": 940841}, {"source": 817315, "target": 816938}, {"source": 817315, "target": 851371}, {"source": 817315, "target": 817074}, {"source": 817315, "target": 817022}, {"source": 817315, "target": 817205}, {"source": 817315, "target": 817208}, {"source": 817315, "target": 817344}, {"source": 817315, "target": 1180100}, {"source": 817315, "target": 988996}, {"source": 817315, "target": 954950}, {"source": 817315, "target": 1133767}, {"source": 817315, "target": 846919}, {"source": 817315, "target": 861639}, {"source": 817315, "target": 817354}, {"source": 817315, "target": 817101}, {"source": 817315, "target": 817361}, {"source": 817315, "target": 1092952}, {"source": 817315, "target": 817115}, {"source": 817315, "target": 816990}, {"source": 817315, "target": 940768}, {"source": 817315, "target": 846947}, {"source": 817315, "target": 940774}, {"source": 817315, "target": 989030}, {"source": 817315, "target": 817000}, {"source": 817315, "target": 817127}, {"source": 817315, "target": 817258}, {"source": 817315, "target": 940779}, {"source": 817315, "target": 1133932}, {"source": 817315, "target": 817133}, {"source": 817315, "target": 817126}, {"source": 817315, "target": 817012}, {"source": 817315, "target": 940789}, {"source": 817315, "target": 905846}, {"source": 817315, "target": 940794}, {"source": 817315, "target": 885243}, {"source": 817315, "target": 940798}, {"source": 988996, "target": 817154}, {"source": 988996, "target": 885251}, {"source": 988996, "target": 885252}, {"source": 988996, "target": 885254}, {"source": 988996, "target": 817160}, {"source": 988996, "target": 817165}, {"source": 988996, "target": 817175}, {"source": 988996, "target": 957474}, {"source": 988996, "target": 817191}, {"source": 988996, "target": 954950}, {"source": 988996, "target": 817230}, {"source": 988996, "target": 846946}, {"source": 988996, "target": 1133158}, {"source": 988996, "target": 905846}, {"source": 988996, "target": 817280}, {"source": 988996, "target": 817287}, {"source": 988996, "target": 988301}, {"source": 988996, "target": 817293}, {"source": 988996, "target": 817296}, {"source": 988996, "target": 817307}, {"source": 988996, "target": 1391264}, {"source": 988996, "target": 817315}, {"source": 988996, "target": 817317}, {"source": 988996, "target": 905919}, {"source": 988996, "target": 817344}, {"source": 988996, "target": 1133767}, {"source": 988996, "target": 817354}, {"source": 988996, "target": 817361}, {"source": 988996, "target": 1181394}, {"source": 988996, "target": 940768}, {"source": 988996, "target": 940774}, {"source": 988996, "target": 940776}, {"source": 988996, "target": 940785}, {"source": 988996, "target": 1133812}, {"source": 988996, "target": 1133815}, {"source": 988996, "target": 940794}, {"source": 988996, "target": 940798}, {"source": 988996, "target": 1133825}, {"source": 988996, "target": 940801}, {"source": 988996, "target": 972550}, {"source": 988996, "target": 940812}, {"source": 988996, "target": 940814}, {"source": 988996, "target": 817429}, {"source": 988996, "target": 1133847}, {"source": 988996, "target": 1409308}, {"source": 988996, "target": 817437}, {"source": 988996, "target": 987934}, {"source": 988996, "target": 940841}, {"source": 988996, "target": 816938}, {"source": 988996, "target": 817458}, {"source": 988996, "target": 996152}, {"source": 988996, "target": 816958}, {"source": 988996, "target": 1092943}, {"source": 988996, "target": 1092950}, {"source": 988996, "target": 1092952}, {"source": 988996, "target": 816990}, {"source": 988996, "target": 1133924}, {"source": 988996, "target": 989029}, {"source": 988996, "target": 989030}, {"source": 988996, "target": 817000}, {"source": 988996, "target": 1133932}, {"source": 988996, "target": 903020}, {"source": 988996, "target": 817038}, {"source": 988996, "target": 817047}, {"source": 988996, "target": 851371}, {"source": 988996, "target": 817074}, {"source": 988996, "target": 817091}, {"source": 988996, "target": 1180100}, {"source": 988996, "target": 817101}, {"source": 988996, "target": 817108}, {"source": 988996, "target": 885206}, {"source": 988996, "target": 817111}, {"source": 988996, "target": 987102}, {"source": 988996, "target": 817119}, {"source": 988996, "target": 817121}, {"source": 988996, "target": 885243}, {"source": 988996, "target": 1182205}, {"source": 1180100, "target": 940768}, {"source": 1180100, "target": 817315}, {"source": 1180100, "target": 988996}, {"source": 1180100, "target": 817317}, {"source": 1180100, "target": 954950}, {"source": 1180100, "target": 1133767}, {"source": 1180100, "target": 817000}, {"source": 1180100, "target": 940774}, {"source": 1180100, "target": 851371}, {"source": 1180100, "target": 1133932}, {"source": 1180100, "target": 940812}, {"source": 1180100, "target": 817074}, {"source": 1180100, "target": 817429}, {"source": 1180100, "target": 905846}, {"source": 1180100, "target": 1092952}, {"source": 1180100, "target": 816990}, {"source": 954950, "target": 885248}, {"source": 954950, "target": 940807}, {"source": 954950, "target": 940809}, {"source": 954950, "target": 940812}, {"source": 954950, "target": 988302}, {"source": 954950, "target": 1092880}, {"source": 954950, "target": 817429}, {"source": 954950, "target": 817047}, {"source": 954950, "target": 987552}, {"source": 954950, "target": 817315}, {"source": 954950, "target": 817060}, {"source": 954950, "target": 817317}, {"source": 954950, "target": 987559}, {"source": 954950, "target": 817063}, {"source": 954950, "target": 851371}, {"source": 954950, "target": 817068}, {"source": 954950, "target": 1179822}, {"source": 954950, "target": 817074}, {"source": 954950, "target": 817463}, {"source": 954950, "target": 817208}, {"source": 954950, "target": 846915}, {"source": 954950, "target": 988996}, {"source": 954950, "target": 1180100}, {"source": 954950, "target": 1133767}, {"source": 954950, "target": 817101}, {"source": 954950, "target": 817106}, {"source": 954950, "target": 1092947}, {"source": 954950, "target": 940758}, {"source": 954950, "target": 1092951}, {"source": 954950, "target": 1092952}, {"source": 954950, "target": 817240}, {"source": 954950, "target": 987101}, {"source": 954950, "target": 816990}, {"source": 954950, "target": 940768}, {"source": 954950, "target": 846947}, {"source": 954950, "target": 940774}, {"source": 954950, "target": 817000}, {"source": 954950, "target": 817256}, {"source": 954950, "target": 1133932}, {"source": 954950, "target": 1133165}, {"source": 954950, "target": 846964}, {"source": 954950, "target": 905846}, {"source": 954950, "target": 885242}, {"source": 954950, "target": 885243}, {"source": 954950, "target": 846973}, {"source": 1133767, "target": 940768}, {"source": 1133767, "target": 817315}, {"source": 1133767, "target": 988996}, {"source": 1133767, "target": 1180100}, {"source": 1133767, "target": 954950}, {"source": 1133767, "target": 817317}, {"source": 1133767, "target": 817000}, {"source": 1133767, "target": 940774}, {"source": 1133767, "target": 851371}, {"source": 1133767, "target": 1133932}, {"source": 1133767, "target": 940812}, {"source": 1133767, "target": 817074}, {"source": 1133767, "target": 817429}, {"source": 1133767, "target": 905846}, {"source": 1133767, "target": 1092952}, {"source": 1133767, "target": 816990}, {"source": 817000, "target": 817280}, {"source": 817000, "target": 940801}, {"source": 817000, "target": 817412}, {"source": 817000, "target": 940807}, {"source": 817000, "target": 846983}, {"source": 817000, "target": 817163}, {"source": 817000, "target": 940812}, {"source": 817000, "target": 988302}, {"source": 817000, "target": 817429}, {"source": 817000, "target": 817047}, {"source": 817000, "target": 817049}, {"source": 817000, "target": 817307}, {"source": 817000, "target": 987933}, {"source": 817000, "target": 1391264}, {"source": 817000, "target": 1092897}, {"source": 817000, "target": 817315}, {"source": 817000, "target": 817317}, {"source": 817000, "target": 851371}, {"source": 817000, "target": 855985}, {"source": 817000, "target": 817074}, {"source": 817000, "target": 817208}, {"source": 817000, "target": 817344}, {"source": 817000, "target": 988996}, {"source": 817000, "target": 1180100}, {"source": 817000, "target": 954950}, {"source": 817000, "target": 1133767}, {"source": 817000, "target": 846919}, {"source": 817000, "target": 817354}, {"source": 817000, "target": 817228}, {"source": 817000, "target": 1092952}, {"source": 817000, "target": 816990}, {"source": 817000, "target": 940768}, {"source": 817000, "target": 846947}, {"source": 817000, "target": 940774}, {"source": 817000, "target": 817258}, {"source": 817000, "target": 940779}, {"source": 817000, "target": 1133932}, {"source": 817000, "target": 940789}, {"source": 817000, "target": 905846}, {"source": 817000, "target": 885239}, {"source": 817000, "target": 885243}, {"source": 817317, "target": 940800}, {"source": 817317, "target": 940801}, {"source": 817317, "target": 885250}, {"source": 817317, "target": 817025}, {"source": 817317, "target": 940807}, {"source": 817317, "target": 817160}, {"source": 817317, "target": 817034}, {"source": 817317, "target": 905866}, {"source": 817317, "target": 940812}, {"source": 817317, "target": 988302}, {"source": 817317, "target": 817422}, {"source": 817317, "target": 817172}, {"source": 817317, "target": 817429}, {"source": 817317, "target": 905877}, {"source": 817317, "target": 817047}, {"source": 817317, "target": 987161}, {"source": 817317, "target": 817305}, {"source": 817317, "target": 817307}, {"source": 817317, "target": 817437}, {"source": 817317, "target": 1092897}, {"source": 817317, "target": 817315}, {"source": 817317, "target": 817060}, {"source": 817317, "target": 987558}, {"source": 817317, "target": 816938}, {"source": 817317, "target": 851371}, {"source": 817317, "target": 817196}, {"source": 817317, "target": 987564}, {"source": 817317, "target": 817329}, {"source": 817317, "target": 817074}, {"source": 817317, "target": 817332}, {"source": 817317, "target": 817208}, {"source": 817317, "target": 817218}, {"source": 817317, "target": 988996}, {"source": 817317, "target": 1180100}, {"source": 817317, "target": 954950}, {"source": 817317, "target": 1133767}, {"source": 817317, "target": 846919}, {"source": 817317, "target": 817354}, {"source": 817317, "target": 846971}, {"source": 817317, "target": 816970}, {"source": 817317, "target": 989005}, {"source": 817317, "target": 846933}, {"source": 817317, "target": 817238}, {"source": 817317, "target": 817239}, {"source": 817317, "target": 1092952}, {"source": 817317, "target": 817237}, {"source": 817317, "target": 885207}, {"source": 817317, "target": 816990}, {"source": 817317, "target": 940768}, {"source": 817317, "target": 940769}, {"source": 817317, "target": 846947}, {"source": 817317, "target": 940774}, {"source": 817317, "target": 817000}, {"source": 817317, "target": 817258}, {"source": 817317, "target": 1133932}, {"source": 817317, "target": 846963}, {"source": 817317, "target": 905844}, {"source": 817317, "target": 940789}, {"source": 817317, "target": 905846}, {"source": 817317, "target": 817014}, {"source": 817317, "target": 846968}, {"source": 817317, "target": 817017}, {"source": 817317, "target": 885243}, {"source": 817317, "target": 846972}, {"source": 817317, "target": 817406}, {"source": 940774, "target": 817410}, {"source": 940774, "target": 972550}, {"source": 940774, "target": 940807}, {"source": 940774, "target": 940809}, {"source": 940774, "target": 940812}, {"source": 940774, "target": 988302}, {"source": 940774, "target": 817422}, {"source": 940774, "target": 817044}, {"source": 940774, "target": 817429}, {"source": 940774, "target": 817047}, {"source": 940774, "target": 987933}, {"source": 940774, "target": 817442}, {"source": 940774, "target": 817315}, {"source": 940774, "target": 817317}, {"source": 940774, "target": 817191}, {"source": 940774, "target": 817063}, {"source": 940774, "target": 851371}, {"source": 940774, "target": 846893}, {"source": 940774, "target": 951089}, {"source": 940774, "target": 817074}, {"source": 940774, "target": 817204}, {"source": 940774, "target": 817208}, {"source": 940774, "target": 1092929}, {"source": 940774, "target": 1092930}, {"source": 940774, "target": 846915}, {"source": 940774, "target": 988996}, {"source": 940774, "target": 1180100}, {"source": 940774, "target": 954950}, {"source": 940774, "target": 1133767}, {"source": 940774, "target": 846918}, {"source": 940774, "target": 817351}, {"source": 940774, "target": 817354}, {"source": 940774, "target": 817357}, {"source": 940774, "target": 1092948}, {"source": 940774, "target": 817109}, {"source": 940774, "target": 1092952}, {"source": 940774, "target": 940760}, {"source": 940774, "target": 816989}, {"source": 940774, "target": 816990}, {"source": 940774, "target": 940768}, {"source": 940774, "target": 987872}, {"source": 940774, "target": 846947}, {"source": 940774, "target": 988643}, {"source": 940774, "target": 817000}, {"source": 940774, "target": 1133932}, {"source": 940774, "target": 905846}, {"source": 940774, "target": 817017}, {"source": 940774, "target": 885243}, {"source": 851371, "target": 940807}, {"source": 851371, "target": 940812}, {"source": 851371, "target": 988302}, {"source": 851371, "target": 1092884}, {"source": 851371, "target": 817429}, {"source": 851371, "target": 817173}, {"source": 851371, "target": 817047}, {"source": 851371, "target": 817050}, {"source": 851371, "target": 817307}, {"source": 851371, "target": 817442}, {"source": 851371, "target": 817315}, {"source": 851371, "target": 817317}, {"source": 851371, "target": 855982}, {"source": 851371, "target": 817328}, {"source": 851371, "target": 817074}, {"source": 851371, "target": 817208}, {"source": 851371, "target": 988996}, {"source": 851371, "target": 1180100}, {"source": 851371, "target": 954950}, {"source": 851371, "target": 1133767}, {"source": 851371, "target": 846919}, {"source": 851371, "target": 998860}, {"source": 851371, "target": 817357}, {"source": 851371, "target": 1180496}, {"source": 851371, "target": 817235}, {"source": 851371, "target": 1132119}, {"source": 851371, "target": 1092952}, {"source": 851371, "target": 816990}, {"source": 851371, "target": 1132126}, {"source": 851371, "target": 940768}, {"source": 851371, "target": 989024}, {"source": 851371, "target": 817122}, {"source": 851371, "target": 846947}, {"source": 851371, "target": 940774}, {"source": 851371, "target": 1132134}, {"source": 851371, "target": 817000}, {"source": 851371, "target": 1133932}, {"source": 851371, "target": 905844}, {"source": 851371, "target": 905846}, {"source": 851371, "target": 817014}, {"source": 851371, "target": 885243}, {"source": 851371, "target": 817404}, {"source": 851371, "target": 940799}, {"source": 1133932, "target": 940768}, {"source": 1133932, "target": 817315}, {"source": 1133932, "target": 988996}, {"source": 1133932, "target": 1180100}, {"source": 1133932, "target": 954950}, {"source": 1133932, "target": 1133767}, {"source": 1133932, "target": 817000}, {"source": 1133932, "target": 817317}, {"source": 1133932, "target": 940774}, {"source": 1133932, "target": 851371}, {"source": 1133932, "target": 940812}, {"source": 1133932, "target": 817074}, {"source": 1133932, "target": 817429}, {"source": 1133932, "target": 905846}, {"source": 1133932, "target": 1092952}, {"source": 1133932, "target": 816990}, {"source": 940812, "target": 940801}, {"source": 940812, "target": 940807}, {"source": 940812, "target": 846983}, {"source": 940812, "target": 817163}, {"source": 940812, "target": 988302}, {"source": 940812, "target": 817429}, {"source": 940812, "target": 817047}, {"source": 940812, "target": 817307}, {"source": 940812, "target": 987933}, {"source": 940812, "target": 1391264}, {"source": 940812, "target": 1092897}, {"source": 940812, "target": 817315}, {"source": 940812, "target": 817317}, {"source": 940812, "target": 851371}, {"source": 940812, "target": 817074}, {"source": 940812, "target": 817208}, {"source": 940812, "target": 817344}, {"source": 940812, "target": 988996}, {"source": 940812, "target": 1180100}, {"source": 940812, "target": 954950}, {"source": 940812, "target": 1133767}, {"source": 940812, "target": 846919}, {"source": 940812, "target": 817354}, {"source": 940812, "target": 817228}, {"source": 940812, "target": 1092952}, {"source": 940812, "target": 816990}, {"source": 940812, "target": 940768}, {"source": 940812, "target": 846947}, {"source": 940812, "target": 940774}, {"source": 940812, "target": 817000}, {"source": 940812, "target": 817258}, {"source": 940812, "target": 940779}, {"source": 940812, "target": 1133932}, {"source": 940812, "target": 940789}, {"source": 940812, "target": 905846}, {"source": 940812, "target": 885239}, {"source": 940812, "target": 885243}, {"source": 817074, "target": 940801}, {"source": 817074, "target": 940805}, {"source": 817074, "target": 940812}, {"source": 817074, "target": 817422}, {"source": 817074, "target": 817172}, {"source": 817074, "target": 817429}, {"source": 817074, "target": 817173}, {"source": 817074, "target": 817049}, {"source": 817074, "target": 817177}, {"source": 817074, "target": 817050}, {"source": 817074, "target": 817180}, {"source": 817074, "target": 957469}, {"source": 817074, "target": 817437}, {"source": 817074, "target": 817315}, {"source": 817074, "target": 817317}, {"source": 817074, "target": 817191}, {"source": 817074, "target": 817065}, {"source": 817074, "target": 816938}, {"source": 817074, "target": 851371}, {"source": 817074, "target": 1133995}, {"source": 817074, "target": 817068}, {"source": 817074, "target": 817069}, {"source": 817074, "target": 846893}, {"source": 817074, "target": 817205}, {"source": 817074, "target": 846909}, {"source": 817074, "target": 905919}, {"source": 817074, "target": 1134015}, {"source": 817074, "target": 988994}, {"source": 817074, "target": 1134019}, {"source": 817074, "target": 988996}, {"source": 817074, "target": 1180100}, {"source": 817074, "target": 954950}, {"source": 817074, "target": 1133767}, {"source": 817074, "target": 846919}, {"source": 817074, "target": 816970}, {"source": 817074, "target": 989006}, {"source": 817074, "target": 816977}, {"source": 817074, "target": 817235}, {"source": 817074, "target": 1092952}, {"source": 817074, "target": 846936}, {"source": 817074, "target": 816990}, {"source": 817074, "target": 940768}, {"source": 817074, "target": 989024}, {"source": 817074, "target": 817122}, {"source": 817074, "target": 846946}, {"source": 817074, "target": 817376}, {"source": 817074, "target": 846949}, {"source": 817074, "target": 940774}, {"source": 817074, "target": 817127}, {"source": 817074, "target": 817000}, {"source": 817074, "target": 817126}, {"source": 817074, "target": 885222}, {"source": 817074, "target": 817258}, {"source": 817074, "target": 1133932}, {"source": 817074, "target": 885229}, {"source": 817074, "target": 817133}, {"source": 817074, "target": 1132146}, {"source": 817074, "target": 817140}, {"source": 817074, "target": 905844}, {"source": 817074, "target": 905846}, {"source": 817074, "target": 817270}, {"source": 817074, "target": 846968}, {"source": 817074, "target": 817404}, {"source": 817429, "target": 817280}, {"source": 817429, "target": 817412}, {"source": 817429, "target": 817414}, {"source": 817429, "target": 940807}, {"source": 817429, "target": 817160}, {"source": 817429, "target": 846983}, {"source": 817429, "target": 817163}, {"source": 817429, "target": 940812}, {"source": 817429, "target": 817422}, {"source": 817429, "target": 861455}, {"source": 817429, "target": 817049}, {"source": 817429, "target": 817177}, {"source": 817429, "target": 817305}, {"source": 817429, "target": 817307}, {"source": 817429, "target": 1092897}, {"source": 817429, "target": 817315}, {"source": 817429, "target": 817317}, {"source": 817429, "target": 817191}, {"source": 817429, "target": 817065}, {"source": 817429, "target": 851371}, {"source": 817429, "target": 1133995}, {"source": 817429, "target": 817068}, {"source": 817429, "target": 823344}, {"source": 817429, "target": 1092913}, {"source": 817429, "target": 817074}, {"source": 817429, "target": 958769}, {"source": 817429, "target": 855985}, {"source": 817429, "target": 817206}, {"source": 817429, "target": 817463}, {"source": 817429, "target": 846905}, {"source": 817429, "target": 846909}, {"source": 817429, "target": 905919}, {"source": 817429, "target": 1134015}, {"source": 817429, "target": 817344}, {"source": 817429, "target": 1134019}, {"source": 817429, "target": 988996}, {"source": 817429, "target": 1180100}, {"source": 817429, "target": 954950}, {"source": 817429, "target": 1133767}, {"source": 817429, "target": 817354}, {"source": 817429, "target": 989900}, {"source": 817429, "target": 817228}, {"source": 817429, "target": 989006}, {"source": 817429, "target": 1092944}, {"source": 817429, "target": 846931}, {"source": 817429, "target": 1092952}, {"source": 817429, "target": 846936}, {"source": 817429, "target": 987611}, {"source": 817429, "target": 1133916}, {"source": 817429, "target": 816990}, {"source": 817429, "target": 940768}, {"source": 817429, "target": 1133920}, {"source": 817429, "target": 817249}, {"source": 817429, "target": 885239}, {"source": 817429, "target": 817376}, {"source": 817429, "target": 846949}, {"source": 817429, "target": 940774}, {"source": 817429, "target": 817127}, {"source": 817429, "target": 817000}, {"source": 817429, "target": 817256}, {"source": 817429, "target": 816997}, {"source": 817429, "target": 940779}, {"source": 817429, "target": 1133932}, {"source": 817429, "target": 885229}, {"source": 817429, "target": 1132146}, {"source": 817429, "target": 817140}, {"source": 817429, "target": 940789}, {"source": 817429, "target": 905846}, {"source": 817429, "target": 817270}, {"source": 817429, "target": 846968}, {"source": 817429, "target": 817012}, {"source": 817429, "target": 817406}, {"source": 817429, "target": 817279}, {"source": 905846, "target": 940801}, {"source": 905846, "target": 817154}, {"source": 905846, "target": 817414}, {"source": 905846, "target": 940807}, {"source": 905846, "target": 817160}, {"source": 905846, "target": 817159}, {"source": 905846, "target": 940809}, {"source": 905846, "target": 993675}, {"source": 905846, "target": 940812}, {"source": 905846, "target": 817240}, {"source": 905846, "target": 988302}, {"source": 905846, "target": 940814}, {"source": 905846, "target": 817039}, {"source": 905846, "target": 817422}, {"source": 905846, "target": 817429}, {"source": 905846, "target": 817047}, {"source": 905846, "target": 1409308}, {"source": 905846, "target": 1092897}, {"source": 905846, "target": 817315}, {"source": 905846, "target": 817317}, {"source": 905846, "target": 851371}, {"source": 905846, "target": 817324}, {"source": 905846, "target": 817199}, {"source": 905846, "target": 823344}, {"source": 905846, "target": 958769}, {"source": 905846, "target": 817074}, {"source": 905846, "target": 817329}, {"source": 905846, "target": 817208}, {"source": 905846, "target": 846905}, {"source": 905846, "target": 816960}, {"source": 905846, "target": 816961}, {"source": 905846, "target": 846915}, {"source": 905846, "target": 988996}, {"source": 905846, "target": 1180100}, {"source": 905846, "target": 954950}, {"source": 905846, "target": 1133767}, {"source": 905846, "target": 846917}, {"source": 905846, "target": 846918}, {"source": 905846, "target": 817354}, {"source": 905846, "target": 816970}, {"source": 905846, "target": 989900}, {"source": 905846, "target": 989005}, {"source": 905846, "target": 817101}, {"source": 905846, "target": 1092944}, {"source": 905846, "target": 846931}, {"source": 905846, "target": 817236}, {"source": 905846, "target": 816979}, {"source": 905846, "target": 1092952}, {"source": 905846, "target": 846936}, {"source": 905846, "target": 885209}, {"source": 905846, "target": 885211}, {"source": 905846, "target": 1133916}, {"source": 905846, "target": 940760}, {"source": 905846, "target": 816990}, {"source": 905846, "target": 817119}, {"source": 905846, "target": 940768}, {"source": 905846, "target": 1133920}, {"source": 905846, "target": 846947}, {"source": 905846, "target": 940773}, {"source": 905846, "target": 940774}, {"source": 905846, "target": 817125}, {"source": 905846, "target": 817000}, {"source": 905846, "target": 817258}, {"source": 905846, "target": 1133932}, {"source": 905846, "target": 885229}, {"source": 905846, "target": 817265}, {"source": 905846, "target": 817139}, {"source": 905846, "target": 940789}, {"source": 905846, "target": 846968}, {"source": 905846, "target": 885243}, {"source": 905846, "target": 817406}, {"source": 905846, "target": 940799}, {"source": 1092952, "target": 940807}, {"source": 1092952, "target": 1092874}, {"source": 1092952, "target": 940811}, {"source": 1092952, "target": 940812}, {"source": 1092952, "target": 988302}, {"source": 1092952, "target": 817296}, {"source": 1092952, "target": 817429}, {"source": 1092952, "target": 1133845}, {"source": 1092952, "target": 817047}, {"source": 1092952, "target": 817306}, {"source": 1092952, "target": 1133854}, {"source": 1092952, "target": 817058}, {"source": 1092952, "target": 817315}, {"source": 1092952, "target": 817317}, {"source": 1092952, "target": 1092901}, {"source": 1092952, "target": 851371}, {"source": 1092952, "target": 817324}, {"source": 1092952, "target": 817074}, {"source": 1092952, "target": 817458}, {"source": 1092952, "target": 817206}, {"source": 1092952, "target": 817208}, {"source": 1092952, "target": 988996}, {"source": 1092952, "target": 1180100}, {"source": 1092952, "target": 954950}, {"source": 1092952, "target": 1133767}, {"source": 1092952, "target": 817351}, {"source": 1092952, "target": 1178570}, {"source": 1092952, "target": 846928}, {"source": 1092952, "target": 885206}, {"source": 1092952, "target": 1092951}, {"source": 1092952, "target": 817240}, {"source": 1092952, "target": 885208}, {"source": 1092952, "target": 816990}, {"source": 1092952, "target": 817119}, {"source": 1092952, "target": 940768}, {"source": 1092952, "target": 846947}, {"source": 1092952, "target": 816997}, {"source": 1092952, "target": 940774}, {"source": 1092952, "target": 817127}, {"source": 1092952, "target": 817000}, {"source": 1092952, "target": 940776}, {"source": 1092952, "target": 1132139}, {"source": 1092952, "target": 1133932}, {"source": 1092952, "target": 998636}, {"source": 1092952, "target": 905846}, {"source": 1092952, "target": 817014}, {"source": 1092952, "target": 885243}, {"source": 1092952, "target": 940798}, {"source": 816990, "target": 1092868}, {"source": 816990, "target": 940807}, {"source": 816990, "target": 905866}, {"source": 816990, "target": 885258}, {"source": 816990, "target": 940812}, {"source": 816990, "target": 940810}, {"source": 816990, "target": 988302}, {"source": 816990, "target": 817423}, {"source": 816990, "target": 817422}, {"source": 816990, "target": 817172}, {"source": 816990, "target": 817429}, {"source": 816990, "target": 817047}, {"source": 816990, "target": 817307}, {"source": 816990, "target": 1092897}, {"source": 816990, "target": 817058}, {"source": 816990, "target": 817315}, {"source": 816990, "target": 817057}, {"source": 816990, "target": 817317}, {"source": 816990, "target": 817147}, {"source": 816990, "target": 817191}, {"source": 816990, "target": 851371}, {"source": 816990, "target": 1092907}, {"source": 816990, "target": 817324}, {"source": 816990, "target": 990763}, {"source": 816990, "target": 905900}, {"source": 816990, "target": 817074}, {"source": 816990, "target": 817458}, {"source": 816990, "target": 817332}, {"source": 816990, "target": 817206}, {"source": 816990, "target": 817208}, {"source": 816990, "target": 817464}, {"source": 816990, "target": 988996}, {"source": 816990, "target": 1180100}, {"source": 816990, "target": 954950}, {"source": 816990, "target": 1133767}, {"source": 816990, "target": 1134020}, {"source": 816990, "target": 817353}, {"source": 816990, "target": 817094}, {"source": 816990, "target": 817352}, {"source": 816990, "target": 816970}, {"source": 816990, "target": 989009}, {"source": 816990, "target": 816981}, {"source": 816990, "target": 1133782}, {"source": 816990, "target": 817239}, {"source": 816990, "target": 1092952}, {"source": 816990, "target": 989016}, {"source": 816990, "target": 1133786}, {"source": 816990, "target": 817114}, {"source": 816990, "target": 940760}, {"source": 816990, "target": 987613}, {"source": 816990, "target": 940768}, {"source": 816990, "target": 817376}, {"source": 816990, "target": 846947}, {"source": 816990, "target": 940774}, {"source": 816990, "target": 817126}, {"source": 816990, "target": 817000}, {"source": 816990, "target": 817258}, {"source": 816990, "target": 1133932}, {"source": 816990, "target": 885228}, {"source": 816990, "target": 940789}, {"source": 816990, "target": 905846}, {"source": 816990, "target": 940793}, {"source": 816990, "target": 885243}, {"source": 816990, "target": 846973}, {"source": 846946, "target": 817154}, {"source": 846946, "target": 1092867}, {"source": 846946, "target": 817412}, {"source": 846946, "target": 972549}, {"source": 846946, "target": 885252}, {"source": 846946, "target": 846983}, {"source": 846946, "target": 885251}, {"source": 846946, "target": 817414}, {"source": 846946, "target": 817034}, {"source": 846946, "target": 1136397}, {"source": 846946, "target": 817038}, {"source": 846946, "target": 940814}, {"source": 846946, "target": 817293}, {"source": 846946, "target": 817173}, {"source": 846946, "target": 817175}, {"source": 846946, "target": 817047}, {"source": 846946, "target": 817049}, {"source": 846946, "target": 1178394}, {"source": 846946, "target": 817050}, {"source": 846946, "target": 817305}, {"source": 846946, "target": 989085}, {"source": 846946, "target": 1092906}, {"source": 846946, "target": 817069}, {"source": 846946, "target": 817074}, {"source": 846946, "target": 817205}, {"source": 846946, "target": 817206}, {"source": 846946, "target": 817463}, {"source": 846946, "target": 817081}, {"source": 846946, "target": 1092926}, {"source": 846946, "target": 905919}, {"source": 846946, "target": 817091}, {"source": 846946, "target": 988996}, {"source": 846946, "target": 846919}, {"source": 846946, "target": 817354}, {"source": 846946, "target": 1092943}, {"source": 846946, "target": 989009}, {"source": 846946, "target": 817106}, {"source": 846946, "target": 1133907}, {"source": 846946, "target": 817235}, {"source": 846946, "target": 817108}, {"source": 846946, "target": 817111}, {"source": 846946, "target": 987611}, {"source": 846946, "target": 817121}, {"source": 846946, "target": 817122}, {"source": 846946, "target": 846949}, {"source": 846946, "target": 846950}, {"source": 846946, "target": 1133927}, {"source": 846946, "target": 816997}, {"source": 846946, "target": 940777}, {"source": 846946, "target": 817126}, {"source": 846946, "target": 940779}, {"source": 846946, "target": 817258}, {"source": 846946, "target": 817133}, {"source": 846946, "target": 885229}, {"source": 846946, "target": 905844}, {"source": 846946, "target": 817141}, {"source": 846946, "target": 817014}, {"source": 846946, "target": 846968}, {"source": 846946, "target": 1132153}, {"source": 846946, "target": 817404}, {"source": 817412, "target": 817154}, {"source": 817412, "target": 885250}, {"source": 817412, "target": 817159}, {"source": 817412, "target": 817172}, {"source": 817412, "target": 817191}, {"source": 817412, "target": 990763}, {"source": 817412, "target": 817206}, {"source": 817412, "target": 817228}, {"source": 817412, "target": 817236}, {"source": 817412, "target": 817239}, {"source": 817412, "target": 846936}, {"source": 817412, "target": 846946}, {"source": 817412, "target": 846950}, {"source": 817412, "target": 817265}, {"source": 817412, "target": 988789}, {"source": 817412, "target": 1132153}, {"source": 817412, "target": 846971}, {"source": 817412, "target": 846972}, {"source": 817412, "target": 846973}, {"source": 817412, "target": 817279}, {"source": 817412, "target": 817280}, {"source": 817412, "target": 846983}, {"source": 817412, "target": 1084054}, {"source": 817412, "target": 817305}, {"source": 817412, "target": 1391264}, {"source": 817412, "target": 817315}, {"source": 817412, "target": 817329}, {"source": 817412, "target": 817332}, {"source": 817412, "target": 817344}, {"source": 817412, "target": 817376}, {"source": 817412, "target": 940777}, {"source": 817412, "target": 940779}, {"source": 817412, "target": 940799}, {"source": 817412, "target": 972549}, {"source": 817412, "target": 940814}, {"source": 817412, "target": 817428}, {"source": 817412, "target": 817429}, {"source": 817412, "target": 1092887}, {"source": 817412, "target": 1178394}, {"source": 817412, "target": 1409308}, {"source": 817412, "target": 817437}, {"source": 817412, "target": 1092906}, {"source": 817412, "target": 817455}, {"source": 817412, "target": 990002}, {"source": 817412, "target": 817458}, {"source": 817412, "target": 1092924}, {"source": 817412, "target": 1092926}, {"source": 817412, "target": 816960}, {"source": 817412, "target": 816961}, {"source": 817412, "target": 816970}, {"source": 817412, "target": 1092943}, {"source": 817412, "target": 989009}, {"source": 817412, "target": 1133907}, {"source": 817412, "target": 1133927}, {"source": 817412, "target": 817000}, {"source": 817412, "target": 817012}, {"source": 817412, "target": 817017}, {"source": 817412, "target": 817022}, {"source": 817412, "target": 817025}, {"source": 817412, "target": 993675}, {"source": 817412, "target": 817039}, {"source": 817412, "target": 817044}, {"source": 817412, "target": 817049}, {"source": 817412, "target": 989085}, {"source": 817412, "target": 817057}, {"source": 817412, "target": 817058}, {"source": 817412, "target": 987558}, {"source": 817412, "target": 817068}, {"source": 817412, "target": 958896}, {"source": 817412, "target": 855985}, {"source": 817412, "target": 1134004}, {"source": 817412, "target": 817081}, {"source": 817412, "target": 945092}, {"source": 817412, "target": 861639}, {"source": 817412, "target": 817115}, {"source": 817412, "target": 885218}, {"source": 817412, "target": 988643}, {"source": 817412, "target": 817126}, {"source": 817412, "target": 817133}, {"source": 817412, "target": 817141}, {"source": 817412, "target": 885239}, {"source": 817412, "target": 817144}, {"source": 817412, "target": 885243}, {"source": 846950, "target": 817154}, {"source": 846950, "target": 885251}, {"source": 846950, "target": 817412}, {"source": 846950, "target": 972549}, {"source": 846950, "target": 846983}, {"source": 846950, "target": 817287}, {"source": 846950, "target": 817163}, {"source": 846950, "target": 817293}, {"source": 846950, "target": 817165}, {"source": 846950, "target": 817296}, {"source": 846950, "target": 817044}, {"source": 846950, "target": 989078}, {"source": 846950, "target": 817049}, {"source": 846950, "target": 1178394}, {"source": 846950, "target": 817017}, {"source": 846950, "target": 989085}, {"source": 846950, "target": 1092906}, {"source": 846950, "target": 817069}, {"source": 846950, "target": 823344}, {"source": 846950, "target": 817205}, {"source": 846950, "target": 817081}, {"source": 846950, "target": 1092926}, {"source": 846950, "target": 1092943}, {"source": 846950, "target": 989009}, {"source": 846950, "target": 1133907}, {"source": 846950, "target": 817244}, {"source": 846950, "target": 817119}, {"source": 846950, "target": 940768}, {"source": 846950, "target": 817121}, {"source": 846950, "target": 846946}, {"source": 846950, "target": 846947}, {"source": 846950, "target": 817376}, {"source": 846950, "target": 846949}, {"source": 846950, "target": 1133927}, {"source": 846950, "target": 940777}, {"source": 846950, "target": 940779}, {"source": 846950, "target": 817133}, {"source": 846950, "target": 817141}, {"source": 846950, "target": 817014}, {"source": 846950, "target": 885237}, {"source": 846950, "target": 1132153}, {"source": 846983, "target": 885252}, {"source": 846983, "target": 817163}, {"source": 846983, "target": 817175}, {"source": 846983, "target": 846915}, {"source": 846983, "target": 817228}, {"source": 846983, "target": 846936}, {"source": 846983, "target": 846946}, {"source": 846983, "target": 846950}, {"source": 846983, "target": 1132153}, {"source": 846983, "target": 817296}, {"source": 846983, "target": 905364}, {"source": 846983, "target": 817305}, {"source": 846983, "target": 817306}, {"source": 846983, "target": 817307}, {"source": 846983, "target": 817315}, {"source": 846983, "target": 817338}, {"source": 846983, "target": 905919}, {"source": 846983, "target": 817344}, {"source": 846983, "target": 817351}, {"source": 846983, "target": 1133771}, {"source": 846983, "target": 1133792}, {"source": 846983, "target": 940771}, {"source": 846983, "target": 1133798}, {"source": 846983, "target": 940777}, {"source": 846983, "target": 940779}, {"source": 846983, "target": 940782}, {"source": 846983, "target": 1133822}, {"source": 846983, "target": 1092867}, {"source": 846983, "target": 817412}, {"source": 846983, "target": 940807}, {"source": 846983, "target": 940812}, {"source": 846983, "target": 1136397}, {"source": 846983, "target": 1092877}, {"source": 846983, "target": 861455}, {"source": 846983, "target": 817428}, {"source": 846983, "target": 817429}, {"source": 846983, "target": 1092887}, {"source": 846983, "target": 1178394}, {"source": 846983, "target": 1133853}, {"source": 846983, "target": 817437}, {"source": 846983, "target": 1092906}, {"source": 846983, "target": 817455}, {"source": 846983, "target": 1092912}, {"source": 846983, "target": 1092924}, {"source": 846983, "target": 1092926}, {"source": 846983, "target": 988994}, {"source": 846983, "target": 988995}, {"source": 846983, "target": 816970}, {"source": 846983, "target": 1092943}, {"source": 846983, "target": 989009}, {"source": 846983, "target": 1133907}, {"source": 846983, "target": 1092951}, {"source": 846983, "target": 989020}, {"source": 846983, "target": 816997}, {"source": 846983, "target": 1133927}, {"source": 846983, "target": 817000}, {"source": 846983, "target": 1133934}, {"source": 846983, "target": 817014}, {"source": 846983, "target": 817022}, {"source": 846983, "target": 817025}, {"source": 846983, "target": 817034}, {"source": 846983, "target": 817038}, {"source": 846983, "target": 817044}, {"source": 846983, "target": 989085}, {"source": 846983, "target": 987558}, {"source": 846983, "target": 987559}, {"source": 846983, "target": 855985}, {"source": 846983, "target": 817081}, {"source": 846983, "target": 817094}, {"source": 846983, "target": 861639}, {"source": 846983, "target": 817106}, {"source": 846983, "target": 817109}, {"source": 846983, "target": 817111}, {"source": 846983, "target": 817115}, {"source": 846983, "target": 817126}, {"source": 846983, "target": 817133}, {"source": 846983, "target": 817141}, {"source": 846983, "target": 885239}, {"source": 1133927, "target": 817154}, {"source": 1133927, "target": 817412}, {"source": 1133927, "target": 972549}, {"source": 1133927, "target": 846983}, {"source": 1133927, "target": 817049}, {"source": 1133927, "target": 1178394}, {"source": 1133927, "target": 989085}, {"source": 1133927, "target": 1092906}, {"source": 1133927, "target": 817069}, {"source": 1133927, "target": 817205}, {"source": 1133927, "target": 817081}, {"source": 1133927, "target": 1092926}, {"source": 1133927, "target": 1092943}, {"source": 1133927, "target": 989009}, {"source": 1133927, "target": 1133907}, {"source": 1133927, "target": 817121}, {"source": 1133927, "target": 846946}, {"source": 1133927, "target": 846949}, {"source": 1133927, "target": 846950}, {"source": 1133927, "target": 940777}, {"source": 1133927, "target": 940779}, {"source": 1133927, "target": 817133}, {"source": 1133927, "target": 817141}, {"source": 1133927, "target": 1132153}, {"source": 940777, "target": 817154}, {"source": 940777, "target": 885251}, {"source": 940777, "target": 817412}, {"source": 940777, "target": 972549}, {"source": 940777, "target": 940803}, {"source": 940777, "target": 846983}, {"source": 940777, "target": 817287}, {"source": 940777, "target": 817163}, {"source": 940777, "target": 817293}, {"source": 940777, "target": 817165}, {"source": 940777, "target": 817296}, {"source": 940777, "target": 817044}, {"source": 940777, "target": 989078}, {"source": 940777, "target": 817049}, {"source": 940777, "target": 1178394}, {"source": 940777, "target": 817017}, {"source": 940777, "target": 989085}, {"source": 940777, "target": 861608}, {"source": 940777, "target": 1092906}, {"source": 940777, "target": 817069}, {"source": 940777, "target": 823344}, {"source": 940777, "target": 817331}, {"source": 940777, "target": 817205}, {"source": 940777, "target": 817081}, {"source": 940777, "target": 846909}, {"source": 940777, "target": 1092926}, {"source": 940777, "target": 1092943}, {"source": 940777, "target": 989009}, {"source": 940777, "target": 816977}, {"source": 940777, "target": 1133907}, {"source": 940777, "target": 940755}, {"source": 940777, "target": 861655}, {"source": 940777, "target": 885208}, {"source": 940777, "target": 817244}, {"source": 940777, "target": 940768}, {"source": 940777, "target": 817121}, {"source": 940777, "target": 846946}, {"source": 940777, "target": 846947}, {"source": 940777, "target": 817249}, {"source": 940777, "target": 846949}, {"source": 940777, "target": 846950}, {"source": 940777, "target": 1133927}, {"source": 940777, "target": 817256}, {"source": 940777, "target": 940779}, {"source": 940777, "target": 817133}, {"source": 940777, "target": 817141}, {"source": 940777, "target": 817014}, {"source": 940777, "target": 885237}, {"source": 940777, "target": 1132153}, {"source": 1092906, "target": 817154}, {"source": 1092906, "target": 885251}, {"source": 1092906, "target": 817412}, {"source": 1092906, "target": 972549}, {"source": 1092906, "target": 846983}, {"source": 1092906, "target": 817049}, {"source": 1092906, "target": 1178394}, {"source": 1092906, "target": 989085}, {"source": 1092906, "target": 817069}, {"source": 1092906, "target": 817205}, {"source": 1092906, "target": 817081}, {"source": 1092906, "target": 1092926}, {"source": 1092906, "target": 1092943}, {"source": 1092906, "target": 989009}, {"source": 1092906, "target": 1133907}, {"source": 1092906, "target": 817121}, {"source": 1092906, "target": 846946}, {"source": 1092906, "target": 846949}, {"source": 1092906, "target": 846950}, {"source": 1092906, "target": 1133927}, {"source": 1092906, "target": 940777}, {"source": 1092906, "target": 940779}, {"source": 1092906, "target": 817133}, {"source": 1092906, "target": 817141}, {"source": 1092906, "target": 1132153}, {"source": 940779, "target": 817025}, {"source": 940779, "target": 817412}, {"source": 940779, "target": 885254}, {"source": 940779, "target": 846983}, {"source": 940779, "target": 1092872}, {"source": 940779, "target": 1092873}, {"source": 940779, "target": 817160}, {"source": 940779, "target": 940807}, {"source": 940779, "target": 940812}, {"source": 940779, "target": 817163}, {"source": 940779, "target": 940814}, {"source": 940779, "target": 988302}, {"source": 940779, "target": 817173}, {"source": 940779, "target": 817429}, {"source": 940779, "target": 817047}, {"source": 940779, "target": 1178394}, {"source": 940779, "target": 817307}, {"source": 940779, "target": 989085}, {"source": 940779, "target": 987933}, {"source": 940779, "target": 987934}, {"source": 940779, "target": 1391264}, {"source": 940779, "target": 817315}, {"source": 940779, "target": 1133988}, {"source": 940779, "target": 817063}, {"source": 940779, "target": 1092906}, {"source": 940779, "target": 816938}, {"source": 940779, "target": 817453}, {"source": 940779, "target": 817204}, {"source": 940779, "target": 817205}, {"source": 940779, "target": 817208}, {"source": 940779, "target": 817081}, {"source": 940779, "target": 1092926}, {"source": 940779, "target": 816958}, {"source": 940779, "target": 817344}, {"source": 940779, "target": 846915}, {"source": 940779, "target": 861639}, {"source": 940779, "target": 1134024}, {"source": 940779, "target": 817354}, {"source": 940779, "target": 1092943}, {"source": 940779, "target": 989009}, {"source": 940779, "target": 1133907}, {"source": 940779, "target": 846933}, {"source": 940779, "target": 817115}, {"source": 940779, "target": 816989}, {"source": 940779, "target": 987102}, {"source": 940779, "target": 846946}, {"source": 940779, "target": 846947}, {"source": 940779, "target": 846950}, {"source": 940779, "target": 1133927}, {"source": 940779, "target": 817000}, {"source": 940779, "target": 940777}, {"source": 940779, "target": 817133}, {"source": 940779, "target": 940785}, {"source": 940779, "target": 817141}, {"source": 940779, "target": 885239}, {"source": 940779, "target": 1132153}, {"source": 940779, "target": 817022}, {"source": 817133, "target": 940801}, {"source": 817133, "target": 817025}, {"source": 817133, "target": 817412}, {"source": 817133, "target": 972549}, {"source": 817133, "target": 940805}, {"source": 817133, "target": 846983}, {"source": 817133, "target": 885254}, {"source": 817133, "target": 817422}, {"source": 817133, "target": 817428}, {"source": 817133, "target": 817044}, {"source": 817133, "target": 817172}, {"source": 817133, "target": 1092887}, {"source": 817133, "target": 817177}, {"source": 817133, "target": 1178394}, {"source": 817133, "target": 817305}, {"source": 817133, "target": 817180}, {"source": 817133, "target": 989085}, {"source": 817133, "target": 957469}, {"source": 817133, "target": 817437}, {"source": 817133, "target": 817315}, {"source": 817133, "target": 817191}, {"source": 817133, "target": 817065}, {"source": 817133, "target": 1092906}, {"source": 817133, "target": 1133995}, {"source": 817133, "target": 817455}, {"source": 817133, "target": 817074}, {"source": 817133, "target": 817205}, {"source": 817133, "target": 817081}, {"source": 817133, "target": 1092924}, {"source": 817133, "target": 1092926}, {"source": 817133, "target": 1134015}, {"source": 817133, "target": 817344}, {"source": 817133, "target": 1134019}, {"source": 817133, "target": 861639}, {"source": 817133, "target": 989006}, {"source": 817133, "target": 1092943}, {"source": 817133, "target": 989009}, {"source": 817133, "target": 1133907}, {"source": 817133, "target": 817115}, {"source": 817133, "target": 816989}, {"source": 817133, "target": 940768}, {"source": 817133, "target": 817121}, {"source": 817133, "target": 846946}, {"source": 817133, "target": 817376}, {"source": 817133, "target": 846950}, {"source": 817133, "target": 1133927}, {"source": 817133, "target": 817127}, {"source": 817133, "target": 940777}, {"source": 817133, "target": 817126}, {"source": 817133, "target": 940779}, {"source": 817133, "target": 885229}, {"source": 817133, "target": 817136}, {"source": 817133, "target": 817140}, {"source": 817133, "target": 817141}, {"source": 817133, "target": 817270}, {"source": 817133, "target": 1132153}, {"source": 817133, "target": 817022}, {"source": 817133, "target": 817279}, {"source": 989009, "target": 817412}, {"source": 989009, "target": 1092868}, {"source": 989009, "target": 846983}, {"source": 989009, "target": 905866}, {"source": 989009, "target": 885258}, {"source": 989009, "target": 1178394}, {"source": 989009, "target": 817307}, {"source": 989009, "target": 1092906}, {"source": 989009, "target": 1092907}, {"source": 989009, "target": 817324}, {"source": 989009, "target": 990763}, {"source": 989009, "target": 940793}, {"source": 989009, "target": 817464}, {"source": 989009, "target": 817081}, {"source": 989009, "target": 817208}, {"source": 989009, "target": 1092926}, {"source": 989009, "target": 1134020}, {"source": 989009, "target": 817353}, {"source": 989009, "target": 1133907}, {"source": 989009, "target": 816981}, {"source": 989009, "target": 1133782}, {"source": 989009, "target": 989016}, {"source": 989009, "target": 1133786}, {"source": 989009, "target": 987613}, {"source": 989009, "target": 816990}, {"source": 989009, "target": 817376}, {"source": 989009, "target": 846946}, {"source": 989009, "target": 846950}, {"source": 989009, "target": 1133927}, {"source": 989009, "target": 940777}, {"source": 989009, "target": 940779}, {"source": 989009, "target": 903020}, {"source": 989009, "target": 817133}, {"source": 989009, "target": 817136}, {"source": 989009, "target": 817141}, {"source": 989009, "target": 1132153}, {"source": 989009, "target": 817147}, {"source": 1133907, "target": 817154}, {"source": 1133907, "target": 817412}, {"source": 1133907, "target": 972549}, {"source": 1133907, "target": 846983}, {"source": 1133907, "target": 817049}, {"source": 1133907, "target": 1178394}, {"source": 1133907, "target": 989085}, {"source": 1133907, "target": 1092906}, {"source": 1133907, "target": 817069}, {"source": 1133907, "target": 817205}, {"source": 1133907, "target": 817081}, {"source": 1133907, "target": 1092926}, {"source": 1133907, "target": 1092943}, {"source": 1133907, "target": 989009}, {"source": 1133907, "target": 817121}, {"source": 1133907, "target": 846946}, {"source": 1133907, "target": 846949}, {"source": 1133907, "target": 846950}, {"source": 1133907, "target": 1133927}, {"source": 1133907, "target": 940777}, {"source": 1133907, "target": 940779}, {"source": 1133907, "target": 817133}, {"source": 1133907, "target": 817141}, {"source": 1133907, "target": 1132153}, {"source": 817141, "target": 817154}, {"source": 817141, "target": 885251}, {"source": 817141, "target": 817412}, {"source": 817141, "target": 972549}, {"source": 817141, "target": 846983}, {"source": 817141, "target": 885256}, {"source": 817141, "target": 817293}, {"source": 817141, "target": 817165}, {"source": 817141, "target": 817423}, {"source": 817141, "target": 989078}, {"source": 817141, "target": 817049}, {"source": 817141, "target": 1178394}, {"source": 817141, "target": 817017}, {"source": 817141, "target": 817180}, {"source": 817141, "target": 989085}, {"source": 817141, "target": 817305}, {"source": 817141, "target": 817058}, {"source": 817141, "target": 817065}, {"source": 817141, "target": 1092906}, {"source": 817141, "target": 817196}, {"source": 817141, "target": 817069}, {"source": 817141, "target": 823344}, {"source": 817141, "target": 817205}, {"source": 817141, "target": 817081}, {"source": 817141, "target": 1092926}, {"source": 817141, "target": 817344}, {"source": 817141, "target": 817094}, {"source": 817141, "target": 817101}, {"source": 817141, "target": 1092943}, {"source": 817141, "target": 989009}, {"source": 817141, "target": 1133907}, {"source": 817141, "target": 817114}, {"source": 817141, "target": 817244}, {"source": 817141, "target": 816989}, {"source": 817141, "target": 817376}, {"source": 817141, "target": 817121}, {"source": 817141, "target": 846946}, {"source": 817141, "target": 846949}, {"source": 817141, "target": 846950}, {"source": 817141, "target": 1133927}, {"source": 817141, "target": 940777}, {"source": 817141, "target": 940779}, {"source": 817141, "target": 817133}, {"source": 817141, "target": 817136}, {"source": 817141, "target": 817012}, {"source": 817141, "target": 885237}, {"source": 817141, "target": 817014}, {"source": 817141, "target": 1132153}, {"source": 817141, "target": 940794}, {"source": 817141, "target": 817020}, {"source": 817141, "target": 817279}, {"source": 1132153, "target": 885251}, {"source": 1132153, "target": 817412}, {"source": 1132153, "target": 940804}, {"source": 1132153, "target": 846983}, {"source": 1132153, "target": 940810}, {"source": 1132153, "target": 885258}, {"source": 1132153, "target": 817423}, {"source": 1132153, "target": 1092881}, {"source": 1132153, "target": 1178394}, {"source": 1132153, "target": 817181}, {"source": 1132153, "target": 957469}, {"source": 1132153, "target": 817054}, {"source": 1132153, "target": 817437}, {"source": 1132153, "target": 817057}, {"source": 1132153, "target": 1092906}, {"source": 1132153, "target": 817196}, {"source": 1132153, "target": 855985}, {"source": 1132153, "target": 817081}, {"source": 1132153, "target": 963001}, {"source": 1132153, "target": 1092921}, {"source": 1132153, "target": 1092926}, {"source": 1132153, "target": 817218}, {"source": 1132153, "target": 846918}, {"source": 1132153, "target": 846919}, {"source": 1132153, "target": 954825}, {"source": 1132153, "target": 816970}, {"source": 1132153, "target": 998860}, {"source": 1132153, "target": 817357}, {"source": 1132153, "target": 1415757}, {"source": 1132153, "target": 987343}, {"source": 1132153, "target": 989009}, {"source": 1132153, "target": 817361}, {"source": 1132153, "target": 1133907}, {"source": 1132153, "target": 940758}, {"source": 1132153, "target": 1133911}, {"source": 1132153, "target": 940760}, {"source": 1132153, "target": 989015}, {"source": 1132153, "target": 1133914}, {"source": 1132153, "target": 816989}, {"source": 1132153, "target": 885216}, {"source": 1132153, "target": 885217}, {"source": 1132153, "target": 846946}, {"source": 1132153, "target": 956516}, {"source": 1132153, "target": 846950}, {"source": 1132153, "target": 1133927}, {"source": 1132153, "target": 940777}, {"source": 1132153, "target": 940779}, {"source": 1132153, "target": 817133}, {"source": 1132153, "target": 988788}, {"source": 1132153, "target": 817141}, {"source": 1132153, "target": 885239}, {"source": 1132153, "target": 855801}, {"source": 1132153, "target": 817406}, {"source": 1178394, "target": 846946}, {"source": 1178394, "target": 817412}, {"source": 1178394, "target": 846950}, {"source": 1178394, "target": 1133927}, {"source": 1178394, "target": 846983}, {"source": 1178394, "target": 940777}, {"source": 1178394, "target": 1092906}, {"source": 1178394, "target": 940779}, {"source": 1178394, "target": 817133}, {"source": 1178394, "target": 1092943}, {"source": 1178394, "target": 989009}, {"source": 1178394, "target": 1133907}, {"source": 1178394, "target": 817141}, {"source": 1178394, "target": 1132153}, {"source": 1178394, "target": 817081}, {"source": 1178394, "target": 989085}, {"source": 1178394, "target": 1092926}, {"source": 817081, "target": 817025}, {"source": 817081, "target": 817154}, {"source": 817081, "target": 885251}, {"source": 817081, "target": 817412}, {"source": 817081, "target": 972549}, {"source": 817081, "target": 846983}, {"source": 817081, "target": 817287}, {"source": 817081, "target": 817163}, {"source": 817081, "target": 817293}, {"source": 817081, "target": 817165}, {"source": 817081, "target": 817296}, {"source": 817081, "target": 817044}, {"source": 817081, "target": 989078}, {"source": 817081, "target": 817049}, {"source": 817081, "target": 1178394}, {"source": 817081, "target": 817017}, {"source": 817081, "target": 989085}, {"source": 817081, "target": 1092906}, {"source": 817081, "target": 817069}, {"source": 817081, "target": 823344}, {"source": 817081, "target": 817205}, {"source": 817081, "target": 1092926}, {"source": 817081, "target": 1092943}, {"source": 817081, "target": 989009}, {"source": 817081, "target": 1133907}, {"source": 817081, "target": 817244}, {"source": 817081, "target": 817119}, {"source": 817081, "target": 940768}, {"source": 817081, "target": 817121}, {"source": 817081, "target": 846946}, {"source": 817081, "target": 846947}, {"source": 817081, "target": 817376}, {"source": 817081, "target": 846949}, {"source": 817081, "target": 846950}, {"source": 817081, "target": 1133927}, {"source": 817081, "target": 940777}, {"source": 817081, "target": 817258}, {"source": 817081, "target": 940779}, {"source": 817081, "target": 817133}, {"source": 817081, "target": 817141}, {"source": 817081, "target": 817014}, {"source": 817081, "target": 885237}, {"source": 817081, "target": 1132153}, {"source": 1092926, "target": 817154}, {"source": 1092926, "target": 885251}, {"source": 1092926, "target": 817412}, {"source": 1092926, "target": 972549}, {"source": 1092926, "target": 846983}, {"source": 1092926, "target": 817049}, {"source": 1092926, "target": 1178394}, {"source": 1092926, "target": 989085}, {"source": 1092926, "target": 1092906}, {"source": 1092926, "target": 817069}, {"source": 1092926, "target": 817205}, {"source": 1092926, "target": 817081}, {"source": 1092926, "target": 1092943}, {"source": 1092926, "target": 989009}, {"source": 1092926, "target": 1133907}, {"source": 1092926, "target": 817121}, {"source": 1092926, "target": 846946}, {"source": 1092926, "target": 846949}, {"source": 1092926, "target": 846950}, {"source": 1092926, "target": 1133927}, {"source": 1092926, "target": 940777}, {"source": 1092926, "target": 940779}, {"source": 1092926, "target": 817133}, {"source": 1092926, "target": 817141}, {"source": 1092926, "target": 1132153}, {"source": 1092868, "target": 905866}, {"source": 1092868, "target": 885258}, {"source": 1092868, "target": 817307}, {"source": 1092868, "target": 817180}, {"source": 1092868, "target": 1180196}, {"source": 1092868, "target": 1092907}, {"source": 1092868, "target": 817324}, {"source": 1092868, "target": 1181229}, {"source": 1092868, "target": 990763}, {"source": 1092868, "target": 817464}, {"source": 1092868, "target": 1134020}, {"source": 1092868, "target": 817353}, {"source": 1092868, "target": 989009}, {"source": 1092868, "target": 816981}, {"source": 1092868, "target": 1133782}, {"source": 1092868, "target": 989016}, {"source": 1092868, "target": 1133786}, {"source": 1092868, "target": 987613}, {"source": 1092868, "target": 816990}, {"source": 1092868, "target": 817376}, {"source": 1092868, "target": 903020}, {"source": 1092868, "target": 817136}, {"source": 1092868, "target": 940793}, {"source": 1092868, "target": 817147}, {"source": 1180196, "target": 1134020}, {"source": 1180196, "target": 1092868}, {"source": 1180196, "target": 817353}, {"source": 1180196, "target": 1092907}, {"source": 1180196, "target": 903020}, {"source": 1180196, "target": 1181229}, {"source": 1180196, "target": 817307}, {"source": 1180196, "target": 817136}, {"source": 1180196, "target": 1133782}, {"source": 1180196, "target": 989016}, {"source": 1180196, "target": 1133786}, {"source": 1180196, "target": 817147}, {"source": 1180196, "target": 987613}, {"source": 1134020, "target": 1092868}, {"source": 1134020, "target": 905866}, {"source": 1134020, "target": 885258}, {"source": 1134020, "target": 817307}, {"source": 1134020, "target": 817180}, {"source": 1134020, "target": 1180196}, {"source": 1134020, "target": 1092907}, {"source": 1134020, "target": 817324}, {"source": 1134020, "target": 1181229}, {"source": 1134020, "target": 990763}, {"source": 1134020, "target": 817464}, {"source": 1134020, "target": 817353}, {"source": 1134020, "target": 989009}, {"source": 1134020, "target": 1133782}, {"source": 1134020, "target": 989016}, {"source": 1134020, "target": 1133786}, {"source": 1134020, "target": 987613}, {"source": 1134020, "target": 816990}, {"source": 1134020, "target": 817376}, {"source": 1134020, "target": 903020}, {"source": 1134020, "target": 817136}, {"source": 1134020, "target": 940793}, {"source": 1134020, "target": 817147}, {"source": 817147, "target": 817154}, {"source": 817147, "target": 885251}, {"source": 817147, "target": 1092868}, {"source": 817147, "target": 885252}, {"source": 817147, "target": 1092872}, {"source": 817147, "target": 817160}, {"source": 817147, "target": 905866}, {"source": 817147, "target": 885258}, {"source": 817147, "target": 817165}, {"source": 817147, "target": 817293}, {"source": 817147, "target": 861455}, {"source": 817147, "target": 989079}, {"source": 817147, "target": 817047}, {"source": 817147, "target": 817177}, {"source": 817147, "target": 817306}, {"source": 817147, "target": 817307}, {"source": 817147, "target": 817180}, {"source": 817147, "target": 989085}, {"source": 817147, "target": 817175}, {"source": 817147, "target": 1180196}, {"source": 817147, "target": 1092907}, {"source": 817147, "target": 817324}, {"source": 817147, "target": 1181229}, {"source": 817147, "target": 990763}, {"source": 817147, "target": 846893}, {"source": 817147, "target": 846898}, {"source": 817147, "target": 817464}, {"source": 817147, "target": 817091}, {"source": 817147, "target": 1134020}, {"source": 817147, "target": 817353}, {"source": 817147, "target": 954825}, {"source": 817147, "target": 817354}, {"source": 817147, "target": 989009}, {"source": 817147, "target": 885203}, {"source": 817147, "target": 940756}, {"source": 817147, "target": 816981}, {"source": 817147, "target": 1133782}, {"source": 817147, "target": 817111}, {"source": 817147, "target": 989016}, {"source": 817147, "target": 817240}, {"source": 817147, "target": 1133786}, {"source": 817147, "target": 987613}, {"source": 817147, "target": 816990}, {"source": 817147, "target": 987101}, {"source": 817147, "target": 817376}, {"source": 817147, "target": 817375}, {"source": 817147, "target": 885216}, {"source": 817147, "target": 885214}, {"source": 817147, "target": 817249}, {"source": 817147, "target": 903020}, {"source": 817147, "target": 817136}, {"source": 817147, "target": 817014}, {"source": 817147, "target": 940793}, {"source": 817147, "target": 817279}, {"source": 817353, "target": 1092868}, {"source": 817353, "target": 905866}, {"source": 817353, "target": 885258}, {"source": 817353, "target": 817165}, {"source": 817353, "target": 861455}, {"source": 817353, "target": 989079}, {"source": 817353, "target": 817047}, {"source": 817353, "target": 817177}, {"source": 817353, "target": 817306}, {"source": 817353, "target": 817307}, {"source": 817353, "target": 817180}, {"source": 817353, "target": 989085}, {"source": 817353, "target": 1180196}, {"source": 817353, "target": 1092907}, {"source": 817353, "target": 817324}, {"source": 817353, "target": 1181229}, {"source": 817353, "target": 990763}, {"source": 817353, "target": 846898}, {"source": 817353, "target": 817464}, {"source": 817353, "target": 817208}, {"source": 817353, "target": 1134020}, {"source": 817353, "target": 989009}, {"source": 817353, "target": 885203}, {"source": 817353, "target": 940756}, {"source": 817353, "target": 816981}, {"source": 817353, "target": 1133782}, {"source": 817353, "target": 989016}, {"source": 817353, "target": 1133786}, {"source": 817353, "target": 987613}, {"source": 817353, "target": 816990}, {"source": 817353, "target": 987101}, {"source": 817353, "target": 817376}, {"source": 817353, "target": 817375}, {"source": 817353, "target": 903020}, {"source": 817353, "target": 817136}, {"source": 817353, "target": 940793}, {"source": 817353, "target": 817147}, {"source": 817353, "target": 817279}, {"source": 1092907, "target": 1092868}, {"source": 1092907, "target": 905866}, {"source": 1092907, "target": 885258}, {"source": 1092907, "target": 817307}, {"source": 1092907, "target": 817180}, {"source": 1092907, "target": 1180196}, {"source": 1092907, "target": 990763}, {"source": 1092907, "target": 817324}, {"source": 1092907, "target": 1181229}, {"source": 1092907, "target": 817464}, {"source": 1092907, "target": 1134020}, {"source": 1092907, "target": 817353}, {"source": 1092907, "target": 989009}, {"source": 1092907, "target": 1133782}, {"source": 1092907, "target": 989016}, {"source": 1092907, "target": 1133786}, {"source": 1092907, "target": 987613}, {"source": 1092907, "target": 816990}, {"source": 1092907, "target": 817376}, {"source": 1092907, "target": 903020}, {"source": 1092907, "target": 817136}, {"source": 1092907, "target": 940793}, {"source": 1092907, "target": 817147}, {"source": 903020, "target": 1133825}, {"source": 903020, "target": 817154}, {"source": 903020, "target": 885251}, {"source": 903020, "target": 1092868}, {"source": 903020, "target": 972550}, {"source": 903020, "target": 817287}, {"source": 903020, "target": 988301}, {"source": 903020, "target": 817165}, {"source": 903020, "target": 1133847}, {"source": 903020, "target": 817307}, {"source": 903020, "target": 817180}, {"source": 903020, "target": 1409308}, {"source": 903020, "target": 1391264}, {"source": 903020, "target": 957474}, {"source": 903020, "target": 1180196}, {"source": 903020, "target": 940841}, {"source": 903020, "target": 1092907}, {"source": 903020, "target": 817324}, {"source": 903020, "target": 1181229}, {"source": 903020, "target": 885243}, {"source": 903020, "target": 996152}, {"source": 903020, "target": 817344}, {"source": 903020, "target": 817091}, {"source": 903020, "target": 1134020}, {"source": 903020, "target": 988996}, {"source": 903020, "target": 817353}, {"source": 903020, "target": 817230}, {"source": 903020, "target": 989009}, {"source": 903020, "target": 1181394}, {"source": 903020, "target": 1133782}, {"source": 903020, "target": 1092950}, {"source": 903020, "target": 989016}, {"source": 903020, "target": 885206}, {"source": 903020, "target": 1133786}, {"source": 903020, "target": 987613}, {"source": 903020, "target": 1133924}, {"source": 903020, "target": 989029}, {"source": 903020, "target": 989030}, {"source": 903020, "target": 1133158}, {"source": 903020, "target": 940776}, {"source": 903020, "target": 817136}, {"source": 903020, "target": 1133812}, {"source": 903020, "target": 1133815}, {"source": 903020, "target": 940794}, {"source": 903020, "target": 817147}, {"source": 903020, "target": 1182205}, {"source": 903020, "target": 940798}, {"source": 1181229, "target": 1134020}, {"source": 1181229, "target": 1092868}, {"source": 1181229, "target": 1180196}, {"source": 1181229, "target": 817353}, {"source": 1181229, "target": 1092907}, {"source": 1181229, "target": 903020}, {"source": 1181229, "target": 817307}, {"source": 1181229, "target": 817136}, {"source": 1181229, "target": 1133782}, {"source": 1181229, "target": 989016}, {"source": 1181229, "target": 1133786}, {"source": 1181229, "target": 817147}, {"source": 1181229, "target": 987613}, {"source": 817136, "target": 817280}, {"source": 817136, "target": 1092868}, {"source": 817136, "target": 817115}, {"source": 817136, "target": 817287}, {"source": 817136, "target": 885254}, {"source": 817136, "target": 817293}, {"source": 817136, "target": 817244}, {"source": 817136, "target": 817307}, {"source": 817136, "target": 817180}, {"source": 817136, "target": 817181}, {"source": 817136, "target": 817054}, {"source": 817136, "target": 1134112}, {"source": 817136, "target": 1134115}, {"source": 817136, "target": 1180196}, {"source": 817136, "target": 1134118}, {"source": 817136, "target": 817065}, {"source": 817136, "target": 1092907}, {"source": 817136, "target": 817324}, {"source": 817136, "target": 1181229}, {"source": 817136, "target": 817069}, {"source": 817136, "target": 817205}, {"source": 817136, "target": 817344}, {"source": 817136, "target": 1134020}, {"source": 817136, "target": 846919}, {"source": 817136, "target": 817353}, {"source": 817136, "target": 817228}, {"source": 817136, "target": 817229}, {"source": 817136, "target": 817101}, {"source": 817136, "target": 987343}, {"source": 817136, "target": 846927}, {"source": 817136, "target": 989009}, {"source": 817136, "target": 905681}, {"source": 817136, "target": 817361}, {"source": 817136, "target": 846928}, {"source": 817136, "target": 817237}, {"source": 817136, "target": 1133782}, {"source": 817136, "target": 817108}, {"source": 817136, "target": 989016}, {"source": 817136, "target": 816985}, {"source": 817136, "target": 1133786}, {"source": 817136, "target": 913627}, {"source": 817136, "target": 989017}, {"source": 817136, "target": 987613}, {"source": 817136, "target": 816989}, {"source": 817136, "target": 885215}, {"source": 817136, "target": 885216}, {"source": 817136, "target": 817376}, {"source": 817136, "target": 989026}, {"source": 817136, "target": 817249}, {"source": 817136, "target": 940768}, {"source": 817136, "target": 817125}, {"source": 817136, "target": 817127}, {"source": 817136, "target": 817258}, {"source": 817136, "target": 903020}, {"source": 817136, "target": 817133}, {"source": 817136, "target": 988788}, {"source": 817136, "target": 940789}, {"source": 817136, "target": 846965}, {"source": 817136, "target": 817141}, {"source": 817136, "target": 855801}, {"source": 817136, "target": 940794}, {"source": 817136, "target": 817147}, {"source": 817136, "target": 817020}, {"source": 817136, "target": 817022}, {"source": 817136, "target": 817279}, {"source": 1133782, "target": 1092868}, {"source": 1133782, "target": 905866}, {"source": 1133782, "target": 885258}, {"source": 1133782, "target": 817307}, {"source": 1133782, "target": 817180}, {"source": 1133782, "target": 1180196}, {"source": 1133782, "target": 1092907}, {"source": 1133782, "target": 817324}, {"source": 1133782, "target": 1181229}, {"source": 1133782, "target": 990763}, {"source": 1133782, "target": 817464}, {"source": 1133782, "target": 1134020}, {"source": 1133782, "target": 817353}, {"source": 1133782, "target": 989009}, {"source": 1133782, "target": 989016}, {"source": 1133782, "target": 1133786}, {"source": 1133782, "target": 987613}, {"source": 1133782, "target": 816990}, {"source": 1133782, "target": 817376}, {"source": 1133782, "target": 903020}, {"source": 1133782, "target": 817136}, {"source": 1133782, "target": 940793}, {"source": 1133782, "target": 817147}, {"source": 989016, "target": 1092868}, {"source": 989016, "target": 905866}, {"source": 989016, "target": 885258}, {"source": 989016, "target": 817307}, {"source": 989016, "target": 817180}, {"source": 989016, "target": 1180196}, {"source": 989016, "target": 1092907}, {"source": 989016, "target": 817324}, {"source": 989016, "target": 1181229}, {"source": 989016, "target": 990763}, {"source": 989016, "target": 817464}, {"source": 989016, "target": 817208}, {"source": 989016, "target": 1134020}, {"source": 989016, "target": 817353}, {"source": 989016, "target": 989009}, {"source": 989016, "target": 816981}, {"source": 989016, "target": 1133782}, {"source": 989016, "target": 1133786}, {"source": 989016, "target": 987613}, {"source": 989016, "target": 816990}, {"source": 989016, "target": 817376}, {"source": 989016, "target": 903020}, {"source": 989016, "target": 817136}, {"source": 989016, "target": 940793}, {"source": 989016, "target": 817147}, {"source": 1133786, "target": 1092868}, {"source": 1133786, "target": 905866}, {"source": 1133786, "target": 885258}, {"source": 1133786, "target": 817307}, {"source": 1133786, "target": 817180}, {"source": 1133786, "target": 1180196}, {"source": 1133786, "target": 1092907}, {"source": 1133786, "target": 817324}, {"source": 1133786, "target": 1181229}, {"source": 1133786, "target": 990763}, {"source": 1133786, "target": 817464}, {"source": 1133786, "target": 1134020}, {"source": 1133786, "target": 817353}, {"source": 1133786, "target": 989009}, {"source": 1133786, "target": 1133782}, {"source": 1133786, "target": 989016}, {"source": 1133786, "target": 987613}, {"source": 1133786, "target": 816990}, {"source": 1133786, "target": 817376}, {"source": 1133786, "target": 903020}, {"source": 1133786, "target": 817136}, {"source": 1133786, "target": 940793}, {"source": 1133786, "target": 817147}, {"source": 817307, "target": 817280}, {"source": 817307, "target": 940801}, {"source": 817307, "target": 1092868}, {"source": 817307, "target": 940804}, {"source": 817307, "target": 817287}, {"source": 817307, "target": 940807}, {"source": 817307, "target": 846983}, {"source": 817307, "target": 905866}, {"source": 817307, "target": 817163}, {"source": 817307, "target": 940812}, {"source": 817307, "target": 988301}, {"source": 817307, "target": 988302}, {"source": 817307, "target": 817296}, {"source": 817307, "target": 1092884}, {"source": 817307, "target": 817429}, {"source": 817307, "target": 817428}, {"source": 817307, "target": 817050}, {"source": 817307, "target": 817180}, {"source": 817307, "target": 987933}, {"source": 817307, "target": 1391264}, {"source": 817307, "target": 817442}, {"source": 817307, "target": 817315}, {"source": 817307, "target": 1180196}, {"source": 817307, "target": 817317}, {"source": 817307, "target": 940841}, {"source": 817307, "target": 816938}, {"source": 817307, "target": 1092907}, {"source": 817307, "target": 817324}, {"source": 817307, "target": 1181229}, {"source": 817307, "target": 990763}, {"source": 817307, "target": 851371}, {"source": 817307, "target": 855982}, {"source": 817307, "target": 817328}, {"source": 817307, "target": 817208}, {"source": 817307, "target": 817344}, {"source": 817307, "target": 1134020}, {"source": 817307, "target": 988996}, {"source": 817307, "target": 817353}, {"source": 817307, "target": 817354}, {"source": 817307, "target": 998860}, {"source": 817307, "target": 817101}, {"source": 817307, "target": 989009}, {"source": 817307, "target": 817235}, {"source": 817307, "target": 1133782}, {"source": 817307, "target": 989016}, {"source": 817307, "target": 816985}, {"source": 817307, "target": 1133786}, {"source": 817307, "target": 987613}, {"source": 817307, "target": 816990}, {"source": 817307, "target": 1132126}, {"source": 817307, "target": 817376}, {"source": 817307, "target": 989024}, {"source": 817307, "target": 817122}, {"source": 817307, "target": 817121}, {"source": 817307, "target": 846947}, {"source": 817307, "target": 885216}, {"source": 817307, "target": 1132134}, {"source": 817307, "target": 989030}, {"source": 817307, "target": 817000}, {"source": 817307, "target": 817126}, {"source": 817307, "target": 816997}, {"source": 817307, "target": 940779}, {"source": 817307, "target": 903020}, {"source": 817307, "target": 817136}, {"source": 817307, "target": 940793}, {"source": 817307, "target": 940794}, {"source": 817307, "target": 817147}, {"source": 817307, "target": 817404}, {"source": 817307, "target": 940798}, {"source": 987613, "target": 1092868}, {"source": 987613, "target": 905866}, {"source": 987613, "target": 885258}, {"source": 987613, "target": 817307}, {"source": 987613, "target": 817180}, {"source": 987613, "target": 1180196}, {"source": 987613, "target": 1092907}, {"source": 987613, "target": 817324}, {"source": 987613, "target": 1181229}, {"source": 987613, "target": 990763}, {"source": 987613, "target": 817464}, {"source": 987613, "target": 817208}, {"source": 987613, "target": 1134020}, {"source": 987613, "target": 817353}, {"source": 987613, "target": 989009}, {"source": 987613, "target": 816981}, {"source": 987613, "target": 1133782}, {"source": 987613, "target": 989016}, {"source": 987613, "target": 1133786}, {"source": 987613, "target": 816990}, {"source": 987613, "target": 817376}, {"source": 987613, "target": 903020}, {"source": 987613, "target": 817136}, {"source": 987613, "target": 940793}, {"source": 987613, "target": 817147}, {"source": 1391264, "target": 817280}, {"source": 1391264, "target": 1133825}, {"source": 1391264, "target": 817412}, {"source": 1391264, "target": 972550}, {"source": 1391264, "target": 817287}, {"source": 1391264, "target": 940807}, {"source": 1391264, "target": 885258}, {"source": 1391264, "target": 817163}, {"source": 1391264, "target": 940812}, {"source": 1391264, "target": 988301}, {"source": 1391264, "target": 988302}, {"source": 1391264, "target": 817173}, {"source": 1391264, "target": 1133847}, {"source": 1391264, "target": 817144}, {"source": 1391264, "target": 817305}, {"source": 1391264, "target": 817306}, {"source": 1391264, "target": 817047}, {"source": 1391264, "target": 1409308}, {"source": 1391264, "target": 817307}, {"source": 1391264, "target": 987933}, {"source": 1391264, "target": 957474}, {"source": 1391264, "target": 817058}, {"source": 1391264, "target": 817191}, {"source": 1391264, "target": 940841}, {"source": 1391264, "target": 990763}, {"source": 1391264, "target": 817068}, {"source": 1391264, "target": 817453}, {"source": 1391264, "target": 958896}, {"source": 1391264, "target": 855985}, {"source": 1391264, "target": 990002}, {"source": 1391264, "target": 817208}, {"source": 1391264, "target": 1180986}, {"source": 1391264, "target": 1412282}, {"source": 1391264, "target": 817091}, {"source": 1391264, "target": 988996}, {"source": 1391264, "target": 945092}, {"source": 1391264, "target": 817354}, {"source": 1391264, "target": 817228}, {"source": 1391264, "target": 989005}, {"source": 1391264, "target": 817230}, {"source": 1391264, "target": 816977}, {"source": 1391264, "target": 1181394}, {"source": 1391264, "target": 846947}, {"source": 1391264, "target": 1092950}, {"source": 1391264, "target": 1179991}, {"source": 1391264, "target": 817240}, {"source": 1391264, "target": 817239}, {"source": 1391264, "target": 885218}, {"source": 1391264, "target": 988643}, {"source": 1391264, "target": 1132132}, {"source": 1391264, "target": 1133924}, {"source": 1391264, "target": 989030}, {"source": 1391264, "target": 1133158}, {"source": 1391264, "target": 885239}, {"source": 1391264, "target": 956516}, {"source": 1391264, "target": 940778}, {"source": 1391264, "target": 1132138}, {"source": 1391264, "target": 903020}, {"source": 1391264, "target": 817000}, {"source": 1391264, "target": 940779}, {"source": 1391264, "target": 1000050}, {"source": 1391264, "target": 940788}, {"source": 1391264, "target": 1133812}, {"source": 1391264, "target": 988789}, {"source": 1391264, "target": 1133815}, {"source": 1391264, "target": 846968}, {"source": 1391264, "target": 817017}, {"source": 1391264, "target": 940794}, {"source": 1391264, "target": 885244}, {"source": 1391264, "target": 1182205}, {"source": 1391264, "target": 1092863}, {"source": 1132132, "target": 817160}, {"source": 1132132, "target": 885258}, {"source": 1132132, "target": 817163}, {"source": 1132132, "target": 940811}, {"source": 1132132, "target": 1391264}, {"source": 1132132, "target": 817458}, {"source": 1132132, "target": 846905}, {"source": 1132132, "target": 1180986}, {"source": 1132132, "target": 1412282}, {"source": 1132132, "target": 846919}, {"source": 1132132, "target": 817228}, {"source": 1132132, "target": 989005}, {"source": 1132132, "target": 1092944}, {"source": 1132132, "target": 816977}, {"source": 1132132, "target": 1179991}, {"source": 1132132, "target": 817240}, {"source": 1132132, "target": 988643}, {"source": 1132132, "target": 940778}, {"source": 1132132, "target": 1132138}, {"source": 1132132, "target": 1000050}, {"source": 1132132, "target": 940788}, {"source": 1132132, "target": 846968}, {"source": 1132132, "target": 885244}, {"source": 1132132, "target": 817406}, {"source": 1132132, "target": 940799}, {"source": 1412282, "target": 1391264}, {"source": 1412282, "target": 1132132}, {"source": 1412282, "target": 940778}, {"source": 1412282, "target": 817163}, {"source": 1412282, "target": 885258}, {"source": 1412282, "target": 989005}, {"source": 1412282, "target": 1132138}, {"source": 1412282, "target": 817228}, {"source": 1412282, "target": 816977}, {"source": 1412282, "target": 1000050}, {"source": 1412282, "target": 940788}, {"source": 1412282, "target": 1179991}, {"source": 1412282, "target": 846968}, {"source": 1412282, "target": 1180986}, {"source": 1412282, "target": 817240}, {"source": 1412282, "target": 885244}, {"source": 940778, "target": 885248}, {"source": 940778, "target": 817160}, {"source": 940778, "target": 885258}, {"source": 940778, "target": 817163}, {"source": 940778, "target": 940811}, {"source": 940778, "target": 1391264}, {"source": 940778, "target": 987552}, {"source": 940778, "target": 817057}, {"source": 940778, "target": 987559}, {"source": 940778, "target": 817458}, {"source": 940778, "target": 817206}, {"source": 940778, "target": 817208}, {"source": 940778, "target": 846905}, {"source": 940778, "target": 1180986}, {"source": 940778, "target": 1412282}, {"source": 940778, "target": 816958}, {"source": 940778, "target": 846919}, {"source": 940778, "target": 817228}, {"source": 940778, "target": 989005}, {"source": 940778, "target": 817229}, {"source": 940778, "target": 1092944}, {"source": 940778, "target": 816977}, {"source": 940778, "target": 817106}, {"source": 940778, "target": 940758}, {"source": 940778, "target": 1179991}, {"source": 940778, "target": 817240}, {"source": 940778, "target": 817121}, {"source": 940778, "target": 988643}, {"source": 940778, "target": 1132132}, {"source": 940778, "target": 1132138}, {"source": 940778, "target": 1000050}, {"source": 940778, "target": 940788}, {"source": 940778, "target": 846964}, {"source": 940778, "target": 817270}, {"source": 940778, "target": 846965}, {"source": 940778, "target": 846968}, {"source": 940778, "target": 885244}, {"source": 940778, "target": 846973}, {"source": 940778, "target": 817406}, {"source": 940778, "target": 940799}, {"source": 817163, "target": 940807}, {"source": 817163, "target": 817160}, {"source": 817163, "target": 1092873}, {"source": 817163, "target": 885258}, {"source": 817163, "target": 940811}, {"source": 817163, "target": 940812}, {"source": 817163, "target": 846983}, {"source": 817163, "target": 817296}, {"source": 817163, "target": 817044}, {"source": 817163, "target": 817429}, {"source": 817163, "target": 817307}, {"source": 817163, "target": 987933}, {"source": 817163, "target": 1391264}, {"source": 817163, "target": 817058}, {"source": 817163, "target": 823344}, {"source": 817163, "target": 817458}, {"source": 817163, "target": 905908}, {"source": 817163, "target": 817206}, {"source": 817163, "target": 817208}, {"source": 817163, "target": 846905}, {"source": 817163, "target": 1180986}, {"source": 817163, "target": 1412282}, {"source": 817163, "target": 817081}, {"source": 817163, "target": 817344}, {"source": 817163, "target": 846919}, {"source": 817163, "target": 817228}, {"source": 817163, "target": 989005}, {"source": 817163, "target": 1092944}, {"source": 817163, "target": 816977}, {"source": 817163, "target": 1179991}, {"source": 817163, "target": 817240}, {"source": 817163, "target": 817119}, {"source": 817163, "target": 940768}, {"source": 817163, "target": 817376}, {"source": 817163, "target": 988643}, {"source": 817163, "target": 1132132}, {"source": 817163, "target": 846947}, {"source": 817163, "target": 846949}, {"source": 817163, "target": 846950}, {"source": 817163, "target": 817000}, {"source": 817163, "target": 940777}, {"source": 817163, "target": 940778}, {"source": 817163, "target": 1132138}, {"source": 817163, "target": 940779}, {"source": 817163, "target": 817258}, {"source": 817163, "target": 1000050}, {"source": 817163, "target": 940788}, {"source": 817163, "target": 885237}, {"source": 817163, "target": 817014}, {"source": 817163, "target": 885239}, {"source": 817163, "target": 846968}, {"source": 817163, "target": 885244}, {"source": 817163, "target": 817406}, {"source": 817163, "target": 940799}, {"source": 885258, "target": 817280}, {"source": 885258, "target": 817025}, {"source": 885258, "target": 1092868}, {"source": 885258, "target": 905866}, {"source": 885258, "target": 817163}, {"source": 885258, "target": 817181}, {"source": 885258, "target": 957469}, {"source": 885258, "target": 817054}, {"source": 885258, "target": 1391264}, {"source": 885258, "target": 817437}, {"source": 885258, "target": 1092907}, {"source": 885258, "target": 817196}, {"source": 885258, "target": 817324}, {"source": 885258, "target": 990763}, {"source": 885258, "target": 817205}, {"source": 885258, "target": 940793}, {"source": 885258, "target": 817464}, {"source": 885258, "target": 817208}, {"source": 885258, "target": 1180986}, {"source": 885258, "target": 1412282}, {"source": 885258, "target": 1134020}, {"source": 885258, "target": 817353}, {"source": 885258, "target": 816970}, {"source": 885258, "target": 817228}, {"source": 885258, "target": 989005}, {"source": 885258, "target": 1415757}, {"source": 885258, "target": 987343}, {"source": 885258, "target": 816977}, {"source": 885258, "target": 817361}, {"source": 885258, "target": 989009}, {"source": 885258, "target": 816981}, {"source": 885258, "target": 1133782}, {"source": 885258, "target": 1179991}, {"source": 885258, "target": 817240}, {"source": 885258, "target": 989016}, {"source": 885258, "target": 1133786}, {"source": 885258, "target": 885206}, {"source": 885258, "target": 987613}, {"source": 885258, "target": 816990}, {"source": 885258, "target": 817249}, {"source": 885258, "target": 1132132}, {"source": 885258, "target": 956516}, {"source": 885258, "target": 940778}, {"source": 885258, "target": 1132138}, {"source": 885258, "target": 1000050}, {"source": 885258, "target": 940788}, {"source": 885258, "target": 846968}, {"source": 885258, "target": 1132153}, {"source": 885258, "target": 940794}, {"source": 885258, "target": 817147}, {"source": 885258, "target": 885244}, {"source": 885258, "target": 940798}, {"source": 989005, "target": 885250}, {"source": 989005, "target": 817160}, {"source": 989005, "target": 885258}, {"source": 989005, "target": 817163}, {"source": 989005, "target": 940811}, {"source": 989005, "target": 942986}, {"source": 989005, "target": 817172}, {"source": 989005, "target": 1391264}, {"source": 989005, "target": 817317}, {"source": 989005, "target": 817196}, {"source": 989005, "target": 817324}, {"source": 989005, "target": 817199}, {"source": 989005, "target": 817458}, {"source": 989005, "target": 817332}, {"source": 989005, "target": 846905}, {"source": 989005, "target": 1180986}, {"source": 989005, "target": 1412282}, {"source": 989005, "target": 846915}, {"source": 989005, "target": 846917}, {"source": 989005, "target": 846918}, {"source": 989005, "target": 846919}, {"source": 989005, "target": 1092937}, {"source": 989005, "target": 817228}, {"source": 989005, "target": 1092944}, {"source": 989005, "target": 816977}, {"source": 989005, "target": 846972}, {"source": 989005, "target": 816979}, {"source": 989005, "target": 1179991}, {"source": 989005, "target": 817240}, {"source": 989005, "target": 817239}, {"source": 989005, "target": 940761}, {"source": 989005, "target": 1092954}, {"source": 989005, "target": 940760}, {"source": 989005, "target": 885209}, {"source": 989005, "target": 817119}, {"source": 989005, "target": 988643}, {"source": 989005, "target": 1132132}, {"source": 989005, "target": 940773}, {"source": 989005, "target": 940778}, {"source": 989005, "target": 1132138}, {"source": 989005, "target": 1000050}, {"source": 989005, "target": 817139}, {"source": 989005, "target": 940788}, {"source": 989005, "target": 905844}, {"source": 989005, "target": 905846}, {"source": 989005, "target": 846968}, {"source": 989005, "target": 846971}, {"source": 989005, "target": 885244}, {"source": 989005, "target": 817406}, {"source": 989005, "target": 940799}, {"source": 1132138, "target": 817160}, {"source": 1132138, "target": 885258}, {"source": 1132138, "target": 817163}, {"source": 1132138, "target": 940811}, {"source": 1132138, "target": 1391264}, {"source": 1132138, "target": 817458}, {"source": 1132138, "target": 846905}, {"source": 1132138, "target": 1180986}, {"source": 1132138, "target": 1412282}, {"source": 1132138, "target": 846919}, {"source": 1132138, "target": 817228}, {"source": 1132138, "target": 989005}, {"source": 1132138, "target": 1092944}, {"source": 1132138, "target": 816977}, {"source": 1132138, "target": 1179991}, {"source": 1132138, "target": 817240}, {"source": 1132138, "target": 988643}, {"source": 1132138, "target": 1132132}, {"source": 1132138, "target": 940778}, {"source": 1132138, "target": 1000050}, {"source": 1132138, "target": 940788}, {"source": 1132138, "target": 846968}, {"source": 1132138, "target": 885244}, {"source": 1132138, "target": 817406}, {"source": 1132138, "target": 940799}, {"source": 817228, "target": 885250}, {"source": 817228, "target": 817160}, {"source": 817228, "target": 885258}, {"source": 817228, "target": 817163}, {"source": 817228, "target": 1134115}, {"source": 817228, "target": 1134118}, {"source": 817228, "target": 817196}, {"source": 817228, "target": 846893}, {"source": 817228, "target": 817206}, {"source": 817228, "target": 846905}, {"source": 817228, "target": 846919}, {"source": 817228, "target": 817237}, {"source": 817228, "target": 817239}, {"source": 817228, "target": 817240}, {"source": 817228, "target": 1132132}, {"source": 817228, "target": 1132138}, {"source": 817228, "target": 1000050}, {"source": 817228, "target": 988788}, {"source": 817228, "target": 846965}, {"source": 817228, "target": 905844}, {"source": 817228, "target": 846968}, {"source": 817228, "target": 846971}, {"source": 817228, "target": 846972}, {"source": 817228, "target": 817279}, {"source": 817228, "target": 817280}, {"source": 817228, "target": 846983}, {"source": 817228, "target": 988300}, {"source": 817228, "target": 817293}, {"source": 817228, "target": 1391264}, {"source": 817228, "target": 817332}, {"source": 817228, "target": 905908}, {"source": 817228, "target": 1412282}, {"source": 817228, "target": 940755}, {"source": 817228, "target": 940759}, {"source": 817228, "target": 913627}, {"source": 817228, "target": 817376}, {"source": 817228, "target": 940778}, {"source": 817228, "target": 940788}, {"source": 817228, "target": 940789}, {"source": 817228, "target": 817406}, {"source": 817228, "target": 940799}, {"source": 817228, "target": 940804}, {"source": 817228, "target": 817412}, {"source": 817228, "target": 940807}, {"source": 817228, "target": 1092873}, {"source": 817228, "target": 940811}, {"source": 817228, "target": 940812}, {"source": 817228, "target": 817429}, {"source": 817228, "target": 817437}, {"source": 817228, "target": 1180986}, {"source": 817228, "target": 988994}, {"source": 817228, "target": 1092937}, {"source": 817228, "target": 989005}, {"source": 817228, "target": 1092944}, {"source": 817228, "target": 816977}, {"source": 817228, "target": 1179991}, {"source": 817228, "target": 816985}, {"source": 817228, "target": 1092954}, {"source": 817228, "target": 989026}, {"source": 817228, "target": 817000}, {"source": 817228, "target": 817012}, {"source": 817228, "target": 817020}, {"source": 817228, "target": 817022}, {"source": 817228, "target": 942986}, {"source": 817228, "target": 989078}, {"source": 817228, "target": 817049}, {"source": 817228, "target": 817058}, {"source": 817228, "target": 817065}, {"source": 817228, "target": 817068}, {"source": 817228, "target": 855982}, {"source": 817228, "target": 855985}, {"source": 817228, "target": 885200}, {"source": 817228, "target": 905681}, {"source": 817228, "target": 885215}, {"source": 817228, "target": 885216}, {"source": 817228, "target": 988643}, {"source": 817228, "target": 817136}, {"source": 817228, "target": 885239}, {"source": 817228, "target": 885244}, {"source": 816977, "target": 940803}, {"source": 816977, "target": 817160}, {"source": 816977, "target": 1092873}, {"source": 816977, "target": 885258}, {"source": 816977, "target": 817163}, {"source": 816977, "target": 940811}, {"source": 816977, "target": 817296}, {"source": 816977, "target": 817173}, {"source": 816977, "target": 817049}, {"source": 816977, "target": 817050}, {"source": 816977, "target": 1391264}, {"source": 816977, "target": 817058}, {"source": 816977, "target": 817404}, {"source": 816977, "target": 861608}, {"source": 816977, "target": 817458}, {"source": 816977, "target": 817330}, {"source": 816977, "target": 905908}, {"source": 816977, "target": 817331}, {"source": 816977, "target": 817206}, {"source": 816977, "target": 817205}, {"source": 816977, "target": 817208}, {"source": 816977, "target": 846905}, {"source": 816977, "target": 1180986}, {"source": 816977, "target": 1412282}, {"source": 816977, "target": 817074}, {"source": 816977, "target": 846909}, {"source": 816977, "target": 846919}, {"source": 816977, "target": 817228}, {"source": 816977, "target": 989005}, {"source": 816977, "target": 1092944}, {"source": 816977, "target": 940755}, {"source": 816977, "target": 817235}, {"source": 816977, "target": 1179991}, {"source": 816977, "target": 817240}, {"source": 816977, "target": 861655}, {"source": 816977, "target": 885208}, {"source": 816977, "target": 817249}, {"source": 816977, "target": 817122}, {"source": 816977, "target": 988643}, {"source": 816977, "target": 1132132}, {"source": 816977, "target": 817256}, {"source": 816977, "target": 940777}, {"source": 816977, "target": 940778}, {"source": 816977, "target": 1132138}, {"source": 816977, "target": 817132}, {"source": 816977, "target": 817258}, {"source": 816977, "target": 1000050}, {"source": 816977, "target": 940788}, {"source": 816977, "target": 817014}, {"source": 816977, "target": 846968}, {"source": 816977, "target": 885243}, {"source": 816977, "target": 885244}, {"source": 816977, "target": 817406}, {"source": 816977, "target": 940799}, {"source": 1000050, "target": 817160}, {"source": 1000050, "target": 885258}, {"source": 1000050, "target": 817163}, {"source": 1000050, "target": 940811}, {"source": 1000050, "target": 1391264}, {"source": 1000050, "target": 817458}, {"source": 1000050, "target": 846905}, {"source": 1000050, "target": 1180986}, {"source": 1000050, "target": 1412282}, {"source": 1000050, "target": 846919}, {"source": 1000050, "target": 817228}, {"source": 1000050, "target": 989005}, {"source": 1000050, "target": 1092944}, {"source": 1000050, "target": 816977}, {"source": 1000050, "target": 1179991}, {"source": 1000050, "target": 817240}, {"source": 1000050, "target": 988643}, {"source": 1000050, "target": 1132132}, {"source": 1000050, "target": 940778}, {"source": 1000050, "target": 1132138}, {"source": 1000050, "target": 940788}, {"source": 1000050, "target": 846968}, {"source": 1000050, "target": 885244}, {"source": 1000050, "target": 817406}, {"source": 1000050, "target": 940799}, {"source": 940788, "target": 817287}, {"source": 940788, "target": 885258}, {"source": 940788, "target": 817163}, {"source": 940788, "target": 988300}, {"source": 940788, "target": 989078}, {"source": 940788, "target": 1391264}, {"source": 940788, "target": 817058}, {"source": 940788, "target": 817063}, {"source": 940788, "target": 846893}, {"source": 940788, "target": 817458}, {"source": 940788, "target": 905908}, {"source": 940788, "target": 1180986}, {"source": 940788, "target": 1412282}, {"source": 940788, "target": 817406}, {"source": 940788, "target": 1092928}, {"source": 940788, "target": 988994}, {"source": 940788, "target": 846919}, {"source": 940788, "target": 817228}, {"source": 940788, "target": 989005}, {"source": 940788, "target": 817101}, {"source": 940788, "target": 885200}, {"source": 940788, "target": 816977}, {"source": 940788, "target": 817361}, {"source": 940788, "target": 940755}, {"source": 940788, "target": 1092948}, {"source": 940788, "target": 846933}, {"source": 940788, "target": 1179991}, {"source": 940788, "target": 817240}, {"source": 940788, "target": 1133787}, {"source": 940788, "target": 1132132}, {"source": 940788, "target": 940778}, {"source": 940788, "target": 1132138}, {"source": 940788, "target": 940782}, {"source": 940788, "target": 1000050}, {"source": 940788, "target": 846964}, {"source": 940788, "target": 846968}, {"source": 940788, "target": 885244}, {"source": 940788, "target": 817022}, {"source": 1179991, "target": 1391264}, {"source": 1179991, "target": 1132132}, {"source": 1179991, "target": 940778}, {"source": 1179991, "target": 817163}, {"source": 1179991, "target": 885258}, {"source": 1179991, "target": 989005}, {"source": 1179991, "target": 1132138}, {"source": 1179991, "target": 817228}, {"source": 1179991, "target": 1180986}, {"source": 1179991, "target": 816977}, {"source": 1179991, "target": 1000050}, {"source": 1179991, "target": 940788}, {"source": 1179991, "target": 846968}, {"source": 1179991, "target": 1412282}, {"source": 1179991, "target": 817240}, {"source": 1179991, "target": 885244}, {"source": 846968, "target": 817414}, {"source": 846968, "target": 817160}, {"source": 846968, "target": 885258}, {"source": 846968, "target": 817163}, {"source": 846968, "target": 940811}, {"source": 846968, "target": 817172}, {"source": 846968, "target": 817429}, {"source": 846968, "target": 817305}, {"source": 846968, "target": 817437}, {"source": 846968, "target": 1391264}, {"source": 846968, "target": 817317}, {"source": 846968, "target": 816938}, {"source": 846968, "target": 823344}, {"source": 846968, "target": 958769}, {"source": 846968, "target": 817074}, {"source": 846968, "target": 817206}, {"source": 846968, "target": 817463}, {"source": 846968, "target": 1180986}, {"source": 846968, "target": 1412282}, {"source": 846968, "target": 846919}, {"source": 846968, "target": 817354}, {"source": 846968, "target": 817228}, {"source": 846968, "target": 989005}, {"source": 846968, "target": 989900}, {"source": 846968, "target": 816977}, {"source": 846968, "target": 846931}, {"source": 846968, "target": 817108}, {"source": 846968, "target": 817109}, {"source": 846968, "target": 1179991}, {"source": 846968, "target": 817240}, {"source": 846968, "target": 846936}, {"source": 846968, "target": 987611}, {"source": 846968, "target": 1133916}, {"source": 846968, "target": 817119}, {"source": 846968, "target": 1133920}, {"source": 846968, "target": 817249}, {"source": 846968, "target": 846946}, {"source": 846968, "target": 1132132}, {"source": 846968, "target": 816997}, {"source": 846968, "target": 817256}, {"source": 846968, "target": 940778}, {"source": 846968, "target": 1132138}, {"source": 846968, "target": 885229}, {"source": 846968, "target": 1000050}, {"source": 846968, "target": 940788}, {"source": 846968, "target": 940789}, {"source": 846968, "target": 905846}, {"source": 846968, "target": 885239}, {"source": 846968, "target": 885244}, {"source": 846968, "target": 940799}, {"source": 1180986, "target": 1391264}, {"source": 1180986, "target": 1132132}, {"source": 1180986, "target": 940778}, {"source": 1180986, "target": 817163}, {"source": 1180986, "target": 885258}, {"source": 1180986, "target": 989005}, {"source": 1180986, "target": 1132138}, {"source": 1180986, "target": 817228}, {"source": 1180986, "target": 816977}, {"source": 1180986, "target": 1000050}, {"source": 1180986, "target": 940788}, {"source": 1180986, "target": 1179991}, {"source": 1180986, "target": 846968}, {"source": 1180986, "target": 1412282}, {"source": 1180986, "target": 817240}, {"source": 1180986, "target": 885244}, {"source": 817240, "target": 885248}, {"source": 817240, "target": 817154}, {"source": 817240, "target": 885252}, {"source": 817240, "target": 817160}, {"source": 817240, "target": 940809}, {"source": 817240, "target": 885258}, {"source": 817240, "target": 817163}, {"source": 817240, "target": 1092874}, {"source": 817240, "target": 817293}, {"source": 817240, "target": 1092880}, {"source": 817240, "target": 1133845}, {"source": 817240, "target": 817175}, {"source": 817240, "target": 817306}, {"source": 817240, "target": 1133854}, {"source": 817240, "target": 1391264}, {"source": 817240, "target": 987552}, {"source": 817240, "target": 817057}, {"source": 817240, "target": 1092901}, {"source": 817240, "target": 987559}, {"source": 817240, "target": 817063}, {"source": 817240, "target": 817147}, {"source": 817240, "target": 817324}, {"source": 817240, "target": 846893}, {"source": 817240, "target": 817199}, {"source": 817240, "target": 817206}, {"source": 817240, "target": 1180986}, {"source": 817240, "target": 1412282}, {"source": 817240, "target": 846915}, {"source": 817240, "target": 817091}, {"source": 817240, "target": 846917}, {"source": 817240, "target": 954950}, {"source": 817240, "target": 846919}, {"source": 817240, "target": 846918}, {"source": 817240, "target": 817228}, {"source": 817240, "target": 989005}, {"source": 817240, "target": 817101}, {"source": 817240, "target": 846928}, {"source": 817240, "target": 816977}, {"source": 817240, "target": 817106}, {"source": 817240, "target": 1092947}, {"source": 817240, "target": 816979}, {"source": 817240, "target": 885206}, {"source": 817240, "target": 1179991}, {"source": 817240, "target": 1092952}, {"source": 817240, "target": 885208}, {"source": 817240, "target": 940758}, {"source": 817240, "target": 940760}, {"source": 817240, "target": 885209}, {"source": 817240, "target": 885211}, {"source": 817240, "target": 817111}, {"source": 817240, "target": 817119}, {"source": 817240, "target": 1132132}, {"source": 817240, "target": 940773}, {"source": 817240, "target": 940778}, {"source": 817240, "target": 1132138}, {"source": 817240, "target": 1132139}, {"source": 817240, "target": 998636}, {"source": 817240, "target": 1133165}, {"source": 817240, "target": 1000050}, {"source": 817240, "target": 817139}, {"source": 817240, "target": 940788}, {"source": 817240, "target": 846964}, {"source": 817240, "target": 817270}, {"source": 817240, "target": 846965}, {"source": 817240, "target": 846968}, {"source": 817240, "target": 905846}, {"source": 817240, "target": 885242}, {"source": 817240, "target": 817014}, {"source": 817240, "target": 885244}, {"source": 817240, "target": 846973}, {"source": 817240, "target": 940798}, {"source": 817240, "target": 940799}, {"source": 885244, "target": 817154}, {"source": 885244, "target": 817160}, {"source": 885244, "target": 1092873}, {"source": 885244, "target": 885258}, {"source": 885244, "target": 817163}, {"source": 885244, "target": 940811}, {"source": 885244, "target": 1391264}, {"source": 885244, "target": 817058}, {"source": 885244, "target": 817458}, {"source": 885244, "target": 905908}, {"source": 885244, "target": 817206}, {"source": 885244, "target": 817208}, {"source": 885244, "target": 846905}, {"source": 885244, "target": 1180986}, {"source": 885244, "target": 1412282}, {"source": 885244, "target": 846919}, {"source": 885244, "target": 817228}, {"source": 885244, "target": 989005}, {"source": 885244, "target": 1092944}, {"source": 885244, "target": 816977}, {"source": 885244, "target": 817106}, {"source": 885244, "target": 1179991}, {"source": 885244, "target": 817240}, {"source": 885244, "target": 940761}, {"source": 885244, "target": 988643}, {"source": 885244, "target": 1132132}, {"source": 885244, "target": 940778}, {"source": 885244, "target": 1132138}, {"source": 885244, "target": 1000050}, {"source": 885244, "target": 940788}, {"source": 885244, "target": 817014}, {"source": 885244, "target": 846968}, {"source": 885244, "target": 885242}, {"source": 885244, "target": 885243}, {"source": 885244, "target": 817406}, {"source": 885244, "target": 940799}, {"source": 940769, "target": 817154}, {"source": 940769, "target": 885252}, {"source": 940769, "target": 1133830}, {"source": 940769, "target": 817034}, {"source": 940769, "target": 905866}, {"source": 940769, "target": 817293}, {"source": 940769, "target": 905877}, {"source": 940769, "target": 1178134}, {"source": 940769, "target": 987161}, {"source": 940769, "target": 1409308}, {"source": 940769, "target": 1092900}, {"source": 940769, "target": 817060}, {"source": 940769, "target": 987558}, {"source": 940769, "target": 817317}, {"source": 940769, "target": 987560}, {"source": 940769, "target": 987564}, {"source": 940769, "target": 846893}, {"source": 940769, "target": 817069}, {"source": 940769, "target": 1092915}, {"source": 940769, "target": 996152}, {"source": 940769, "target": 861639}, {"source": 940769, "target": 817354}, {"source": 940769, "target": 817237}, {"source": 940769, "target": 817238}, {"source": 940769, "target": 885207}, {"source": 940769, "target": 846936}, {"source": 940769, "target": 817121}, {"source": 940769, "target": 885222}, {"source": 940769, "target": 817126}, {"source": 940769, "target": 817258}, {"source": 940769, "target": 817014}, {"source": 940769, "target": 1396473}, {"source": 940769, "target": 817406}, {"source": 817121, "target": 885248}, {"source": 817121, "target": 817154}, {"source": 817121, "target": 885251}, {"source": 817121, "target": 885252}, {"source": 817121, "target": 885250}, {"source": 817121, "target": 885254}, {"source": 817121, "target": 817160}, {"source": 817121, "target": 817172}, {"source": 817121, "target": 1178134}, {"source": 817121, "target": 987161}, {"source": 817121, "target": 817181}, {"source": 817121, "target": 817204}, {"source": 817121, "target": 817205}, {"source": 817121, "target": 817206}, {"source": 817121, "target": 817208}, {"source": 817121, "target": 817229}, {"source": 817121, "target": 817237}, {"source": 817121, "target": 817238}, {"source": 817121, "target": 817239}, {"source": 817121, "target": 846936}, {"source": 817121, "target": 817244}, {"source": 817121, "target": 846946}, {"source": 817121, "target": 846949}, {"source": 817121, "target": 846950}, {"source": 817121, "target": 817258}, {"source": 817121, "target": 846963}, {"source": 817121, "target": 905844}, {"source": 817121, "target": 846964}, {"source": 817121, "target": 846965}, {"source": 817121, "target": 817270}, {"source": 817121, "target": 846971}, {"source": 817121, "target": 846972}, {"source": 817121, "target": 817280}, {"source": 817121, "target": 817287}, {"source": 817121, "target": 817293}, {"source": 817121, "target": 988301}, {"source": 817121, "target": 817296}, {"source": 817121, "target": 905364}, {"source": 817121, "target": 905877}, {"source": 817121, "target": 817307}, {"source": 817121, "target": 817332}, {"source": 817121, "target": 817354}, {"source": 817121, "target": 987343}, {"source": 817121, "target": 817361}, {"source": 817121, "target": 940758}, {"source": 817121, "target": 940769}, {"source": 817121, "target": 940777}, {"source": 817121, "target": 940778}, {"source": 817121, "target": 940785}, {"source": 817121, "target": 1396473}, {"source": 817121, "target": 940794}, {"source": 817121, "target": 855801}, {"source": 817121, "target": 940798}, {"source": 817121, "target": 1133822}, {"source": 817121, "target": 972549}, {"source": 817121, "target": 1133830}, {"source": 817121, "target": 1092872}, {"source": 817121, "target": 1092873}, {"source": 817121, "target": 817428}, {"source": 817121, "target": 1092887}, {"source": 817121, "target": 1409308}, {"source": 817121, "target": 1133853}, {"source": 817121, "target": 987933}, {"source": 817121, "target": 987934}, {"source": 817121, "target": 1092900}, {"source": 817121, "target": 940841}, {"source": 817121, "target": 816938}, {"source": 817121, "target": 1092906}, {"source": 817121, "target": 817458}, {"source": 817121, "target": 1092915}, {"source": 817121, "target": 996152}, {"source": 817121, "target": 1092924}, {"source": 817121, "target": 816958}, {"source": 817121, "target": 1092926}, {"source": 817121, "target": 988996}, {"source": 817121, "target": 1092943}, {"source": 817121, "target": 1133907}, {"source": 817121, "target": 1092951}, {"source": 817121, "target": 989030}, {"source": 817121, "target": 1133927}, {"source": 817121, "target": 1133934}, {"source": 817121, "target": 817014}, {"source": 817121, "target": 817020}, {"source": 817121, "target": 817049}, {"source": 817121, "target": 989085}, {"source": 817121, "target": 817054}, {"source": 817121, "target": 817058}, {"source": 817121, "target": 1133988}, {"source": 817121, "target": 987558}, {"source": 817121, "target": 987560}, {"source": 817121, "target": 987564}, {"source": 817121, "target": 817069}, {"source": 817121, "target": 817081}, {"source": 817121, "target": 1134024}, {"source": 817121, "target": 817101}, {"source": 817121, "target": 817106}, {"source": 817121, "target": 987102}, {"source": 817121, "target": 885215}, {"source": 817121, "target": 885222}, {"source": 817121, "target": 817133}, {"source": 817121, "target": 817141}, {"source": 885252, "target": 817154}, {"source": 885252, "target": 1092867}, {"source": 885252, "target": 885251}, {"source": 885252, "target": 1133830}, {"source": 885252, "target": 846983}, {"source": 885252, "target": 817034}, {"source": 885252, "target": 817293}, {"source": 885252, "target": 1136397}, {"source": 885252, "target": 817038}, {"source": 885252, "target": 940814}, {"source": 885252, "target": 905877}, {"source": 885252, "target": 1178134}, {"source": 885252, "target": 817175}, {"source": 885252, "target": 817047}, {"source": 885252, "target": 987161}, {"source": 885252, "target": 1409308}, {"source": 885252, "target": 1092900}, {"source": 885252, "target": 987560}, {"source": 885252, "target": 987564}, {"source": 885252, "target": 817324}, {"source": 885252, "target": 817199}, {"source": 885252, "target": 1092915}, {"source": 885252, "target": 996152}, {"source": 885252, "target": 905919}, {"source": 885252, "target": 988994}, {"source": 885252, "target": 846915}, {"source": 885252, "target": 817091}, {"source": 885252, "target": 988996}, {"source": 885252, "target": 846918}, {"source": 885252, "target": 817351}, {"source": 885252, "target": 861512}, {"source": 885252, "target": 846917}, {"source": 885252, "target": 817354}, {"source": 885252, "target": 817101}, {"source": 885252, "target": 817106}, {"source": 885252, "target": 816979}, {"source": 885252, "target": 817237}, {"source": 885252, "target": 817238}, {"source": 885252, "target": 885207}, {"source": 885252, "target": 846936}, {"source": 885252, "target": 940760}, {"source": 885252, "target": 817111}, {"source": 885252, "target": 987611}, {"source": 885252, "target": 885209}, {"source": 885252, "target": 816989}, {"source": 885252, "target": 817240}, {"source": 885252, "target": 1178591}, {"source": 885252, "target": 885216}, {"source": 885252, "target": 940769}, {"source": 885252, "target": 817121}, {"source": 885252, "target": 846946}, {"source": 885252, "target": 885211}, {"source": 885252, "target": 816997}, {"source": 885252, "target": 885222}, {"source": 885252, "target": 817126}, {"source": 885252, "target": 817139}, {"source": 885252, "target": 817014}, {"source": 885252, "target": 1396473}, {"source": 885252, "target": 817147}, {"source": 1092900, "target": 885252}, {"source": 1092900, "target": 1133830}, {"source": 1092900, "target": 817293}, {"source": 1092900, "target": 905877}, {"source": 1092900, "target": 1178134}, {"source": 1092900, "target": 987161}, {"source": 1092900, "target": 1409308}, {"source": 1092900, "target": 817060}, {"source": 1092900, "target": 987558}, {"source": 1092900, "target": 987560}, {"source": 1092900, "target": 987564}, {"source": 1092900, "target": 846893}, {"source": 1092900, "target": 817069}, {"source": 1092900, "target": 1092915}, {"source": 1092900, "target": 996152}, {"source": 1092900, "target": 861639}, {"source": 1092900, "target": 817354}, {"source": 1092900, "target": 817237}, {"source": 1092900, "target": 817238}, {"source": 1092900, "target": 885207}, {"source": 1092900, "target": 846936}, {"source": 1092900, "target": 940769}, {"source": 1092900, "target": 817121}, {"source": 1092900, "target": 885222}, {"source": 1092900, "target": 817258}, {"source": 1092900, "target": 1396473}, {"source": 1133830, "target": 885252}, {"source": 1133830, "target": 817293}, {"source": 1133830, "target": 905877}, {"source": 1133830, "target": 1178134}, {"source": 1133830, "target": 987161}, {"source": 1133830, "target": 1409308}, {"source": 1133830, "target": 1092900}, {"source": 1133830, "target": 987560}, {"source": 1133830, "target": 987564}, {"source": 1133830, "target": 846893}, {"source": 1133830, "target": 1092915}, {"source": 1133830, "target": 996152}, {"source": 1133830, "target": 861639}, {"source": 1133830, "target": 817354}, {"source": 1133830, "target": 817237}, {"source": 1133830, "target": 817238}, {"source": 1133830, "target": 885207}, {"source": 1133830, "target": 846936}, {"source": 1133830, "target": 940769}, {"source": 1133830, "target": 817121}, {"source": 1133830, "target": 885222}, {"source": 1133830, "target": 1396473}, {"source": 885222, "target": 885252}, {"source": 885222, "target": 940805}, {"source": 885222, "target": 1133830}, {"source": 885222, "target": 817293}, {"source": 885222, "target": 905877}, {"source": 885222, "target": 1178134}, {"source": 885222, "target": 987161}, {"source": 885222, "target": 817177}, {"source": 885222, "target": 1409308}, {"source": 885222, "target": 1092900}, {"source": 885222, "target": 817060}, {"source": 885222, "target": 987558}, {"source": 885222, "target": 987560}, {"source": 885222, "target": 817065}, {"source": 885222, "target": 987564}, {"source": 885222, "target": 846893}, {"source": 885222, "target": 817069}, {"source": 885222, "target": 817074}, {"source": 885222, "target": 1092915}, {"source": 885222, "target": 817205}, {"source": 885222, "target": 817463}, {"source": 885222, "target": 996152}, {"source": 885222, "target": 988994}, {"source": 885222, "target": 861639}, {"source": 885222, "target": 817354}, {"source": 885222, "target": 817357}, {"source": 885222, "target": 989006}, {"source": 885222, "target": 817236}, {"source": 885222, "target": 817237}, {"source": 885222, "target": 817238}, {"source": 885222, "target": 885207}, {"source": 885222, "target": 846936}, {"source": 885222, "target": 885215}, {"source": 885222, "target": 940768}, {"source": 885222, "target": 940769}, {"source": 885222, "target": 817121}, {"source": 885222, "target": 816997}, {"source": 885222, "target": 817126}, {"source": 885222, "target": 817258}, {"source": 885222, "target": 817140}, {"source": 885222, "target": 1396473}, {"source": 885222, "target": 940798}, {"source": 987560, "target": 885252}, {"source": 987560, "target": 1133830}, {"source": 987560, "target": 817293}, {"source": 987560, "target": 905877}, {"source": 987560, "target": 1178134}, {"source": 987560, "target": 987161}, {"source": 987560, "target": 1409308}, {"source": 987560, "target": 1092900}, {"source": 987560, "target": 817060}, {"source": 987560, "target": 987558}, {"source": 987560, "target": 987564}, {"source": 987560, "target": 846893}, {"source": 987560, "target": 817069}, {"source": 987560, "target": 1092915}, {"source": 987560, "target": 996152}, {"source": 987560, "target": 861639}, {"source": 987560, "target": 817354}, {"source": 987560, "target": 817237}, {"source": 987560, "target": 817238}, {"source": 987560, "target": 885207}, {"source": 987560, "target": 846936}, {"source": 987560, "target": 940769}, {"source": 987560, "target": 817121}, {"source": 987560, "target": 885222}, {"source": 987560, "target": 817258}, {"source": 987560, "target": 1396473}, {"source": 987560, "target": 817406}, {"source": 817354, "target": 817154}, {"source": 817354, "target": 885251}, {"source": 817354, "target": 885252}, {"source": 817354, "target": 817160}, {"source": 817354, "target": 1178134}, {"source": 817354, "target": 817175}, {"source": 817354, "target": 987161}, {"source": 817354, "target": 817191}, {"source": 817354, "target": 823344}, {"source": 817354, "target": 817204}, {"source": 817354, "target": 817208}, {"source": 817354, "target": 846905}, {"source": 817354, "target": 817218}, {"source": 817354, "target": 846915}, {"source": 817354, "target": 846918}, {"source": 817354, "target": 846931}, {"source": 817354, "target": 817237}, {"source": 817354, "target": 817238}, {"source": 817354, "target": 846933}, {"source": 817354, "target": 846936}, {"source": 817354, "target": 846946}, {"source": 817354, "target": 846947}, {"source": 817354, "target": 905846}, {"source": 817354, "target": 846968}, {"source": 817354, "target": 817287}, {"source": 817354, "target": 817293}, {"source": 817354, "target": 988301}, {"source": 817354, "target": 988302}, {"source": 817354, "target": 817296}, {"source": 817354, "target": 905877}, {"source": 817354, "target": 817307}, {"source": 817354, "target": 1391264}, {"source": 817354, "target": 817315}, {"source": 817354, "target": 817317}, {"source": 817354, "target": 905919}, {"source": 817354, "target": 817351}, {"source": 817354, "target": 989900}, {"source": 817354, "target": 817357}, {"source": 817354, "target": 940760}, {"source": 817354, "target": 987872}, {"source": 817354, "target": 940769}, {"source": 817354, "target": 940774}, {"source": 817354, "target": 940779}, {"source": 817354, "target": 1396473}, {"source": 817354, "target": 940794}, {"source": 817354, "target": 940798}, {"source": 817354, "target": 817406}, {"source": 817354, "target": 940801}, {"source": 817354, "target": 817410}, {"source": 817354, "target": 1133830}, {"source": 817354, "target": 817414}, {"source": 817354, "target": 972550}, {"source": 817354, "target": 940807}, {"source": 817354, "target": 940812}, {"source": 817354, "target": 940814}, {"source": 817354, "target": 817429}, {"source": 817354, "target": 1409308}, {"source": 817354, "target": 987933}, {"source": 817354, "target": 1092897}, {"source": 817354, "target": 817442}, {"source": 817354, "target": 1092900}, {"source": 817354, "target": 940841}, {"source": 817354, "target": 816938}, {"source": 817354, "target": 958769}, {"source": 817354, "target": 951089}, {"source": 817354, "target": 1092915}, {"source": 817354, "target": 817463}, {"source": 817354, "target": 996152}, {"source": 817354, "target": 1092929}, {"source": 817354, "target": 1092930}, {"source": 817354, "target": 988996}, {"source": 817354, "target": 1092944}, {"source": 817354, "target": 1133916}, {"source": 817354, "target": 1133920}, {"source": 817354, "target": 989030}, {"source": 817354, "target": 817000}, {"source": 817354, "target": 817014}, {"source": 817354, "target": 817017}, {"source": 817354, "target": 817047}, {"source": 817354, "target": 817063}, {"source": 817354, "target": 987560}, {"source": 817354, "target": 987564}, {"source": 817354, "target": 817091}, {"source": 817354, "target": 861639}, {"source": 817354, "target": 817101}, {"source": 817354, "target": 885207}, {"source": 817354, "target": 817111}, {"source": 817354, "target": 885216}, {"source": 817354, "target": 817121}, {"source": 817354, "target": 885222}, {"source": 817354, "target": 817147}, {"source": 987564, "target": 885252}, {"source": 987564, "target": 1133830}, {"source": 987564, "target": 817034}, {"source": 987564, "target": 905866}, {"source": 987564, "target": 817293}, {"source": 987564, "target": 905877}, {"source": 987564, "target": 1178134}, {"source": 987564, "target": 987161}, {"source": 987564, "target": 1409308}, {"source": 987564, "target": 1092900}, {"source": 987564, "target": 817060}, {"source": 987564, "target": 987558}, {"source": 987564, "target": 817317}, {"source": 987564, "target": 987560}, {"source": 987564, "target": 846893}, {"source": 987564, "target": 817069}, {"source": 987564, "target": 1092915}, {"source": 987564, "target": 996152}, {"source": 987564, "target": 861639}, {"source": 987564, "target": 817354}, {"source": 987564, "target": 817237}, {"source": 987564, "target": 817238}, {"source": 987564, "target": 885207}, {"source": 987564, "target": 846936}, {"source": 987564, "target": 940769}, {"source": 987564, "target": 817121}, {"source": 987564, "target": 885222}, {"source": 987564, "target": 817258}, {"source": 987564, "target": 1396473}, {"source": 987564, "target": 817406}, {"source": 817293, "target": 817154}, {"source": 817293, "target": 885251}, {"source": 817293, "target": 885252}, {"source": 817293, "target": 940804}, {"source": 817293, "target": 1133830}, {"source": 817293, "target": 972549}, {"source": 817293, "target": 817240}, {"source": 817293, "target": 817165}, {"source": 817293, "target": 817038}, {"source": 817293, "target": 940814}, {"source": 817293, "target": 817428}, {"source": 817293, "target": 905877}, {"source": 817293, "target": 1178134}, {"source": 817293, "target": 817175}, {"source": 817293, "target": 817047}, {"source": 817293, "target": 987161}, {"source": 817293, "target": 817049}, {"source": 817293, "target": 1409308}, {"source": 817293, "target": 817437}, {"source": 817293, "target": 989085}, {"source": 817293, "target": 1134112}, {"source": 817293, "target": 1134115}, {"source": 817293, "target": 1092900}, {"source": 817293, "target": 1134118}, {"source": 817293, "target": 987560}, {"source": 817293, "target": 817065}, {"source": 817293, "target": 987564}, {"source": 817293, "target": 846893}, {"source": 817293, "target": 855982}, {"source": 817293, "target": 817330}, {"source": 817293, "target": 1092915}, {"source": 817293, "target": 996152}, {"source": 817293, "target": 817081}, {"source": 817293, "target": 905919}, {"source": 817293, "target": 817091}, {"source": 817293, "target": 988996}, {"source": 817293, "target": 817351}, {"source": 817293, "target": 817354}, {"source": 817293, "target": 817228}, {"source": 817293, "target": 905681}, {"source": 817293, "target": 816979}, {"source": 817293, "target": 817237}, {"source": 817293, "target": 817238}, {"source": 817293, "target": 885207}, {"source": 817293, "target": 846936}, {"source": 817293, "target": 885209}, {"source": 817293, "target": 816985}, {"source": 817293, "target": 913627}, {"source": 817293, "target": 940759}, {"source": 817293, "target": 817111}, {"source": 817293, "target": 885214}, {"source": 817293, "target": 885215}, {"source": 817293, "target": 885216}, {"source": 817293, "target": 940769}, {"source": 817293, "target": 817121}, {"source": 817293, "target": 989026}, {"source": 817293, "target": 817376}, {"source": 817293, "target": 846949}, {"source": 817293, "target": 885222}, {"source": 817293, "target": 846950}, {"source": 817293, "target": 846946}, {"source": 817293, "target": 940777}, {"source": 817293, "target": 816997}, {"source": 817293, "target": 817126}, {"source": 817293, "target": 817136}, {"source": 817293, "target": 988788}, {"source": 817293, "target": 940789}, {"source": 817293, "target": 846965}, {"source": 817293, "target": 817141}, {"source": 817293, "target": 817014}, {"source": 817293, "target": 1396473}, {"source": 817293, "target": 817147}, {"source": 817293, "target": 817020}, {"source": 1092915, "target": 885252}, {"source": 1092915, "target": 1133830}, {"source": 1092915, "target": 817293}, {"source": 1092915, "target": 905877}, {"source": 1092915, "target": 1178134}, {"source": 1092915, "target": 987161}, {"source": 1092915, "target": 1409308}, {"source": 1092915, "target": 1092900}, {"source": 1092915, "target": 817060}, {"source": 1092915, "target": 987558}, {"source": 1092915, "target": 987560}, {"source": 1092915, "target": 987564}, {"source": 1092915, "target": 846893}, {"source": 1092915, "target": 817069}, {"source": 1092915, "target": 996152}, {"source": 1092915, "target": 861639}, {"source": 1092915, "target": 817354}, {"source": 1092915, "target": 817237}, {"source": 1092915, "target": 817238}, {"source": 1092915, "target": 885207}, {"source": 1092915, "target": 846936}, {"source": 1092915, "target": 940769}, {"source": 1092915, "target": 817121}, {"source": 1092915, "target": 885222}, {"source": 1092915, "target": 817258}, {"source": 1092915, "target": 1396473}, {"source": 905877, "target": 817154}, {"source": 905877, "target": 817410}, {"source": 905877, "target": 885252}, {"source": 905877, "target": 1133830}, {"source": 905877, "target": 817034}, {"source": 905877, "target": 905866}, {"source": 905877, "target": 817293}, {"source": 905877, "target": 1178134}, {"source": 905877, "target": 817047}, {"source": 905877, "target": 987161}, {"source": 905877, "target": 817177}, {"source": 905877, "target": 817017}, {"source": 905877, "target": 1409308}, {"source": 905877, "target": 817181}, {"source": 905877, "target": 817442}, {"source": 905877, "target": 1092900}, {"source": 905877, "target": 817060}, {"source": 905877, "target": 987558}, {"source": 905877, "target": 817317}, {"source": 905877, "target": 987560}, {"source": 905877, "target": 817063}, {"source": 905877, "target": 987564}, {"source": 905877, "target": 846893}, {"source": 905877, "target": 817069}, {"source": 905877, "target": 1092915}, {"source": 905877, "target": 817204}, {"source": 905877, "target": 996152}, {"source": 905877, "target": 817218}, {"source": 905877, "target": 861639}, {"source": 905877, "target": 817351}, {"source": 905877, "target": 817354}, {"source": 905877, "target": 817237}, {"source": 905877, "target": 817238}, {"source": 905877, "target": 885207}, {"source": 905877, "target": 846936}, {"source": 905877, "target": 817109}, {"source": 905877, "target": 846933}, {"source": 905877, "target": 940769}, {"source": 905877, "target": 817121}, {"source": 905877, "target": 885222}, {"source": 905877, "target": 817126}, {"source": 905877, "target": 817258}, {"source": 905877, "target": 817014}, {"source": 905877, "target": 1396473}, {"source": 905877, "target": 817406}, {"source": 1178134, "target": 940769}, {"source": 1178134, "target": 817121}, {"source": 1178134, "target": 885252}, {"source": 1178134, "target": 1092900}, {"source": 1178134, "target": 1133830}, {"source": 1178134, "target": 885222}, {"source": 1178134, "target": 987560}, {"source": 1178134, "target": 817354}, {"source": 1178134, "target": 987564}, {"source": 1178134, "target": 817293}, {"source": 1178134, "target": 1092915}, {"source": 1178134, "target": 905877}, {"source": 1178134, "target": 817237}, {"source": 1178134, "target": 846936}, {"source": 1178134, "target": 1396473}, {"source": 1178134, "target": 1409308}, {"source": 1178134, "target": 987161}, {"source": 1396473, "target": 940769}, {"source": 1396473, "target": 817121}, {"source": 1396473, "target": 885252}, {"source": 1396473, "target": 1092900}, {"source": 1396473, "target": 1133830}, {"source": 1396473, "target": 885222}, {"source": 1396473, "target": 987560}, {"source": 1396473, "target": 817354}, {"source": 1396473, "target": 987564}, {"source": 1396473, "target": 817293}, {"source": 1396473, "target": 1092915}, {"source": 1396473, "target": 905877}, {"source": 1396473, "target": 1178134}, {"source": 1396473, "target": 817237}, {"source": 1396473, "target": 846936}, {"source": 1396473, "target": 987161}, {"source": 1396473, "target": 1409308}, {"source": 846936, "target": 885252}, {"source": 846936, "target": 817412}, {"source": 846936, "target": 1133830}, {"source": 846936, "target": 817414}, {"source": 846936, "target": 817160}, {"source": 846936, "target": 846983}, {"source": 846936, "target": 940805}, {"source": 846936, "target": 817293}, {"source": 846936, "target": 817428}, {"source": 846936, "target": 905877}, {"source": 846936, "target": 1178134}, {"source": 846936, "target": 817429}, {"source": 846936, "target": 1092887}, {"source": 846936, "target": 987161}, {"source": 846936, "target": 817305}, {"source": 846936, "target": 817177}, {"source": 846936, "target": 1409308}, {"source": 846936, "target": 1092900}, {"source": 846936, "target": 987560}, {"source": 846936, "target": 817065}, {"source": 846936, "target": 987564}, {"source": 846936, "target": 846893}, {"source": 846936, "target": 817455}, {"source": 846936, "target": 823344}, {"source": 846936, "target": 958769}, {"source": 846936, "target": 817074}, {"source": 846936, "target": 1092915}, {"source": 846936, "target": 817205}, {"source": 846936, "target": 817463}, {"source": 846936, "target": 996152}, {"source": 846936, "target": 1092924}, {"source": 846936, "target": 988994}, {"source": 846936, "target": 817354}, {"source": 846936, "target": 989900}, {"source": 846936, "target": 817357}, {"source": 846936, "target": 989006}, {"source": 846936, "target": 846931}, {"source": 846936, "target": 817236}, {"source": 846936, "target": 817237}, {"source": 846936, "target": 817238}, {"source": 846936, "target": 885207}, {"source": 846936, "target": 817115}, {"source": 846936, "target": 1133916}, {"source": 846936, "target": 885215}, {"source": 846936, "target": 1133920}, {"source": 846936, "target": 940769}, {"source": 846936, "target": 817121}, {"source": 846936, "target": 940768}, {"source": 846936, "target": 816997}, {"source": 846936, "target": 885222}, {"source": 846936, "target": 817126}, {"source": 846936, "target": 817256}, {"source": 846936, "target": 885229}, {"source": 846936, "target": 817140}, {"source": 846936, "target": 940789}, {"source": 846936, "target": 905846}, {"source": 846936, "target": 846968}, {"source": 846936, "target": 1396473}, {"source": 846936, "target": 940798}, {"source": 987161, "target": 885252}, {"source": 987161, "target": 1133830}, {"source": 987161, "target": 817034}, {"source": 987161, "target": 905866}, {"source": 987161, "target": 817293}, {"source": 987161, "target": 905877}, {"source": 987161, "target": 1178134}, {"source": 987161, "target": 1409308}, {"source": 987161, "target": 1092900}, {"source": 987161, "target": 817060}, {"source": 987161, "target": 987558}, {"source": 987161, "target": 817317}, {"source": 987161, "target": 987560}, {"source": 987161, "target": 987564}, {"source": 987161, "target": 846893}, {"source": 987161, "target": 817069}, {"source": 987161, "target": 1092915}, {"source": 987161, "target": 996152}, {"source": 987161, "target": 861639}, {"source": 987161, "target": 817354}, {"source": 987161, "target": 817237}, {"source": 987161, "target": 817238}, {"source": 987161, "target": 885207}, {"source": 987161, "target": 846936}, {"source": 987161, "target": 940769}, {"source": 987161, "target": 817121}, {"source": 987161, "target": 885222}, {"source": 987161, "target": 817258}, {"source": 987161, "target": 1396473}, {"source": 987161, "target": 817406}, {"source": 817237, "target": 817154}, {"source": 817237, "target": 885252}, {"source": 817237, "target": 817159}, {"source": 817237, "target": 817160}, {"source": 817237, "target": 1178134}, {"source": 817237, "target": 987161}, {"source": 817237, "target": 1134115}, {"source": 817237, "target": 1181231}, {"source": 817237, "target": 817218}, {"source": 817237, "target": 817228}, {"source": 817237, "target": 817230}, {"source": 817237, "target": 817232}, {"source": 817237, "target": 817236}, {"source": 817237, "target": 846933}, {"source": 817237, "target": 817238}, {"source": 817237, "target": 1132119}, {"source": 817237, "target": 846936}, {"source": 817237, "target": 817249}, {"source": 817237, "target": 817256}, {"source": 817237, "target": 817265}, {"source": 817237, "target": 846963}, {"source": 817237, "target": 988788}, {"source": 817237, "target": 846965}, {"source": 817237, "target": 817280}, {"source": 817237, "target": 817293}, {"source": 817237, "target": 817296}, {"source": 817237, "target": 905877}, {"source": 817237, "target": 817317}, {"source": 817237, "target": 817324}, {"source": 817237, "target": 817328}, {"source": 817237, "target": 817329}, {"source": 817237, "target": 817330}, {"source": 817237, "target": 817344}, {"source": 817237, "target": 817351}, {"source": 817237, "target": 817352}, {"source": 817237, "target": 817354}, {"source": 817237, "target": 940759}, {"source": 817237, "target": 913627}, {"source": 817237, "target": 817376}, {"source": 817237, "target": 940769}, {"source": 817237, "target": 1396473}, {"source": 817237, "target": 940799}, {"source": 817237, "target": 940800}, {"source": 817237, "target": 1092865}, {"source": 817237, "target": 940804}, {"source": 817237, "target": 1133830}, {"source": 817237, "target": 940810}, {"source": 817237, "target": 817422}, {"source": 817237, "target": 817428}, {"source": 817237, "target": 1409308}, {"source": 817237, "target": 817437}, {"source": 817237, "target": 1092900}, {"source": 817237, "target": 1092915}, {"source": 817237, "target": 996152}, {"source": 817237, "target": 816960}, {"source": 817237, "target": 816961}, {"source": 817237, "target": 816979}, {"source": 817237, "target": 1092949}, {"source": 817237, "target": 816981}, {"source": 817237, "target": 989015}, {"source": 817237, "target": 816985}, {"source": 817237, "target": 989026}, {"source": 817237, "target": 989029}, {"source": 817237, "target": 817017}, {"source": 817237, "target": 817020}, {"source": 817237, "target": 817025}, {"source": 817237, "target": 817039}, {"source": 817237, "target": 817054}, {"source": 817237, "target": 987558}, {"source": 817237, "target": 987560}, {"source": 817237, "target": 817065}, {"source": 817237, "target": 987564}, {"source": 817237, "target": 817068}, {"source": 817237, "target": 855982}, {"source": 817237, "target": 1134017}, {"source": 817237, "target": 905681}, {"source": 817237, "target": 817109}, {"source": 817237, "target": 885207}, {"source": 817237, "target": 987099}, {"source": 817237, "target": 817115}, {"source": 817237, "target": 987103}, {"source": 817237, "target": 885215}, {"source": 817237, "target": 817121}, {"source": 817237, "target": 885216}, {"source": 817237, "target": 885222}, {"source": 817237, "target": 905191}, {"source": 817237, "target": 885228}, {"source": 817237, "target": 817136}, {"source": 817237, "target": 817139}, {"source": 817237, "target": 885237}, {"source": 1409308, "target": 1133825}, {"source": 1409308, "target": 817154}, {"source": 1409308, "target": 885252}, {"source": 1409308, "target": 817412}, {"source": 1409308, "target": 1133830}, {"source": 1409308, "target": 972550}, {"source": 1409308, "target": 817287}, {"source": 1409308, "target": 817159}, {"source": 1409308, "target": 993675}, {"source": 1409308, "target": 817293}, {"source": 1409308, "target": 988301}, {"source": 1409308, "target": 940814}, {"source": 1409308, "target": 817039}, {"source": 1409308, "target": 905877}, {"source": 1409308, "target": 1178134}, {"source": 1409308, "target": 1133847}, {"source": 1409308, "target": 987161}, {"source": 1409308, "target": 1391264}, {"source": 1409308, "target": 957474}, {"source": 1409308, "target": 1092900}, {"source": 1409308, "target": 987560}, {"source": 1409308, "target": 940841}, {"source": 1409308, "target": 987564}, {"source": 1409308, "target": 817329}, {"source": 1409308, "target": 1092915}, {"source": 1409308, "target": 1134004}, {"source": 1409308, "target": 996152}, {"source": 1409308, "target": 816960}, {"source": 1409308, "target": 816961}, {"source": 1409308, "target": 817091}, {"source": 1409308, "target": 988996}, {"source": 1409308, "target": 817354}, {"source": 1409308, "target": 816970}, {"source": 1409308, "target": 817230}, {"source": 1409308, "target": 1092943}, {"source": 1409308, "target": 1181394}, {"source": 1409308, "target": 817236}, {"source": 1409308, "target": 817237}, {"source": 1409308, "target": 817238}, {"source": 1409308, "target": 1092950}, {"source": 1409308, "target": 846936}, {"source": 1409308, "target": 940769}, {"source": 1409308, "target": 817121}, {"source": 1409308, "target": 1133924}, {"source": 1409308, "target": 885222}, {"source": 1409308, "target": 989030}, {"source": 1409308, "target": 1133158}, {"source": 1409308, "target": 903020}, {"source": 1409308, "target": 817265}, {"source": 1409308, "target": 1133812}, {"source": 1409308, "target": 905846}, {"source": 1409308, "target": 1133815}, {"source": 1409308, "target": 1396473}, {"source": 1409308, "target": 940794}, {"source": 1409308, "target": 885243}, {"source": 1409308, "target": 1182205}, {"source": 1409308, "target": 940799}, {"source": 1121280, "target": 817017}, {"source": 1121280, "target": 885218}, {"source": 1121280, "target": 988643}, {"source": 1121280, "target": 945092}, {"source": 1121280, "target": 972549}, {"source": 1121280, "target": 990763}, {"source": 1121280, "target": 958896}, {"source": 1121280, "target": 990002}, {"source": 1121280, "target": 1132146}, {"source": 1121280, "target": 988789}, {"source": 1121280, "target": 1084054}, {"source": 1121280, "target": 817238}, {"source": 1121280, "target": 817464}, {"source": 1121280, "target": 817305}, {"source": 1121280, "target": 817239}, {"source": 1121280, "target": 1180021}, {"source": 1121280, "target": 817144}, {"source": 1121280, "target": 1178047}, {"source": 972549, "target": 1121280}, {"source": 972549, "target": 817280}, {"source": 972549, "target": 817412}, {"source": 972549, "target": 817287}, {"source": 972549, "target": 817293}, {"source": 972549, "target": 817165}, {"source": 972549, "target": 1084054}, {"source": 972549, "target": 989078}, {"source": 972549, "target": 817305}, {"source": 972549, "target": 817049}, {"source": 972549, "target": 989085}, {"source": 972549, "target": 817058}, {"source": 972549, "target": 1092906}, {"source": 972549, "target": 990763}, {"source": 972549, "target": 817069}, {"source": 972549, "target": 958896}, {"source": 972549, "target": 823344}, {"source": 972549, "target": 990002}, {"source": 972549, "target": 817464}, {"source": 972549, "target": 817081}, {"source": 972549, "target": 1092926}, {"source": 972549, "target": 1178047}, {"source": 972549, "target": 945092}, {"source": 972549, "target": 1092943}, {"source": 972549, "target": 1133907}, {"source": 972549, "target": 817238}, {"source": 972549, "target": 817239}, {"source": 972549, "target": 1092954}, {"source": 972549, "target": 817244}, {"source": 972549, "target": 940768}, {"source": 972549, "target": 817121}, {"source": 972549, "target": 885218}, {"source": 972549, "target": 988643}, {"source": 972549, "target": 846946}, {"source": 972549, "target": 846949}, {"source": 972549, "target": 846950}, {"source": 972549, "target": 1133927}, {"source": 972549, "target": 940777}, {"source": 972549, "target": 817133}, {"source": 972549, "target": 1132146}, {"source": 972549, "target": 988789}, {"source": 972549, "target": 1180021}, {"source": 972549, "target": 817141}, {"source": 972549, "target": 817144}, {"source": 972549, "target": 817017}, {"source": 972549, "target": 817014}, {"source": 972549, "target": 885237}, {"source": 1084054, "target": 1121280}, {"source": 1084054, "target": 817280}, {"source": 1084054, "target": 817412}, {"source": 1084054, "target": 972549}, {"source": 1084054, "target": 817305}, {"source": 1084054, "target": 817058}, {"source": 1084054, "target": 990763}, {"source": 1084054, "target": 958896}, {"source": 1084054, "target": 990002}, {"source": 1084054, "target": 817464}, {"source": 1084054, "target": 1178047}, {"source": 1084054, "target": 945092}, {"source": 1084054, "target": 817238}, {"source": 1084054, "target": 817239}, {"source": 1084054, "target": 885218}, {"source": 1084054, "target": 988643}, {"source": 1084054, "target": 1132146}, {"source": 1084054, "target": 988789}, {"source": 1084054, "target": 1180021}, {"source": 1084054, "target": 817144}, {"source": 1084054, "target": 817017}, {"source": 817305, "target": 1121280}, {"source": 817305, "target": 817280}, {"source": 817305, "target": 817412}, {"source": 817305, "target": 972549}, {"source": 817305, "target": 817414}, {"source": 817305, "target": 846983}, {"source": 817305, "target": 817160}, {"source": 817305, "target": 817423}, {"source": 817305, "target": 817428}, {"source": 817305, "target": 817173}, {"source": 817305, "target": 1084054}, {"source": 817305, "target": 1092887}, {"source": 817305, "target": 817429}, {"source": 817305, "target": 817049}, {"source": 817305, "target": 817306}, {"source": 817305, "target": 817437}, {"source": 817305, "target": 1391264}, {"source": 817305, "target": 817058}, {"source": 817305, "target": 817317}, {"source": 817305, "target": 987558}, {"source": 817305, "target": 816938}, {"source": 817305, "target": 990763}, {"source": 817305, "target": 817068}, {"source": 817305, "target": 817455}, {"source": 817305, "target": 958896}, {"source": 817305, "target": 823344}, {"source": 817305, "target": 990002}, {"source": 817305, "target": 958769}, {"source": 817305, "target": 817206}, {"source": 817305, "target": 817463}, {"source": 817305, "target": 817464}, {"source": 817305, "target": 1092924}, {"source": 817305, "target": 846968}, {"source": 817305, "target": 1178047}, {"source": 817305, "target": 945092}, {"source": 817305, "target": 817094}, {"source": 817305, "target": 816970}, {"source": 817305, "target": 846931}, {"source": 817305, "target": 817108}, {"source": 817305, "target": 817109}, {"source": 817305, "target": 817238}, {"source": 817305, "target": 817239}, {"source": 817305, "target": 1092951}, {"source": 817305, "target": 846936}, {"source": 817305, "target": 817114}, {"source": 817305, "target": 817115}, {"source": 817305, "target": 987611}, {"source": 817305, "target": 817119}, {"source": 817305, "target": 817249}, {"source": 817305, "target": 885218}, {"source": 817305, "target": 988643}, {"source": 817305, "target": 956516}, {"source": 817305, "target": 816997}, {"source": 817305, "target": 846946}, {"source": 817305, "target": 817256}, {"source": 817305, "target": 817133}, {"source": 817305, "target": 885229}, {"source": 817305, "target": 1132146}, {"source": 817305, "target": 988789}, {"source": 817305, "target": 1180021}, {"source": 817305, "target": 885239}, {"source": 817305, "target": 817144}, {"source": 817305, "target": 817017}, {"source": 817305, "target": 940789}, {"source": 817305, "target": 817141}, {"source": 817305, "target": 1092863}, {"source": 990763, "target": 1121280}, {"source": 990763, "target": 817280}, {"source": 990763, "target": 817412}, {"source": 990763, "target": 972549}, {"source": 990763, "target": 1092868}, {"source": 990763, "target": 905866}, {"source": 990763, "target": 885258}, {"source": 990763, "target": 1084054}, {"source": 990763, "target": 817305}, {"source": 990763, "target": 817307}, {"source": 990763, "target": 1391264}, {"source": 990763, "target": 817058}, {"source": 990763, "target": 1092907}, {"source": 990763, "target": 817324}, {"source": 990763, "target": 958896}, {"source": 990763, "target": 990002}, {"source": 990763, "target": 940793}, {"source": 990763, "target": 817464}, {"source": 990763, "target": 1178047}, {"source": 990763, "target": 945092}, {"source": 990763, "target": 1134020}, {"source": 990763, "target": 817353}, {"source": 990763, "target": 989009}, {"source": 990763, "target": 816981}, {"source": 990763, "target": 817238}, {"source": 990763, "target": 817239}, {"source": 990763, "target": 1133782}, {"source": 990763, "target": 989016}, {"source": 990763, "target": 1133786}, {"source": 990763, "target": 987613}, {"source": 990763, "target": 816990}, {"source": 990763, "target": 817376}, {"source": 990763, "target": 885218}, {"source": 990763, "target": 988643}, {"source": 990763, "target": 1132146}, {"source": 990763, "target": 988789}, {"source": 990763, "target": 1180021}, {"source": 990763, "target": 885239}, {"source": 990763, "target": 817144}, {"source": 990763, "target": 817017}, {"source": 990763, "target": 817147}, {"source": 958896, "target": 1121280}, {"source": 958896, "target": 817280}, {"source": 958896, "target": 817412}, {"source": 958896, "target": 972549}, {"source": 958896, "target": 817173}, {"source": 958896, "target": 1084054}, {"source": 958896, "target": 817047}, {"source": 958896, "target": 817305}, {"source": 958896, "target": 817306}, {"source": 958896, "target": 1391264}, {"source": 958896, "target": 817058}, {"source": 958896, "target": 817191}, {"source": 958896, "target": 990763}, {"source": 958896, "target": 817068}, {"source": 958896, "target": 817453}, {"source": 958896, "target": 855985}, {"source": 958896, "target": 990002}, {"source": 958896, "target": 817464}, {"source": 958896, "target": 1178047}, {"source": 958896, "target": 945092}, {"source": 958896, "target": 817230}, {"source": 958896, "target": 817238}, {"source": 958896, "target": 817239}, {"source": 958896, "target": 885218}, {"source": 958896, "target": 988643}, {"source": 958896, "target": 956516}, {"source": 958896, "target": 1132146}, {"source": 958896, "target": 988789}, {"source": 958896, "target": 1180021}, {"source": 958896, "target": 885239}, {"source": 958896, "target": 817144}, {"source": 958896, "target": 817017}, {"source": 958896, "target": 1092863}, {"source": 990002, "target": 1121280}, {"source": 990002, "target": 817280}, {"source": 990002, "target": 940800}, {"source": 990002, "target": 817412}, {"source": 990002, "target": 972549}, {"source": 990002, "target": 817422}, {"source": 990002, "target": 817173}, {"source": 990002, "target": 1084054}, {"source": 990002, "target": 817305}, {"source": 990002, "target": 817306}, {"source": 990002, "target": 1391264}, {"source": 990002, "target": 817058}, {"source": 990002, "target": 905898}, {"source": 990002, "target": 990763}, {"source": 990002, "target": 817068}, {"source": 990002, "target": 958896}, {"source": 990002, "target": 817328}, {"source": 990002, "target": 817463}, {"source": 990002, "target": 817464}, {"source": 990002, "target": 963001}, {"source": 990002, "target": 1178047}, {"source": 990002, "target": 817218}, {"source": 990002, "target": 945092}, {"source": 990002, "target": 817230}, {"source": 990002, "target": 846933}, {"source": 990002, "target": 817238}, {"source": 990002, "target": 817239}, {"source": 990002, "target": 989015}, {"source": 990002, "target": 885207}, {"source": 990002, "target": 885218}, {"source": 990002, "target": 988643}, {"source": 990002, "target": 956516}, {"source": 990002, "target": 1132146}, {"source": 990002, "target": 846963}, {"source": 990002, "target": 988789}, {"source": 990002, "target": 1180021}, {"source": 990002, "target": 885239}, {"source": 990002, "target": 817144}, {"source": 990002, "target": 817017}, {"source": 990002, "target": 1092863}, {"source": 817464, "target": 1121280}, {"source": 817464, "target": 817025}, {"source": 817464, "target": 1092867}, {"source": 817464, "target": 1092868}, {"source": 817464, "target": 972549}, {"source": 817464, "target": 988678}, {"source": 817464, "target": 817034}, {"source": 817464, "target": 905866}, {"source": 817464, "target": 885258}, {"source": 817464, "target": 1136397}, {"source": 817464, "target": 817038}, {"source": 817464, "target": 817422}, {"source": 817464, "target": 817300}, {"source": 817464, "target": 817044}, {"source": 817464, "target": 1084054}, {"source": 817464, "target": 817175}, {"source": 817464, "target": 817305}, {"source": 817464, "target": 817306}, {"source": 817464, "target": 817437}, {"source": 817464, "target": 1133786}, {"source": 817464, "target": 990763}, {"source": 817464, "target": 1092907}, {"source": 817464, "target": 817453}, {"source": 817464, "target": 855982}, {"source": 817464, "target": 817324}, {"source": 817464, "target": 958896}, {"source": 817464, "target": 1134001}, {"source": 817464, "target": 990002}, {"source": 817464, "target": 855985}, {"source": 817464, "target": 817332}, {"source": 817464, "target": 940793}, {"source": 817464, "target": 817208}, {"source": 817464, "target": 885206}, {"source": 817464, "target": 1178047}, {"source": 817464, "target": 988994}, {"source": 817464, "target": 945092}, {"source": 817464, "target": 1134020}, {"source": 817464, "target": 846918}, {"source": 817464, "target": 846919}, {"source": 817464, "target": 861512}, {"source": 817464, "target": 817353}, {"source": 817464, "target": 998860}, {"source": 817464, "target": 817232}, {"source": 817464, "target": 989009}, {"source": 817464, "target": 817106}, {"source": 817464, "target": 846933}, {"source": 817464, "target": 817238}, {"source": 817464, "target": 817239}, {"source": 817464, "target": 885207}, {"source": 817464, "target": 940760}, {"source": 817464, "target": 1133781}, {"source": 817464, "target": 885208}, {"source": 817464, "target": 1133782}, {"source": 817464, "target": 989016}, {"source": 817464, "target": 885214}, {"source": 817464, "target": 1178591}, {"source": 817464, "target": 940767}, {"source": 817464, "target": 817119}, {"source": 817464, "target": 885218}, {"source": 817464, "target": 988643}, {"source": 817464, "target": 987613}, {"source": 817464, "target": 816990}, {"source": 817464, "target": 816981}, {"source": 817464, "target": 1132146}, {"source": 817464, "target": 957172}, {"source": 817464, "target": 988789}, {"source": 817464, "target": 1180021}, {"source": 817464, "target": 817144}, {"source": 817464, "target": 817017}, {"source": 817464, "target": 940794}, {"source": 817464, "target": 817147}, {"source": 817464, "target": 940798}, {"source": 1178047, "target": 1121280}, {"source": 1178047, "target": 817017}, {"source": 1178047, "target": 885218}, {"source": 1178047, "target": 988643}, {"source": 1178047, "target": 945092}, {"source": 1178047, "target": 972549}, {"source": 1178047, "target": 990763}, {"source": 1178047, "target": 958896}, {"source": 1178047, "target": 990002}, {"source": 1178047, "target": 1132146}, {"source": 1178047, "target": 988789}, {"source": 1178047, "target": 1084054}, {"source": 1178047, "target": 817238}, {"source": 1178047, "target": 817464}, {"source": 1178047, "target": 817305}, {"source": 1178047, "target": 817239}, {"source": 1178047, "target": 1180021}, {"source": 1178047, "target": 817144}, {"source": 945092, "target": 1121280}, {"source": 945092, "target": 817280}, {"source": 945092, "target": 817412}, {"source": 945092, "target": 972549}, {"source": 945092, "target": 817173}, {"source": 945092, "target": 1084054}, {"source": 945092, "target": 817047}, {"source": 945092, "target": 817305}, {"source": 945092, "target": 817306}, {"source": 945092, "target": 1391264}, {"source": 945092, "target": 817058}, {"source": 945092, "target": 817191}, {"source": 945092, "target": 990763}, {"source": 945092, "target": 817068}, {"source": 945092, "target": 817453}, {"source": 945092, "target": 958896}, {"source": 945092, "target": 855985}, {"source": 945092, "target": 990002}, {"source": 945092, "target": 817464}, {"source": 945092, "target": 1178047}, {"source": 945092, "target": 817230}, {"source": 945092, "target": 846928}, {"source": 945092, "target": 817238}, {"source": 945092, "target": 817239}, {"source": 945092, "target": 885218}, {"source": 945092, "target": 988643}, {"source": 945092, "target": 956516}, {"source": 945092, "target": 1132146}, {"source": 945092, "target": 988789}, {"source": 945092, "target": 1180021}, {"source": 945092, "target": 885239}, {"source": 945092, "target": 817144}, {"source": 945092, "target": 817017}, {"source": 945092, "target": 1092863}, {"source": 817238, "target": 1121280}, {"source": 817238, "target": 817154}, {"source": 817238, "target": 885252}, {"source": 817238, "target": 972549}, {"source": 817238, "target": 1133830}, {"source": 817238, "target": 817034}, {"source": 817238, "target": 905866}, {"source": 817238, "target": 817293}, {"source": 817238, "target": 905877}, {"source": 817238, "target": 1084054}, {"source": 817238, "target": 817047}, {"source": 817238, "target": 817305}, {"source": 817238, "target": 987161}, {"source": 817238, "target": 817177}, {"source": 817238, "target": 1409308}, {"source": 817238, "target": 817181}, {"source": 817238, "target": 817049}, {"source": 817238, "target": 1092900}, {"source": 817238, "target": 817060}, {"source": 817238, "target": 987558}, {"source": 817238, "target": 817317}, {"source": 817238, "target": 987560}, {"source": 817238, "target": 817063}, {"source": 817238, "target": 990763}, {"source": 817238, "target": 987564}, {"source": 817238, "target": 846893}, {"source": 817238, "target": 817069}, {"source": 817238, "target": 958896}, {"source": 817238, "target": 990002}, {"source": 817238, "target": 1092915}, {"source": 817238, "target": 817464}, {"source": 817238, "target": 996152}, {"source": 817238, "target": 1178047}, {"source": 817238, "target": 817218}, {"source": 817238, "target": 945092}, {"source": 817238, "target": 861639}, {"source": 817238, "target": 817351}, {"source": 817238, "target": 817354}, {"source": 817238, "target": 817237}, {"source": 817238, "target": 817239}, {"source": 817238, "target": 846936}, {"source": 817238, "target": 885207}, {"source": 817238, "target": 940769}, {"source": 817238, "target": 885218}, {"source": 817238, "target": 988643}, {"source": 817238, "target": 817121}, {"source": 817238, "target": 885222}, {"source": 817238, "target": 817126}, {"source": 817238, "target": 817258}, {"source": 817238, "target": 1132146}, {"source": 817238, "target": 817140}, {"source": 817238, "target": 988789}, {"source": 817238, "target": 1180021}, {"source": 817238, "target": 817014}, {"source": 817238, "target": 817144}, {"source": 817238, "target": 817017}, {"source": 817238, "target": 817406}, {"source": 817239, "target": 1121280}, {"source": 817239, "target": 817280}, {"source": 817239, "target": 885250}, {"source": 817239, "target": 817412}, {"source": 817239, "target": 972549}, {"source": 817239, "target": 942986}, {"source": 817239, "target": 817038}, {"source": 817239, "target": 817172}, {"source": 817239, "target": 1084054}, {"source": 817239, "target": 817305}, {"source": 817239, "target": 1391264}, {"source": 817239, "target": 817057}, {"source": 817239, "target": 817058}, {"source": 817239, "target": 817317}, {"source": 817239, "target": 817191}, {"source": 817239, "target": 990763}, {"source": 817239, "target": 905900}, {"source": 817239, "target": 817196}, {"source": 817239, "target": 958896}, {"source": 817239, "target": 990002}, {"source": 817239, "target": 817458}, {"source": 817239, "target": 817332}, {"source": 817239, "target": 817206}, {"source": 817239, "target": 817464}, {"source": 817239, "target": 1178047}, {"source": 817239, "target": 945092}, {"source": 817239, "target": 817352}, {"source": 817239, "target": 1092937}, {"source": 817239, "target": 817228}, {"source": 817239, "target": 989005}, {"source": 817239, "target": 817229}, {"source": 817239, "target": 817106}, {"source": 817239, "target": 817238}, {"source": 817239, "target": 1133784}, {"source": 817239, "target": 940761}, {"source": 817239, "target": 1092954}, {"source": 817239, "target": 816990}, {"source": 817239, "target": 817376}, {"source": 817239, "target": 817121}, {"source": 817239, "target": 885218}, {"source": 817239, "target": 988643}, {"source": 817239, "target": 1133795}, {"source": 817239, "target": 1132146}, {"source": 817239, "target": 905844}, {"source": 817239, "target": 988789}, {"source": 817239, "target": 1180021}, {"source": 817239, "target": 885239}, {"source": 817239, "target": 817144}, {"source": 817239, "target": 817017}, {"source": 817239, "target": 846971}, {"source": 817239, "target": 846972}, {"source": 817239, "target": 846973}, {"source": 817239, "target": 817279}, {"source": 885218, "target": 1121280}, {"source": 885218, "target": 817280}, {"source": 885218, "target": 817412}, {"source": 885218, "target": 972549}, {"source": 885218, "target": 817173}, {"source": 885218, "target": 1084054}, {"source": 885218, "target": 817047}, {"source": 885218, "target": 817305}, {"source": 885218, "target": 817306}, {"source": 885218, "target": 1391264}, {"source": 885218, "target": 817058}, {"source": 885218, "target": 817191}, {"source": 885218, "target": 990763}, {"source": 885218, "target": 817068}, {"source": 885218, "target": 817453}, {"source": 885218, "target": 958896}, {"source": 885218, "target": 855985}, {"source": 885218, "target": 990002}, {"source": 885218, "target": 817464}, {"source": 885218, "target": 1178047}, {"source": 885218, "target": 945092}, {"source": 885218, "target": 817230}, {"source": 885218, "target": 846928}, {"source": 885218, "target": 817238}, {"source": 885218, "target": 817239}, {"source": 885218, "target": 988643}, {"source": 885218, "target": 956516}, {"source": 885218, "target": 1132146}, {"source": 885218, "target": 988789}, {"source": 885218, "target": 1180021}, {"source": 885218, "target": 885239}, {"source": 885218, "target": 817144}, {"source": 885218, "target": 817017}, {"source": 885218, "target": 1092863}, {"source": 988643, "target": 1121280}, {"source": 988643, "target": 817280}, {"source": 988643, "target": 817410}, {"source": 988643, "target": 817412}, {"source": 988643, "target": 972549}, {"source": 988643, "target": 817163}, {"source": 988643, "target": 940811}, {"source": 988643, "target": 1084054}, {"source": 988643, "target": 817305}, {"source": 988643, "target": 1391264}, {"source": 988643, "target": 817058}, {"source": 988643, "target": 990763}, {"source": 988643, "target": 846893}, {"source": 988643, "target": 958896}, {"source": 988643, "target": 951089}, {"source": 988643, "target": 990002}, {"source": 988643, "target": 817458}, {"source": 988643, "target": 817464}, {"source": 988643, "target": 846905}, {"source": 988643, "target": 1178047}, {"source": 988643, "target": 1092929}, {"source": 988643, "target": 1092930}, {"source": 988643, "target": 945092}, {"source": 988643, "target": 846918}, {"source": 988643, "target": 846919}, {"source": 988643, "target": 817228}, {"source": 988643, "target": 817357}, {"source": 988643, "target": 989005}, {"source": 988643, "target": 1092944}, {"source": 988643, "target": 816977}, {"source": 988643, "target": 1092948}, {"source": 988643, "target": 817238}, {"source": 988643, "target": 817239}, {"source": 988643, "target": 940760}, {"source": 988643, "target": 816989}, {"source": 988643, "target": 987872}, {"source": 988643, "target": 885218}, {"source": 988643, "target": 1132132}, {"source": 988643, "target": 940774}, {"source": 988643, "target": 940778}, {"source": 988643, "target": 1132138}, {"source": 988643, "target": 1132146}, {"source": 988643, "target": 1000050}, {"source": 988643, "target": 988789}, {"source": 988643, "target": 1180021}, {"source": 988643, "target": 817144}, {"source": 988643, "target": 817017}, {"source": 988643, "target": 885244}, {"source": 988643, "target": 817406}, {"source": 1132146, "target": 1121280}, {"source": 1132146, "target": 817280}, {"source": 1132146, "target": 972549}, {"source": 1132146, "target": 817422}, {"source": 1132146, "target": 817429}, {"source": 1132146, "target": 1084054}, {"source": 1132146, "target": 817305}, {"source": 1132146, "target": 817049}, {"source": 1132146, "target": 817177}, {"source": 1132146, "target": 817058}, {"source": 1132146, "target": 817191}, {"source": 1132146, "target": 990763}, {"source": 1132146, "target": 1133995}, {"source": 1132146, "target": 958896}, {"source": 1132146, "target": 990002}, {"source": 1132146, "target": 817074}, {"source": 1132146, "target": 817464}, {"source": 1132146, "target": 1178047}, {"source": 1132146, "target": 905919}, {"source": 1132146, "target": 1134015}, {"source": 1132146, "target": 1134019}, {"source": 1132146, "target": 945092}, {"source": 1132146, "target": 989006}, {"source": 1132146, "target": 817238}, {"source": 1132146, "target": 817239}, {"source": 1132146, "target": 885218}, {"source": 1132146, "target": 988643}, {"source": 1132146, "target": 846949}, {"source": 1132146, "target": 817127}, {"source": 1132146, "target": 885229}, {"source": 1132146, "target": 817140}, {"source": 1132146, "target": 988789}, {"source": 1132146, "target": 1180021}, {"source": 1132146, "target": 817270}, {"source": 1132146, "target": 817144}, {"source": 1132146, "target": 817017}, {"source": 988789, "target": 1121280}, {"source": 988789, "target": 817280}, {"source": 988789, "target": 817412}, {"source": 988789, "target": 972549}, {"source": 988789, "target": 817173}, {"source": 988789, "target": 1084054}, {"source": 988789, "target": 817047}, {"source": 988789, "target": 817305}, {"source": 988789, "target": 817306}, {"source": 988789, "target": 1391264}, {"source": 988789, "target": 817058}, {"source": 988789, "target": 817191}, {"source": 988789, "target": 990763}, {"source": 988789, "target": 817068}, {"source": 988789, "target": 817453}, {"source": 988789, "target": 958896}, {"source": 988789, "target": 855985}, {"source": 988789, "target": 990002}, {"source": 988789, "target": 817464}, {"source": 988789, "target": 1178047}, {"source": 988789, "target": 945092}, {"source": 988789, "target": 817230}, {"source": 988789, "target": 817238}, {"source": 988789, "target": 817239}, {"source": 988789, "target": 885218}, {"source": 988789, "target": 988643}, {"source": 988789, "target": 956516}, {"source": 988789, "target": 1132146}, {"source": 988789, "target": 1180021}, {"source": 988789, "target": 885239}, {"source": 988789, "target": 817144}, {"source": 988789, "target": 817017}, {"source": 988789, "target": 1092863}, {"source": 1180021, "target": 1121280}, {"source": 1180021, "target": 817017}, {"source": 1180021, "target": 885218}, {"source": 1180021, "target": 988643}, {"source": 1180021, "target": 945092}, {"source": 1180021, "target": 972549}, {"source": 1180021, "target": 990763}, {"source": 1180021, "target": 958896}, {"source": 1180021, "target": 990002}, {"source": 1180021, "target": 1132146}, {"source": 1180021, "target": 988789}, {"source": 1180021, "target": 1084054}, {"source": 1180021, "target": 817238}, {"source": 1180021, "target": 817464}, {"source": 1180021, "target": 817305}, {"source": 1180021, "target": 817239}, {"source": 1180021, "target": 817144}, {"source": 1180021, "target": 1178047}, {"source": 817144, "target": 1121280}, {"source": 817144, "target": 817280}, {"source": 817144, "target": 817412}, {"source": 817144, "target": 972549}, {"source": 817144, "target": 817173}, {"source": 817144, "target": 1084054}, {"source": 817144, "target": 817047}, {"source": 817144, "target": 817305}, {"source": 817144, "target": 817306}, {"source": 817144, "target": 817181}, {"source": 817144, "target": 1391264}, {"source": 817144, "target": 817058}, {"source": 817144, "target": 817191}, {"source": 817144, "target": 990763}, {"source": 817144, "target": 817068}, {"source": 817144, "target": 817453}, {"source": 817144, "target": 958896}, {"source": 817144, "target": 855985}, {"source": 817144, "target": 990002}, {"source": 817144, "target": 817464}, {"source": 817144, "target": 1178047}, {"source": 817144, "target": 945092}, {"source": 817144, "target": 817230}, {"source": 817144, "target": 846928}, {"source": 817144, "target": 817238}, {"source": 817144, "target": 817239}, {"source": 817144, "target": 885218}, {"source": 817144, "target": 988643}, {"source": 817144, "target": 956516}, {"source": 817144, "target": 1132146}, {"source": 817144, "target": 988789}, {"source": 817144, "target": 1180021}, {"source": 817144, "target": 885239}, {"source": 817144, "target": 817017}, {"source": 817144, "target": 1092863}, {"source": 817017, "target": 1121280}, {"source": 817017, "target": 817280}, {"source": 817017, "target": 817410}, {"source": 817017, "target": 817025}, {"source": 817017, "target": 817412}, {"source": 817017, "target": 972549}, {"source": 817017, "target": 817287}, {"source": 817017, "target": 817160}, {"source": 817017, "target": 940809}, {"source": 817017, "target": 817173}, {"source": 817017, "target": 1084054}, {"source": 817017, "target": 817047}, {"source": 817017, "target": 989078}, {"source": 817017, "target": 817305}, {"source": 817017, "target": 817306}, {"source": 817017, "target": 905877}, {"source": 817017, "target": 1391264}, {"source": 817017, "target": 817058}, {"source": 817017, "target": 817442}, {"source": 817017, "target": 817317}, {"source": 817017, "target": 817191}, {"source": 817017, "target": 817063}, {"source": 817017, "target": 990763}, {"source": 817017, "target": 817068}, {"source": 817017, "target": 817453}, {"source": 817017, "target": 958896}, {"source": 817017, "target": 855985}, {"source": 817017, "target": 990002}, {"source": 817017, "target": 823344}, {"source": 817017, "target": 817204}, {"source": 817017, "target": 817329}, {"source": 817017, "target": 817464}, {"source": 817017, "target": 817081}, {"source": 817017, "target": 1178047}, {"source": 817017, "target": 945092}, {"source": 817017, "target": 817351}, {"source": 817017, "target": 817354}, {"source": 817017, "target": 816970}, {"source": 817017, "target": 817230}, {"source": 817017, "target": 817109}, {"source": 817017, "target": 817238}, {"source": 817017, "target": 817239}, {"source": 817017, "target": 885207}, {"source": 817017, "target": 817237}, {"source": 817017, "target": 817244}, {"source": 817017, "target": 940768}, {"source": 817017, "target": 885218}, {"source": 817017, "target": 988643}, {"source": 817017, "target": 956516}, {"source": 817017, "target": 846949}, {"source": 817017, "target": 846950}, {"source": 817017, "target": 940774}, {"source": 817017, "target": 817256}, {"source": 817017, "target": 940777}, {"source": 817017, "target": 1132146}, {"source": 817017, "target": 988789}, {"source": 817017, "target": 1180021}, {"source": 817017, "target": 885239}, {"source": 817017, "target": 817144}, {"source": 817017, "target": 817141}, {"source": 817017, "target": 885237}, {"source": 817017, "target": 1092863}, {"source": 988678, "target": 817300}, {"source": 988678, "target": 1485076}, {"source": 988678, "target": 817044}, {"source": 988678, "target": 817175}, {"source": 988678, "target": 817049}, {"source": 988678, "target": 987931}, {"source": 988678, "target": 989085}, {"source": 988678, "target": 957469}, {"source": 988678, "target": 1183277}, {"source": 988678, "target": 817453}, {"source": 988678, "target": 855982}, {"source": 988678, "target": 1134001}, {"source": 988678, "target": 855985}, {"source": 988678, "target": 817332}, {"source": 988678, "target": 817464}, {"source": 988678, "target": 988994}, {"source": 988678, "target": 1178822}, {"source": 988678, "target": 1183180}, {"source": 988678, "target": 817230}, {"source": 988678, "target": 817232}, {"source": 988678, "target": 846933}, {"source": 988678, "target": 1133781}, {"source": 988678, "target": 1003734}, {"source": 988678, "target": 885208}, {"source": 988678, "target": 940761}, {"source": 988678, "target": 885214}, {"source": 988678, "target": 1180127}, {"source": 988678, "target": 817119}, {"source": 988678, "target": 940767}, {"source": 988678, "target": 1133158}, {"source": 988678, "target": 1133800}, {"source": 988678, "target": 940782}, {"source": 988678, "target": 846963}, {"source": 988678, "target": 1178996}, {"source": 988678, "target": 957172}, {"source": 988678, "target": 885242}, {"source": 1485076, "target": 988678}, {"source": 1485076, "target": 817300}, {"source": 1485076, "target": 987931}, {"source": 1485076, "target": 989085}, {"source": 1485076, "target": 1183277}, {"source": 1485076, "target": 817453}, {"source": 1485076, "target": 1134001}, {"source": 1485076, "target": 1178822}, {"source": 1485076, "target": 1183180}, {"source": 1485076, "target": 817232}, {"source": 1485076, "target": 846933}, {"source": 1485076, "target": 1133781}, {"source": 1485076, "target": 1003734}, {"source": 1485076, "target": 885208}, {"source": 1485076, "target": 1180127}, {"source": 1485076, "target": 817119}, {"source": 1485076, "target": 940767}, {"source": 1485076, "target": 1133158}, {"source": 1485076, "target": 1133800}, {"source": 1485076, "target": 940782}, {"source": 1485076, "target": 846963}, {"source": 1485076, "target": 1178996}, {"source": 1485076, "target": 957172}, {"source": 817300, "target": 988678}, {"source": 817300, "target": 817422}, {"source": 817300, "target": 817039}, {"source": 817300, "target": 1485076}, {"source": 817300, "target": 817044}, {"source": 817300, "target": 817175}, {"source": 817300, "target": 817049}, {"source": 817300, "target": 987931}, {"source": 817300, "target": 989085}, {"source": 817300, "target": 957469}, {"source": 817300, "target": 1183277}, {"source": 817300, "target": 817453}, {"source": 817300, "target": 855982}, {"source": 817300, "target": 817199}, {"source": 817300, "target": 1134001}, {"source": 817300, "target": 855985}, {"source": 817300, "target": 817332}, {"source": 817300, "target": 817464}, {"source": 817300, "target": 988994}, {"source": 817300, "target": 846915}, {"source": 817300, "target": 846917}, {"source": 817300, "target": 1178822}, {"source": 817300, "target": 846918}, {"source": 817300, "target": 816970}, {"source": 817300, "target": 1183180}, {"source": 817300, "target": 817101}, {"source": 817300, "target": 817230}, {"source": 817300, "target": 817232}, {"source": 817300, "target": 816979}, {"source": 817300, "target": 846933}, {"source": 817300, "target": 1133781}, {"source": 817300, "target": 1003734}, {"source": 817300, "target": 885208}, {"source": 817300, "target": 940761}, {"source": 817300, "target": 885214}, {"source": 817300, "target": 1180127}, {"source": 817300, "target": 817119}, {"source": 817300, "target": 940767}, {"source": 817300, "target": 1133158}, {"source": 817300, "target": 1133800}, {"source": 817300, "target": 817258}, {"source": 817300, "target": 940782}, {"source": 817300, "target": 846963}, {"source": 817300, "target": 1178996}, {"source": 817300, "target": 957172}, {"source": 817300, "target": 817139}, {"source": 817300, "target": 885242}, {"source": 817300, "target": 885243}, {"source": 987931, "target": 940803}, {"source": 987931, "target": 988678}, {"source": 987931, "target": 1092877}, {"source": 987931, "target": 817296}, {"source": 987931, "target": 817300}, {"source": 987931, "target": 1485076}, {"source": 987931, "target": 989085}, {"source": 987931, "target": 987559}, {"source": 987931, "target": 1183277}, {"source": 987931, "target": 817453}, {"source": 987931, "target": 1092912}, {"source": 987931, "target": 1134001}, {"source": 987931, "target": 817338}, {"source": 987931, "target": 988995}, {"source": 987931, "target": 1178822}, {"source": 987931, "target": 817094}, {"source": 987931, "target": 861639}, {"source": 987931, "target": 817351}, {"source": 987931, "target": 1133771}, {"source": 987931, "target": 1183180}, {"source": 987931, "target": 817232}, {"source": 987931, "target": 846933}, {"source": 987931, "target": 1133781}, {"source": 987931, "target": 1003734}, {"source": 987931, "target": 885208}, {"source": 987931, "target": 817109}, {"source": 987931, "target": 1092954}, {"source": 987931, "target": 1180127}, {"source": 987931, "target": 817119}, {"source": 987931, "target": 940767}, {"source": 987931, "target": 1133792}, {"source": 987931, "target": 940771}, {"source": 987931, "target": 1133158}, {"source": 987931, "target": 1133798}, {"source": 987931, "target": 1133800}, {"source": 987931, "target": 940782}, {"source": 987931, "target": 846963}, {"source": 987931, "target": 1178996}, {"source": 987931, "target": 957172}, {"source": 987931, "target": 817014}, {"source": 989085, "target": 817154}, {"source": 989085, "target": 885251}, {"source": 989085, "target": 817412}, {"source": 989085, "target": 972549}, {"source": 989085, "target": 988678}, {"source": 989085, "target": 846983}, {"source": 989085, "target": 817293}, {"source": 989085, "target": 817165}, {"source": 989085, "target": 861455}, {"source": 989085, "target": 817300}, {"source": 989085, "target": 1485076}, {"source": 989085, "target": 989079}, {"source": 989085, "target": 817049}, {"source": 989085, "target": 1178394}, {"source": 989085, "target": 987931}, {"source": 989085, "target": 817177}, {"source": 989085, "target": 1092906}, {"source": 989085, "target": 1183277}, {"source": 989085, "target": 817453}, {"source": 989085, "target": 817069}, {"source": 989085, "target": 1134001}, {"source": 989085, "target": 846898}, {"source": 989085, "target": 817205}, {"source": 989085, "target": 817081}, {"source": 989085, "target": 1092926}, {"source": 989085, "target": 1178822}, {"source": 989085, "target": 817353}, {"source": 989085, "target": 1183180}, {"source": 989085, "target": 1092943}, {"source": 989085, "target": 817232}, {"source": 989085, "target": 1133907}, {"source": 989085, "target": 885203}, {"source": 989085, "target": 846933}, {"source": 989085, "target": 1133781}, {"source": 989085, "target": 1003734}, {"source": 989085, "target": 885208}, {"source": 989085, "target": 940756}, {"source": 989085, "target": 987101}, {"source": 989085, "target": 1180127}, {"source": 989085, "target": 817119}, {"source": 989085, "target": 940767}, {"source": 989085, "target": 846946}, {"source": 989085, "target": 817121}, {"source": 989085, "target": 817375}, {"source": 989085, "target": 846949}, {"source": 989085, "target": 1133158}, {"source": 989085, "target": 846950}, {"source": 989085, "target": 1133800}, {"source": 989085, "target": 1133927}, {"source": 989085, "target": 940777}, {"source": 989085, "target": 940779}, {"source": 989085, "target": 817133}, {"source": 989085, "target": 940782}, {"source": 989085, "target": 846963}, {"source": 989085, "target": 1178996}, {"source": 989085, "target": 957172}, {"source": 989085, "target": 817141}, {"source": 989085, "target": 817014}, {"source": 989085, "target": 817147}, {"source": 989085, "target": 817279}, {"source": 1183277, "target": 988678}, {"source": 1183277, "target": 817300}, {"source": 1183277, "target": 1485076}, {"source": 1183277, "target": 987931}, {"source": 1183277, "target": 989085}, {"source": 1183277, "target": 817453}, {"source": 1183277, "target": 1134001}, {"source": 1183277, "target": 1178822}, {"source": 1183277, "target": 1183180}, {"source": 1183277, "target": 817232}, {"source": 1183277, "target": 846933}, {"source": 1183277, "target": 1133781}, {"source": 1183277, "target": 1003734}, {"source": 1183277, "target": 885208}, {"source": 1183277, "target": 1180127}, {"source": 1183277, "target": 817119}, {"source": 1183277, "target": 940767}, {"source": 1183277, "target": 1133158}, {"source": 1183277, "target": 1133800}, {"source": 1183277, "target": 940782}, {"source": 1183277, "target": 846963}, {"source": 1183277, "target": 1178996}, {"source": 1183277, "target": 957172}, {"source": 817453, "target": 988678}, {"source": 817453, "target": 885254}, {"source": 817453, "target": 885256}, {"source": 817453, "target": 1092873}, {"source": 817453, "target": 1092872}, {"source": 817453, "target": 940814}, {"source": 817453, "target": 817300}, {"source": 817453, "target": 1485076}, {"source": 817453, "target": 817172}, {"source": 817453, "target": 817175}, {"source": 817453, "target": 817306}, {"source": 817453, "target": 987931}, {"source": 817453, "target": 817180}, {"source": 817453, "target": 989085}, {"source": 817453, "target": 957469}, {"source": 817453, "target": 987934}, {"source": 817453, "target": 1391264}, {"source": 817453, "target": 1133988}, {"source": 817453, "target": 1133989}, {"source": 817453, "target": 817063}, {"source": 817453, "target": 817191}, {"source": 817453, "target": 816938}, {"source": 817453, "target": 817068}, {"source": 817453, "target": 1183277}, {"source": 817453, "target": 855982}, {"source": 817453, "target": 958896}, {"source": 817453, "target": 1134001}, {"source": 817453, "target": 855985}, {"source": 817453, "target": 817204}, {"source": 817453, "target": 817464}, {"source": 817453, "target": 816958}, {"source": 817453, "target": 988994}, {"source": 817453, "target": 945092}, {"source": 817453, "target": 1178822}, {"source": 817453, "target": 861639}, {"source": 817453, "target": 1134024}, {"source": 817453, "target": 1183180}, {"source": 817453, "target": 817229}, {"source": 817453, "target": 817230}, {"source": 817453, "target": 989007}, {"source": 817453, "target": 817232}, {"source": 817453, "target": 846927}, {"source": 817453, "target": 846928}, {"source": 817453, "target": 817108}, {"source": 817453, "target": 846933}, {"source": 817453, "target": 1133781}, {"source": 817453, "target": 1003734}, {"source": 817453, "target": 885208}, {"source": 817453, "target": 816981}, {"source": 817453, "target": 989017}, {"source": 817453, "target": 816989}, {"source": 817453, "target": 885214}, {"source": 817453, "target": 1180127}, {"source": 817453, "target": 817119}, {"source": 817453, "target": 940767}, {"source": 817453, "target": 987102}, {"source": 817453, "target": 885218}, {"source": 817453, "target": 956516}, {"source": 817453, "target": 1133158}, {"source": 817453, "target": 1133800}, {"source": 817453, "target": 940779}, {"source": 817453, "target": 940782}, {"source": 817453, "target": 940785}, {"source": 817453, "target": 846963}, {"source": 817453, "target": 1178996}, {"source": 817453, "target": 957172}, {"source": 817453, "target": 988789}, {"source": 817453, "target": 885239}, {"source": 817453, "target": 817144}, {"source": 817453, "target": 817017}, {"source": 817453, "target": 817279}, {"source": 1134001, "target": 988678}, {"source": 1134001, "target": 885256}, {"source": 1134001, "target": 817300}, {"source": 1134001, "target": 1485076}, {"source": 1134001, "target": 817172}, {"source": 1134001, "target": 817175}, {"source": 1134001, "target": 987931}, {"source": 1134001, "target": 817180}, {"source": 1134001, "target": 989085}, {"source": 1134001, "target": 957469}, {"source": 1134001, "target": 1133989}, {"source": 1134001, "target": 1183277}, {"source": 1134001, "target": 817453}, {"source": 1134001, "target": 855982}, {"source": 1134001, "target": 817464}, {"source": 1134001, "target": 988994}, {"source": 1134001, "target": 1178822}, {"source": 1134001, "target": 861639}, {"source": 1134001, "target": 1183180}, {"source": 1134001, "target": 817229}, {"source": 1134001, "target": 989007}, {"source": 1134001, "target": 817232}, {"source": 1134001, "target": 846927}, {"source": 1134001, "target": 817108}, {"source": 1134001, "target": 846933}, {"source": 1134001, "target": 1133781}, {"source": 1134001, "target": 1003734}, {"source": 1134001, "target": 885208}, {"source": 1134001, "target": 816981}, {"source": 1134001, "target": 989017}, {"source": 1134001, "target": 816989}, {"source": 1134001, "target": 885214}, {"source": 1134001, "target": 1180127}, {"source": 1134001, "target": 817119}, {"source": 1134001, "target": 940767}, {"source": 1134001, "target": 1133158}, {"source": 1134001, "target": 1133800}, {"source": 1134001, "target": 940782}, {"source": 1134001, "target": 846963}, {"source": 1134001, "target": 1178996}, {"source": 1134001, "target": 957172}, {"source": 1134001, "target": 817279}, {"source": 1178822, "target": 988678}, {"source": 1178822, "target": 817300}, {"source": 1178822, "target": 1485076}, {"source": 1178822, "target": 987931}, {"source": 1178822, "target": 989085}, {"source": 1178822, "target": 1183277}, {"source": 1178822, "target": 817453}, {"source": 1178822, "target": 1134001}, {"source": 1178822, "target": 1183180}, {"source": 1178822, "target": 817232}, {"source": 1178822, "target": 846933}, {"source": 1178822, "target": 1133781}, {"source": 1178822, "target": 1003734}, {"source": 1178822, "target": 885208}, {"source": 1178822, "target": 1180127}, {"source": 1178822, "target": 817119}, {"source": 1178822, "target": 940767}, {"source": 1178822, "target": 1133158}, {"source": 1178822, "target": 1133800}, {"source": 1178822, "target": 940782}, {"source": 1178822, "target": 846963}, {"source": 1178822, "target": 1178996}, {"source": 1178822, "target": 957172}, {"source": 1183180, "target": 988678}, {"source": 1183180, "target": 817300}, {"source": 1183180, "target": 1485076}, {"source": 1183180, "target": 987931}, {"source": 1183180, "target": 989085}, {"source": 1183180, "target": 1183277}, {"source": 1183180, "target": 817453}, {"source": 1183180, "target": 1134001}, {"source": 1183180, "target": 1178822}, {"source": 1183180, "target": 817232}, {"source": 1183180, "target": 846933}, {"source": 1183180, "target": 1133781}, {"source": 1183180, "target": 1003734}, {"source": 1183180, "target": 885208}, {"source": 1183180, "target": 1180127}, {"source": 1183180, "target": 817119}, {"source": 1183180, "target": 940767}, {"source": 1183180, "target": 1133158}, {"source": 1183180, "target": 1133800}, {"source": 1183180, "target": 940782}, {"source": 1183180, "target": 846963}, {"source": 1183180, "target": 1178996}, {"source": 1183180, "target": 957172}, {"source": 817232, "target": 988678}, {"source": 817232, "target": 817422}, {"source": 817232, "target": 817039}, {"source": 817232, "target": 817300}, {"source": 817232, "target": 1485076}, {"source": 817232, "target": 817044}, {"source": 817232, "target": 817175}, {"source": 817232, "target": 817049}, {"source": 817232, "target": 987931}, {"source": 817232, "target": 989085}, {"source": 817232, "target": 957469}, {"source": 817232, "target": 817324}, {"source": 817232, "target": 1183277}, {"source": 817232, "target": 817453}, {"source": 817232, "target": 855982}, {"source": 817232, "target": 1134001}, {"source": 817232, "target": 855985}, {"source": 817232, "target": 817332}, {"source": 817232, "target": 817464}, {"source": 817232, "target": 988994}, {"source": 817232, "target": 1178822}, {"source": 817232, "target": 1183180}, {"source": 817232, "target": 817230}, {"source": 817232, "target": 816979}, {"source": 817232, "target": 846933}, {"source": 817232, "target": 1133781}, {"source": 817232, "target": 1003734}, {"source": 817232, "target": 885208}, {"source": 817232, "target": 940761}, {"source": 817232, "target": 817237}, {"source": 817232, "target": 816981}, {"source": 817232, "target": 885214}, {"source": 817232, "target": 1180127}, {"source": 817232, "target": 817119}, {"source": 817232, "target": 940767}, {"source": 817232, "target": 817249}, {"source": 817232, "target": 1133158}, {"source": 817232, "target": 1133800}, {"source": 817232, "target": 940782}, {"source": 817232, "target": 846963}, {"source": 817232, "target": 1178996}, {"source": 817232, "target": 957172}, {"source": 817232, "target": 885242}, {"source": 817232, "target": 885243}, {"source": 846933, "target": 988678}, {"source": 846933, "target": 885254}, {"source": 846933, "target": 817160}, {"source": 846933, "target": 817165}, {"source": 846933, "target": 817175}, {"source": 846933, "target": 1183277}, {"source": 846933, "target": 846898}, {"source": 846933, "target": 817204}, {"source": 846933, "target": 817218}, {"source": 846933, "target": 846915}, {"source": 846933, "target": 846919}, {"source": 846933, "target": 817232}, {"source": 846933, "target": 817237}, {"source": 846933, "target": 1133158}, {"source": 846933, "target": 846963}, {"source": 846933, "target": 988300}, {"source": 846933, "target": 817300}, {"source": 846933, "target": 905877}, {"source": 846933, "target": 817317}, {"source": 846933, "target": 905898}, {"source": 846933, "target": 817328}, {"source": 846933, "target": 817329}, {"source": 846933, "target": 905908}, {"source": 846933, "target": 1178822}, {"source": 846933, "target": 817354}, {"source": 846933, "target": 817361}, {"source": 846933, "target": 940755}, {"source": 846933, "target": 940756}, {"source": 846933, "target": 1133781}, {"source": 846933, "target": 1003734}, {"source": 846933, "target": 1133787}, {"source": 846933, "target": 940767}, {"source": 846933, "target": 817375}, {"source": 846933, "target": 1133800}, {"source": 846933, "target": 940779}, {"source": 846933, "target": 940782}, {"source": 846933, "target": 940785}, {"source": 846933, "target": 957172}, {"source": 846933, "target": 940788}, {"source": 846933, "target": 940800}, {"source": 846933, "target": 817410}, {"source": 846933, "target": 1092872}, {"source": 846933, "target": 1092873}, {"source": 846933, "target": 817422}, {"source": 846933, "target": 1485076}, {"source": 846933, "target": 987931}, {"source": 846933, "target": 987933}, {"source": 846933, "target": 987934}, {"source": 846933, "target": 817442}, {"source": 846933, "target": 816938}, {"source": 846933, "target": 817453}, {"source": 846933, "target": 1092911}, {"source": 846933, "target": 1092913}, {"source": 846933, "target": 990002}, {"source": 846933, "target": 817463}, {"source": 846933, "target": 817464}, {"source": 846933, "target": 816958}, {"source": 846933, "target": 1092928}, {"source": 846933, "target": 1092948}, {"source": 846933, "target": 989015}, {"source": 846933, "target": 1178996}, {"source": 846933, "target": 817022}, {"source": 846933, "target": 817025}, {"source": 846933, "target": 989078}, {"source": 846933, "target": 989079}, {"source": 846933, "target": 989085}, {"source": 846933, "target": 1133988}, {"source": 846933, "target": 817063}, {"source": 846933, "target": 855982}, {"source": 846933, "target": 1134001}, {"source": 846933, "target": 963001}, {"source": 846933, "target": 817094}, {"source": 846933, "target": 1134024}, {"source": 846933, "target": 1183180}, {"source": 846933, "target": 817101}, {"source": 846933, "target": 885200}, {"source": 846933, "target": 885203}, {"source": 846933, "target": 885207}, {"source": 846933, "target": 885208}, {"source": 846933, "target": 987101}, {"source": 846933, "target": 885214}, {"source": 846933, "target": 1180127}, {"source": 846933, "target": 817119}, {"source": 846933, "target": 987102}, {"source": 1133781, "target": 988678}, {"source": 1133781, "target": 817300}, {"source": 1133781, "target": 1485076}, {"source": 1133781, "target": 817044}, {"source": 1133781, "target": 817175}, {"source": 1133781, "target": 987931}, {"source": 1133781, "target": 989085}, {"source": 1133781, "target": 1183277}, {"source": 1133781, "target": 817453}, {"source": 1133781, "target": 855982}, {"source": 1133781, "target": 1134001}, {"source": 1133781, "target": 855985}, {"source": 1133781, "target": 817332}, {"source": 1133781, "target": 817464}, {"source": 1133781, "target": 988994}, {"source": 1133781, "target": 1178822}, {"source": 1133781, "target": 1183180}, {"source": 1133781, "target": 817232}, {"source": 1133781, "target": 846933}, {"source": 1133781, "target": 1003734}, {"source": 1133781, "target": 885208}, {"source": 1133781, "target": 885214}, {"source": 1133781, "target": 1180127}, {"source": 1133781, "target": 817119}, {"source": 1133781, "target": 940767}, {"source": 1133781, "target": 1133158}, {"source": 1133781, "target": 1133800}, {"source": 1133781, "target": 940782}, {"source": 1133781, "target": 846963}, {"source": 1133781, "target": 1178996}, {"source": 1133781, "target": 957172}, {"source": 1133781, "target": 885242}, {"source": 1003734, "target": 988678}, {"source": 1003734, "target": 817300}, {"source": 1003734, "target": 1485076}, {"source": 1003734, "target": 987931}, {"source": 1003734, "target": 989085}, {"source": 1003734, "target": 1183277}, {"source": 1003734, "target": 817453}, {"source": 1003734, "target": 1134001}, {"source": 1003734, "target": 1178822}, {"source": 1003734, "target": 1183180}, {"source": 1003734, "target": 817232}, {"source": 1003734, "target": 846933}, {"source": 1003734, "target": 1133781}, {"source": 1003734, "target": 885208}, {"source": 1003734, "target": 1180127}, {"source": 1003734, "target": 817119}, {"source": 1003734, "target": 940767}, {"source": 1003734, "target": 1133158}, {"source": 1003734, "target": 1133800}, {"source": 1003734, "target": 940782}, {"source": 1003734, "target": 846963}, {"source": 1003734, "target": 1178996}, {"source": 1003734, "target": 957172}, {"source": 885208, "target": 988678}, {"source": 885208, "target": 957958}, {"source": 885208, "target": 817175}, {"source": 885208, "target": 1183277}, {"source": 885208, "target": 817205}, {"source": 885208, "target": 817206}, {"source": 885208, "target": 846909}, {"source": 885208, "target": 817232}, {"source": 885208, "target": 846928}, {"source": 885208, "target": 846933}, {"source": 885208, "target": 817240}, {"source": 885208, "target": 817249}, {"source": 885208, "target": 1133158}, {"source": 885208, "target": 817256}, {"source": 885208, "target": 846963}, {"source": 885208, "target": 817279}, {"source": 885208, "target": 817296}, {"source": 885208, "target": 817300}, {"source": 885208, "target": 817306}, {"source": 885208, "target": 905898}, {"source": 885208, "target": 817324}, {"source": 885208, "target": 817329}, {"source": 885208, "target": 817331}, {"source": 885208, "target": 817332}, {"source": 885208, "target": 817338}, {"source": 885208, "target": 817344}, {"source": 885208, "target": 1178822}, {"source": 885208, "target": 940755}, {"source": 885208, "target": 1133781}, {"source": 885208, "target": 1003734}, {"source": 885208, "target": 940767}, {"source": 885208, "target": 940771}, {"source": 885208, "target": 1133800}, {"source": 885208, "target": 940776}, {"source": 885208, "target": 940777}, {"source": 885208, "target": 998636}, {"source": 885208, "target": 940782}, {"source": 885208, "target": 957172}, {"source": 885208, "target": 940798}, {"source": 885208, "target": 940803}, {"source": 885208, "target": 1092874}, {"source": 885208, "target": 1092877}, {"source": 885208, "target": 817422}, {"source": 885208, "target": 1485076}, {"source": 885208, "target": 1133845}, {"source": 885208, "target": 987931}, {"source": 885208, "target": 1133854}, {"source": 885208, "target": 1092901}, {"source": 885208, "target": 817453}, {"source": 885208, "target": 1092912}, {"source": 885208, "target": 817458}, {"source": 885208, "target": 817464}, {"source": 885208, "target": 816961}, {"source": 885208, "target": 988994}, {"source": 885208, "target": 988995}, {"source": 885208, "target": 816977}, {"source": 885208, "target": 1092951}, {"source": 885208, "target": 1092952}, {"source": 885208, "target": 1178996}, {"source": 885208, "target": 817012}, {"source": 885208, "target": 817014}, {"source": 885208, "target": 817044}, {"source": 885208, "target": 817049}, {"source": 885208, "target": 989085}, {"source": 885208, "target": 817058}, {"source": 885208, "target": 861608}, {"source": 885208, "target": 855982}, {"source": 885208, "target": 1134001}, {"source": 885208, "target": 1183180}, {"source": 885208, "target": 817109}, {"source": 885208, "target": 885206}, {"source": 885208, "target": 861655}, {"source": 885208, "target": 885214}, {"source": 885208, "target": 1180127}, {"source": 885208, "target": 817119}, {"source": 885208, "target": 817127}, {"source": 885208, "target": 885224}, {"source": 940767, "target": 988678}, {"source": 940767, "target": 817039}, {"source": 940767, "target": 817300}, {"source": 940767, "target": 1485076}, {"source": 940767, "target": 817044}, {"source": 940767, "target": 817175}, {"source": 940767, "target": 817049}, {"source": 940767, "target": 987931}, {"source": 940767, "target": 989085}, {"source": 940767, "target": 957469}, {"source": 940767, "target": 1183277}, {"source": 940767, "target": 817453}, {"source": 940767, "target": 855982}, {"source": 940767, "target": 1134001}, {"source": 940767, "target": 855985}, {"source": 940767, "target": 817332}, {"source": 940767, "target": 817464}, {"source": 940767, "target": 988994}, {"source": 940767, "target": 1178822}, {"source": 940767, "target": 1183180}, {"source": 940767, "target": 817230}, {"source": 940767, "target": 817232}, {"source": 940767, "target": 846933}, {"source": 940767, "target": 1133781}, {"source": 940767, "target": 1003734}, {"source": 940767, "target": 885208}, {"source": 940767, "target": 940761}, {"source": 940767, "target": 885214}, {"source": 940767, "target": 1180127}, {"source": 940767, "target": 817119}, {"source": 940767, "target": 1133158}, {"source": 940767, "target": 1133800}, {"source": 940767, "target": 940782}, {"source": 940767, "target": 846963}, {"source": 940767, "target": 1178996}, {"source": 940767, "target": 957172}, {"source": 940767, "target": 885242}, {"source": 817119, "target": 988678}, {"source": 817119, "target": 817163}, {"source": 817119, "target": 817175}, {"source": 817119, "target": 1183277}, {"source": 817119, "target": 817199}, {"source": 817119, "target": 823344}, {"source": 817119, "target": 817206}, {"source": 817119, "target": 846915}, {"source": 817119, "target": 846917}, {"source": 817119, "target": 846918}, {"source": 817119, "target": 817232}, {"source": 817119, "target": 846928}, {"source": 817119, "target": 846933}, {"source": 817119, "target": 817240}, {"source": 817119, "target": 846947}, {"source": 817119, "target": 846949}, {"source": 817119, "target": 1133158}, {"source": 817119, "target": 846950}, {"source": 817119, "target": 817256}, {"source": 817119, "target": 817258}, {"source": 817119, "target": 1132139}, {"source": 817119, "target": 846963}, {"source": 817119, "target": 905846}, {"source": 817119, "target": 846968}, {"source": 817119, "target": 817280}, {"source": 817119, "target": 817287}, {"source": 817119, "target": 817296}, {"source": 817119, "target": 817300}, {"source": 817119, "target": 817305}, {"source": 817119, "target": 817306}, {"source": 817119, "target": 817324}, {"source": 817119, "target": 1178822}, {"source": 817119, "target": 817351}, {"source": 817119, "target": 817361}, {"source": 817119, "target": 1133781}, {"source": 817119, "target": 1003734}, {"source": 817119, "target": 940760}, {"source": 817119, "target": 940767}, {"source": 817119, "target": 817376}, {"source": 817119, "target": 940773}, {"source": 817119, "target": 1133800}, {"source": 817119, "target": 940776}, {"source": 817119, "target": 998636}, {"source": 817119, "target": 940782}, {"source": 817119, "target": 957172}, {"source": 817119, "target": 940794}, {"source": 817119, "target": 940798}, {"source": 817119, "target": 940809}, {"source": 817119, "target": 1092874}, {"source": 817119, "target": 940811}, {"source": 817119, "target": 817422}, {"source": 817119, "target": 1485076}, {"source": 817119, "target": 1133845}, {"source": 817119, "target": 987931}, {"source": 817119, "target": 817437}, {"source": 817119, "target": 1133854}, {"source": 817119, "target": 1092901}, {"source": 817119, "target": 940841}, {"source": 817119, "target": 816938}, {"source": 817119, "target": 817453}, {"source": 817119, "target": 817458}, {"source": 817119, "target": 817463}, {"source": 817119, "target": 817464}, {"source": 817119, "target": 988996}, {"source": 817119, "target": 989005}, {"source": 817119, "target": 816979}, {"source": 817119, "target": 1092951}, {"source": 817119, "target": 1092952}, {"source": 817119, "target": 1178996}, {"source": 817119, "target": 817025}, {"source": 817119, "target": 817044}, {"source": 817119, "target": 989085}, {"source": 817119, "target": 817058}, {"source": 817119, "target": 855982}, {"source": 817119, "target": 1134001}, {"source": 817119, "target": 817081}, {"source": 817119, "target": 1183180}, {"source": 817119, "target": 817101}, {"source": 817119, "target": 817108}, {"source": 817119, "target": 817109}, {"source": 817119, "target": 885206}, {"source": 817119, "target": 885208}, {"source": 817119, "target": 885209}, {"source": 817119, "target": 885211}, {"source": 817119, "target": 885214}, {"source": 817119, "target": 1180127}, {"source": 817119, "target": 817125}, {"source": 817119, "target": 817127}, {"source": 817119, "target": 817139}, {"source": 1180127, "target": 988678}, {"source": 1180127, "target": 817300}, {"source": 1180127, "target": 1485076}, {"source": 1180127, "target": 987931}, {"source": 1180127, "target": 989085}, {"source": 1180127, "target": 1183277}, {"source": 1180127, "target": 817453}, {"source": 1180127, "target": 1134001}, {"source": 1180127, "target": 1178822}, {"source": 1180127, "target": 1183180}, {"source": 1180127, "target": 817232}, {"source": 1180127, "target": 846933}, {"source": 1180127, "target": 1133781}, {"source": 1180127, "target": 1003734}, {"source": 1180127, "target": 885208}, {"source": 1180127, "target": 817119}, {"source": 1180127, "target": 940767}, {"source": 1180127, "target": 1133158}, {"source": 1180127, "target": 1133800}, {"source": 1180127, "target": 940782}, {"source": 1180127, "target": 846963}, {"source": 1180127, "target": 1178996}, {"source": 1180127, "target": 957172}, {"source": 1133158, "target": 1133825}, {"source": 1133158, "target": 988678}, {"source": 1133158, "target": 972550}, {"source": 1133158, "target": 817287}, {"source": 1133158, "target": 988301}, {"source": 1133158, "target": 817300}, {"source": 1133158, "target": 1485076}, {"source": 1133158, "target": 1133847}, {"source": 1133158, "target": 987931}, {"source": 1133158, "target": 1409308}, {"source": 1133158, "target": 989085}, {"source": 1133158, "target": 1391264}, {"source": 1133158, "target": 957474}, {"source": 1133158, "target": 940841}, {"source": 1133158, "target": 1183277}, {"source": 1133158, "target": 817453}, {"source": 1133158, "target": 1134001}, {"source": 1133158, "target": 817091}, {"source": 1133158, "target": 988996}, {"source": 1133158, "target": 1178822}, {"source": 1133158, "target": 1183180}, {"source": 1133158, "target": 817230}, {"source": 1133158, "target": 1092943}, {"source": 1133158, "target": 817232}, {"source": 1133158, "target": 1181394}, {"source": 1133158, "target": 846933}, {"source": 1133158, "target": 1133781}, {"source": 1133158, "target": 1003734}, {"source": 1133158, "target": 885208}, {"source": 1133158, "target": 1092950}, {"source": 1133158, "target": 1180127}, {"source": 1133158, "target": 817119}, {"source": 1133158, "target": 940767}, {"source": 1133158, "target": 846947}, {"source": 1133158, "target": 1133924}, {"source": 1133158, "target": 989030}, {"source": 1133158, "target": 1133800}, {"source": 1133158, "target": 903020}, {"source": 1133158, "target": 940782}, {"source": 1133158, "target": 846963}, {"source": 1133158, "target": 1178996}, {"source": 1133158, "target": 957172}, {"source": 1133158, "target": 1133812}, {"source": 1133158, "target": 1133815}, {"source": 1133158, "target": 940794}, {"source": 1133158, "target": 885243}, {"source": 1133158, "target": 1182205}, {"source": 1133800, "target": 988678}, {"source": 1133800, "target": 817300}, {"source": 1133800, "target": 1485076}, {"source": 1133800, "target": 987931}, {"source": 1133800, "target": 989085}, {"source": 1133800, "target": 1183277}, {"source": 1133800, "target": 817453}, {"source": 1133800, "target": 1134001}, {"source": 1133800, "target": 1178822}, {"source": 1133800, "target": 1183180}, {"source": 1133800, "target": 817232}, {"source": 1133800, "target": 846933}, {"source": 1133800, "target": 1133781}, {"source": 1133800, "target": 1003734}, {"source": 1133800, "target": 885208}, {"source": 1133800, "target": 1180127}, {"source": 1133800, "target": 817119}, {"source": 1133800, "target": 940767}, {"source": 1133800, "target": 1133158}, {"source": 1133800, "target": 940782}, {"source": 1133800, "target": 846963}, {"source": 1133800, "target": 1178996}, {"source": 1133800, "target": 957172}, {"source": 940782, "target": 988678}, {"source": 940782, "target": 846983}, {"source": 940782, "target": 817160}, {"source": 940782, "target": 957958}, {"source": 940782, "target": 988300}, {"source": 940782, "target": 1092877}, {"source": 940782, "target": 817422}, {"source": 940782, "target": 817296}, {"source": 940782, "target": 817300}, {"source": 940782, "target": 1485076}, {"source": 940782, "target": 987931}, {"source": 940782, "target": 989085}, {"source": 940782, "target": 817063}, {"source": 940782, "target": 987559}, {"source": 940782, "target": 905898}, {"source": 940782, "target": 1183277}, {"source": 940782, "target": 817453}, {"source": 940782, "target": 1092912}, {"source": 940782, "target": 1134001}, {"source": 940782, "target": 817458}, {"source": 940782, "target": 817329}, {"source": 940782, "target": 905908}, {"source": 940782, "target": 817205}, {"source": 940782, "target": 817330}, {"source": 940782, "target": 817338}, {"source": 940782, "target": 1092928}, {"source": 940782, "target": 817344}, {"source": 940782, "target": 816961}, {"source": 940782, "target": 988995}, {"source": 940782, "target": 1178822}, {"source": 940782, "target": 817094}, {"source": 940782, "target": 817351}, {"source": 940782, "target": 1133771}, {"source": 940782, "target": 1183180}, {"source": 940782, "target": 817101}, {"source": 940782, "target": 817232}, {"source": 940782, "target": 885200}, {"source": 940782, "target": 940755}, {"source": 940782, "target": 846933}, {"source": 940782, "target": 1133781}, {"source": 940782, "target": 1003734}, {"source": 940782, "target": 885208}, {"source": 940782, "target": 817109}, {"source": 940782, "target": 1133787}, {"source": 940782, "target": 1180127}, {"source": 940782, "target": 817119}, {"source": 940782, "target": 940767}, {"source": 940782, "target": 1133792}, {"source": 940782, "target": 940771}, {"source": 940782, "target": 817249}, {"source": 940782, "target": 1133158}, {"source": 940782, "target": 1133798}, {"source": 940782, "target": 1133800}, {"source": 940782, "target": 885224}, {"source": 940782, "target": 817132}, {"source": 940782, "target": 846963}, {"source": 940782, "target": 1178996}, {"source": 940782, "target": 957172}, {"source": 940782, "target": 940789}, {"source": 940782, "target": 846964}, {"source": 940782, "target": 940788}, {"source": 940782, "target": 817014}, {"source": 940782, "target": 817012}, {"source": 940782, "target": 817022}, {"source": 940782, "target": 817279}, {"source": 846963, "target": 885248}, {"source": 846963, "target": 885251}, {"source": 846963, "target": 988678}, {"source": 846963, "target": 957958}, {"source": 846963, "target": 817160}, {"source": 846963, "target": 817165}, {"source": 846963, "target": 817196}, {"source": 846963, "target": 1183277}, {"source": 846963, "target": 846898}, {"source": 846963, "target": 817218}, {"source": 846963, "target": 846915}, {"source": 846963, "target": 817229}, {"source": 846963, "target": 817232}, {"source": 846963, "target": 846933}, {"source": 846963, "target": 817237}, {"source": 846963, "target": 1133158}, {"source": 846963, "target": 846964}, {"source": 846963, "target": 846965}, {"source": 846963, "target": 817270}, {"source": 846963, "target": 817296}, {"source": 846963, "target": 817300}, {"source": 846963, "target": 817317}, {"source": 846963, "target": 905898}, {"source": 846963, "target": 817328}, {"source": 846963, "target": 817329}, {"source": 846963, "target": 817338}, {"source": 846963, "target": 1178822}, {"source": 846963, "target": 817351}, {"source": 846963, "target": 1133771}, {"source": 846963, "target": 817361}, {"source": 846963, "target": 940756}, {"source": 846963, "target": 1133781}, {"source": 846963, "target": 1003734}, {"source": 846963, "target": 940767}, {"source": 846963, "target": 1133792}, {"source": 846963, "target": 817375}, {"source": 846963, "target": 940771}, {"source": 846963, "target": 1133798}, {"source": 846963, "target": 1133800}, {"source": 846963, "target": 940782}, {"source": 846963, "target": 957172}, {"source": 846963, "target": 855801}, {"source": 846963, "target": 940800}, {"source": 846963, "target": 940803}, {"source": 846963, "target": 940804}, {"source": 846963, "target": 1092877}, {"source": 846963, "target": 817422}, {"source": 846963, "target": 817423}, {"source": 846963, "target": 861455}, {"source": 846963, "target": 1092881}, {"source": 846963, "target": 1485076}, {"source": 846963, "target": 987931}, {"source": 846963, "target": 817453}, {"source": 846963, "target": 1092911}, {"source": 846963, "target": 1092912}, {"source": 846963, "target": 1092913}, {"source": 846963, "target": 990002}, {"source": 846963, "target": 817463}, {"source": 846963, "target": 1092921}, {"source": 846963, "target": 816958}, {"source": 846963, "target": 988995}, {"source": 846963, "target": 1133911}, {"source": 846963, "target": 989015}, {"source": 846963, "target": 1092954}, {"source": 846963, "target": 989020}, {"source": 846963, "target": 1178996}, {"source": 846963, "target": 817014}, {"source": 846963, "target": 817025}, {"source": 846963, "target": 989078}, {"source": 846963, "target": 989079}, {"source": 846963, "target": 989085}, {"source": 846963, "target": 817057}, {"source": 846963, "target": 817058}, {"source": 846963, "target": 987559}, {"source": 846963, "target": 1134001}, {"source": 846963, "target": 855985}, {"source": 846963, "target": 963001}, {"source": 846963, "target": 817094}, {"source": 846963, "target": 861639}, {"source": 846963, "target": 954825}, {"source": 846963, "target": 1183180}, {"source": 846963, "target": 817106}, {"source": 846963, "target": 885203}, {"source": 846963, "target": 817109}, {"source": 846963, "target": 885207}, {"source": 846963, "target": 885208}, {"source": 846963, "target": 987101}, {"source": 846963, "target": 1180127}, {"source": 846963, "target": 817119}, {"source": 846963, "target": 885217}, {"source": 846963, "target": 817121}, {"source": 846963, "target": 885243}, {"source": 1178996, "target": 988678}, {"source": 1178996, "target": 817300}, {"source": 1178996, "target": 1485076}, {"source": 1178996, "target": 987931}, {"source": 1178996, "target": 989085}, {"source": 1178996, "target": 1183277}, {"source": 1178996, "target": 817453}, {"source": 1178996, "target": 1134001}, {"source": 1178996, "target": 1178822}, {"source": 1178996, "target": 1183180}, {"source": 1178996, "target": 817232}, {"source": 1178996, "target": 846933}, {"source": 1178996, "target": 1133781}, {"source": 1178996, "target": 1003734}, {"source": 1178996, "target": 885208}, {"source": 1178996, "target": 1180127}, {"source": 1178996, "target": 817119}, {"source": 1178996, "target": 940767}, {"source": 1178996, "target": 1133158}, {"source": 1178996, "target": 1133800}, {"source": 1178996, "target": 940782}, {"source": 1178996, "target": 846963}, {"source": 1178996, "target": 957172}, {"source": 957172, "target": 885250}, {"source": 957172, "target": 988678}, {"source": 957172, "target": 942986}, {"source": 957172, "target": 817300}, {"source": 957172, "target": 1485076}, {"source": 957172, "target": 817175}, {"source": 957172, "target": 987931}, {"source": 957172, "target": 989085}, {"source": 957172, "target": 905900}, {"source": 957172, "target": 1183277}, {"source": 957172, "target": 817453}, {"source": 957172, "target": 855982}, {"source": 957172, "target": 1134001}, {"source": 957172, "target": 817463}, {"source": 957172, "target": 817464}, {"source": 957172, "target": 1178822}, {"source": 957172, "target": 1092937}, {"source": 957172, "target": 1183180}, {"source": 957172, "target": 817232}, {"source": 957172, "target": 846933}, {"source": 957172, "target": 1133781}, {"source": 957172, "target": 1003734}, {"source": 957172, "target": 885208}, {"source": 957172, "target": 1133784}, {"source": 957172, "target": 940761}, {"source": 957172, "target": 885214}, {"source": 957172, "target": 1180127}, {"source": 957172, "target": 817119}, {"source": 957172, "target": 940767}, {"source": 957172, "target": 1133795}, {"source": 957172, "target": 1133158}, {"source": 957172, "target": 1133800}, {"source": 957172, "target": 940776}, {"source": 957172, "target": 940782}, {"source": 957172, "target": 846963}, {"source": 957172, "target": 1178996}, {"source": 957172, "target": 905844}, {"source": 957172, "target": 846971}, {"source": 957172, "target": 846972}, {"source": 957172, "target": 1092863}, {"source": 885250, "target": 1181314}, {"source": 885250, "target": 817412}, {"source": 885250, "target": 942986}, {"source": 885250, "target": 817172}, {"source": 885250, "target": 817057}, {"source": 885250, "target": 817317}, {"source": 885250, "target": 817191}, {"source": 885250, "target": 905900}, {"source": 885250, "target": 817068}, {"source": 885250, "target": 817196}, {"source": 885250, "target": 817328}, {"source": 885250, "target": 817458}, {"source": 885250, "target": 817332}, {"source": 885250, "target": 817206}, {"source": 885250, "target": 817463}, {"source": 885250, "target": 1179581}, {"source": 885250, "target": 846915}, {"source": 885250, "target": 1092937}, {"source": 885250, "target": 817228}, {"source": 885250, "target": 989005}, {"source": 885250, "target": 817229}, {"source": 885250, "target": 817239}, {"source": 885250, "target": 1133784}, {"source": 885250, "target": 940761}, {"source": 885250, "target": 1092954}, {"source": 885250, "target": 817121}, {"source": 885250, "target": 1133795}, {"source": 885250, "target": 940776}, {"source": 885250, "target": 905844}, {"source": 885250, "target": 957172}, {"source": 885250, "target": 846971}, {"source": 885250, "target": 846972}, {"source": 885250, "target": 846973}, {"source": 885250, "target": 1092863}, {"source": 846915, "target": 885248}, {"source": 846915, "target": 885250}, {"source": 846915, "target": 885252}, {"source": 846915, "target": 957958}, {"source": 846915, "target": 885254}, {"source": 846915, "target": 817165}, {"source": 846915, "target": 817191}, {"source": 846915, "target": 846893}, {"source": 846915, "target": 817199}, {"source": 846915, "target": 846898}, {"source": 846915, "target": 817204}, {"source": 846915, "target": 846917}, {"source": 846915, "target": 846918}, {"source": 846915, "target": 954950}, {"source": 846915, "target": 846933}, {"source": 846915, "target": 817240}, {"source": 846915, "target": 817256}, {"source": 846915, "target": 1133165}, {"source": 846915, "target": 846963}, {"source": 846915, "target": 905844}, {"source": 846915, "target": 846964}, {"source": 846915, "target": 905846}, {"source": 846915, "target": 846971}, {"source": 846915, "target": 846972}, {"source": 846915, "target": 846973}, {"source": 846915, "target": 1181314}, {"source": 846915, "target": 846983}, {"source": 846915, "target": 817300}, {"source": 846915, "target": 905898}, {"source": 846915, "target": 905900}, {"source": 846915, "target": 817324}, {"source": 846915, "target": 817328}, {"source": 846915, "target": 905919}, {"source": 846915, "target": 817354}, {"source": 846915, "target": 817357}, {"source": 846915, "target": 817361}, {"source": 846915, "target": 940756}, {"source": 846915, "target": 940758}, {"source": 846915, "target": 1133784}, {"source": 846915, "target": 940761}, {"source": 846915, "target": 940760}, {"source": 846915, "target": 817375}, {"source": 846915, "target": 987872}, {"source": 846915, "target": 1133795}, {"source": 846915, "target": 940773}, {"source": 846915, "target": 940774}, {"source": 846915, "target": 940776}, {"source": 846915, "target": 940779}, {"source": 846915, "target": 940785}, {"source": 846915, "target": 1092863}, {"source": 846915, "target": 817410}, {"source": 846915, "target": 1092867}, {"source": 846915, "target": 972550}, {"source": 846915, "target": 1092872}, {"source": 846915, "target": 940809}, {"source": 846915, "target": 1092873}, {"source": 846915, "target": 1136397}, {"source": 846915, "target": 1092880}, {"source": 846915, "target": 987933}, {"source": 846915, "target": 987934}, {"source": 846915, "target": 817442}, {"source": 846915, "target": 816938}, {"source": 846915, "target": 1092911}, {"source": 846915, "target": 1092913}, {"source": 846915, "target": 951089}, {"source": 846915, "target": 817463}, {"source": 846915, "target": 816958}, {"source": 846915, "target": 1092929}, {"source": 846915, "target": 988994}, {"source": 846915, "target": 1092930}, {"source": 846915, "target": 861512}, {"source": 846915, "target": 1092937}, {"source": 846915, "target": 816970}, {"source": 846915, "target": 989005}, {"source": 846915, "target": 1092947}, {"source": 846915, "target": 816979}, {"source": 846915, "target": 1092951}, {"source": 846915, "target": 989020}, {"source": 846915, "target": 816989}, {"source": 846915, "target": 816997}, {"source": 846915, "target": 942986}, {"source": 846915, "target": 817034}, {"source": 846915, "target": 817038}, {"source": 846915, "target": 989078}, {"source": 846915, "target": 989079}, {"source": 846915, "target": 987552}, {"source": 846915, "target": 1133988}, {"source": 846915, "target": 817063}, {"source": 846915, "target": 1179581}, {"source": 846915, "target": 1134024}, {"source": 846915, "target": 817101}, {"source": 846915, "target": 817106}, {"source": 846915, "target": 885203}, {"source": 846915, "target": 817111}, {"source": 846915, "target": 885209}, {"source": 846915, "target": 885211}, {"source": 846915, "target": 987101}, {"source": 846915, "target": 987102}, {"source": 846915, "target": 1178591}, {"source": 846915, "target": 817119}, {"source": 846915, "target": 817139}, {"source": 846915, "target": 885242}, {"source": 846915, "target": 885243}, {"source": 1181314, "target": 885250}, {"source": 1181314, "target": 846915}, {"source": 1181314, "target": 1133795}, {"source": 1181314, "target": 940776}, {"source": 1181314, "target": 1092937}, {"source": 1181314, "target": 942986}, {"source": 1181314, "target": 817328}, {"source": 1181314, "target": 905844}, {"source": 1181314, "target": 846973}, {"source": 1181314, "target": 817463}, {"source": 1181314, "target": 1133784}, {"source": 1181314, "target": 940761}, {"source": 1181314, "target": 846971}, {"source": 1181314, "target": 846972}, {"source": 1181314, "target": 1179581}, {"source": 1181314, "target": 1092863}, {"source": 1133795, "target": 885250}, {"source": 1133795, "target": 1181314}, {"source": 1133795, "target": 942986}, {"source": 1133795, "target": 905900}, {"source": 1133795, "target": 817068}, {"source": 1133795, "target": 817196}, {"source": 1133795, "target": 817328}, {"source": 1133795, "target": 817463}, {"source": 1133795, "target": 1179581}, {"source": 1133795, "target": 846915}, {"source": 1133795, "target": 1092937}, {"source": 1133795, "target": 817239}, {"source": 1133795, "target": 1133784}, {"source": 1133795, "target": 940761}, {"source": 1133795, "target": 1092954}, {"source": 1133795, "target": 940776}, {"source": 1133795, "target": 905844}, {"source": 1133795, "target": 957172}, {"source": 1133795, "target": 846971}, {"source": 1133795, "target": 846972}, {"source": 1133795, "target": 846973}, {"source": 1133795, "target": 1092863}, {"source": 940776, "target": 817280}, {"source": 940776, "target": 1133825}, {"source": 940776, "target": 885250}, {"source": 940776, "target": 1181314}, {"source": 940776, "target": 885251}, {"source": 940776, "target": 817154}, {"source": 940776, "target": 972550}, {"source": 940776, "target": 817287}, {"source": 940776, "target": 885256}, {"source": 940776, "target": 940805}, {"source": 940776, "target": 942986}, {"source": 940776, "target": 1092874}, {"source": 940776, "target": 988301}, {"source": 940776, "target": 817165}, {"source": 940776, "target": 1133847}, {"source": 940776, "target": 817180}, {"source": 940776, "target": 817181}, {"source": 940776, "target": 957474}, {"source": 940776, "target": 817058}, {"source": 940776, "target": 1092901}, {"source": 940776, "target": 817020}, {"source": 940776, "target": 940841}, {"source": 940776, "target": 905900}, {"source": 940776, "target": 817068}, {"source": 940776, "target": 817196}, {"source": 940776, "target": 817324}, {"source": 940776, "target": 817328}, {"source": 940776, "target": 817455}, {"source": 940776, "target": 817458}, {"source": 940776, "target": 817069}, {"source": 940776, "target": 885243}, {"source": 940776, "target": 855982}, {"source": 940776, "target": 817463}, {"source": 940776, "target": 996152}, {"source": 940776, "target": 1179581}, {"source": 940776, "target": 817344}, {"source": 940776, "target": 846915}, {"source": 940776, "target": 817091}, {"source": 940776, "target": 988996}, {"source": 940776, "target": 817351}, {"source": 940776, "target": 1092937}, {"source": 940776, "target": 817230}, {"source": 940776, "target": 846927}, {"source": 940776, "target": 846928}, {"source": 940776, "target": 817236}, {"source": 940776, "target": 1092950}, {"source": 940776, "target": 885206}, {"source": 940776, "target": 1133784}, {"source": 940776, "target": 940761}, {"source": 940776, "target": 1092951}, {"source": 940776, "target": 1092952}, {"source": 940776, "target": 885208}, {"source": 940776, "target": 940759}, {"source": 940776, "target": 885214}, {"source": 940776, "target": 817119}, {"source": 940776, "target": 817376}, {"source": 940776, "target": 885215}, {"source": 940776, "target": 885217}, {"source": 940776, "target": 1133795}, {"source": 940776, "target": 989029}, {"source": 940776, "target": 989030}, {"source": 940776, "target": 817127}, {"source": 940776, "target": 817258}, {"source": 940776, "target": 903020}, {"source": 940776, "target": 998636}, {"source": 940776, "target": 905844}, {"source": 940776, "target": 957172}, {"source": 940776, "target": 1133812}, {"source": 940776, "target": 1133815}, {"source": 940776, "target": 855801}, {"source": 940776, "target": 940794}, {"source": 940776, "target": 846971}, {"source": 940776, "target": 846972}, {"source": 940776, "target": 846973}, {"source": 940776, "target": 1092863}, {"source": 1092937, "target": 885250}, {"source": 1092937, "target": 1181314}, {"source": 1092937, "target": 942986}, {"source": 1092937, "target": 905900}, {"source": 1092937, "target": 817068}, {"source": 1092937, "target": 817196}, {"source": 1092937, "target": 817328}, {"source": 1092937, "target": 817332}, {"source": 1092937, "target": 817463}, {"source": 1092937, "target": 1179581}, {"source": 1092937, "target": 846915}, {"source": 1092937, "target": 817228}, {"source": 1092937, "target": 989005}, {"source": 1092937, "target": 817239}, {"source": 1092937, "target": 1133784}, {"source": 1092937, "target": 940761}, {"source": 1092937, "target": 1092954}, {"source": 1092937, "target": 1133795}, {"source": 1092937, "target": 940776}, {"source": 1092937, "target": 905844}, {"source": 1092937, "target": 957172}, {"source": 1092937, "target": 846971}, {"source": 1092937, "target": 846972}, {"source": 1092937, "target": 846973}, {"source": 1092937, "target": 1092863}, {"source": 942986, "target": 885250}, {"source": 942986, "target": 1181314}, {"source": 942986, "target": 905900}, {"source": 942986, "target": 817068}, {"source": 942986, "target": 817196}, {"source": 942986, "target": 817328}, {"source": 942986, "target": 817332}, {"source": 942986, "target": 817463}, {"source": 942986, "target": 1179581}, {"source": 942986, "target": 846915}, {"source": 942986, "target": 1092937}, {"source": 942986, "target": 817228}, {"source": 942986, "target": 989005}, {"source": 942986, "target": 817239}, {"source": 942986, "target": 1133784}, {"source": 942986, "target": 940761}, {"source": 942986, "target": 1092954}, {"source": 942986, "target": 1133795}, {"source": 942986, "target": 940776}, {"source": 942986, "target": 905844}, {"source": 942986, "target": 957172}, {"source": 942986, "target": 846971}, {"source": 942986, "target": 846972}, {"source": 942986, "target": 846973}, {"source": 942986, "target": 1092863}, {"source": 1179581, "target": 885250}, {"source": 1179581, "target": 846915}, {"source": 1179581, "target": 1133795}, {"source": 1179581, "target": 1181314}, {"source": 1179581, "target": 940776}, {"source": 1179581, "target": 1092937}, {"source": 1179581, "target": 942986}, {"source": 1179581, "target": 905900}, {"source": 1179581, "target": 817328}, {"source": 1179581, "target": 905844}, {"source": 1179581, "target": 817463}, {"source": 1179581, "target": 1133784}, {"source": 1179581, "target": 940761}, {"source": 1179581, "target": 846971}, {"source": 1179581, "target": 846972}, {"source": 1179581, "target": 846973}, {"source": 1179581, "target": 1092863}, {"source": 817328, "target": 940800}, {"source": 817328, "target": 1092865}, {"source": 817328, "target": 885250}, {"source": 817328, "target": 1181314}, {"source": 817328, "target": 817025}, {"source": 817328, "target": 817280}, {"source": 817328, "target": 940804}, {"source": 817328, "target": 942986}, {"source": 817328, "target": 940810}, {"source": 817328, "target": 817422}, {"source": 817328, "target": 1092881}, {"source": 817328, "target": 1092884}, {"source": 817328, "target": 817173}, {"source": 817328, "target": 817428}, {"source": 817328, "target": 817050}, {"source": 817328, "target": 817307}, {"source": 817328, "target": 817442}, {"source": 817328, "target": 905898}, {"source": 817328, "target": 851371}, {"source": 817328, "target": 905900}, {"source": 817328, "target": 855982}, {"source": 817328, "target": 817329}, {"source": 817328, "target": 990002}, {"source": 817328, "target": 817404}, {"source": 817328, "target": 817463}, {"source": 817328, "target": 963001}, {"source": 817328, "target": 1092921}, {"source": 817328, "target": 1179581}, {"source": 817328, "target": 817344}, {"source": 817328, "target": 1134017}, {"source": 817328, "target": 817218}, {"source": 817328, "target": 846915}, {"source": 817328, "target": 817352}, {"source": 817328, "target": 1092937}, {"source": 817328, "target": 998860}, {"source": 817328, "target": 1180496}, {"source": 817328, "target": 817235}, {"source": 817328, "target": 1092949}, {"source": 817328, "target": 846933}, {"source": 817328, "target": 1132119}, {"source": 817328, "target": 1133784}, {"source": 817328, "target": 940761}, {"source": 817328, "target": 940759}, {"source": 817328, "target": 989015}, {"source": 817328, "target": 885207}, {"source": 817328, "target": 817237}, {"source": 817328, "target": 1132126}, {"source": 817328, "target": 987103}, {"source": 817328, "target": 989024}, {"source": 817328, "target": 816985}, {"source": 817328, "target": 817122}, {"source": 817328, "target": 1133795}, {"source": 817328, "target": 885216}, {"source": 817328, "target": 816997}, {"source": 817328, "target": 1132134}, {"source": 817328, "target": 817126}, {"source": 817328, "target": 940776}, {"source": 817328, "target": 885228}, {"source": 817328, "target": 817139}, {"source": 817328, "target": 905844}, {"source": 817328, "target": 885237}, {"source": 817328, "target": 846963}, {"source": 817328, "target": 846971}, {"source": 817328, "target": 846972}, {"source": 817328, "target": 846973}, {"source": 817328, "target": 1092863}, {"source": 905844, "target": 885250}, {"source": 905844, "target": 1181314}, {"source": 905844, "target": 942986}, {"source": 905844, "target": 817172}, {"source": 905844, "target": 817173}, {"source": 905844, "target": 817050}, {"source": 905844, "target": 817317}, {"source": 905844, "target": 851371}, {"source": 905844, "target": 905900}, {"source": 905844, "target": 817068}, {"source": 905844, "target": 817196}, {"source": 905844, "target": 817328}, {"source": 905844, "target": 817458}, {"source": 905844, "target": 817074}, {"source": 905844, "target": 817332}, {"source": 905844, "target": 817404}, {"source": 905844, "target": 817463}, {"source": 905844, "target": 1179581}, {"source": 905844, "target": 846915}, {"source": 905844, "target": 846919}, {"source": 905844, "target": 1092937}, {"source": 905844, "target": 817228}, {"source": 905844, "target": 989005}, {"source": 905844, "target": 817229}, {"source": 905844, "target": 817239}, {"source": 905844, "target": 1133784}, {"source": 905844, "target": 940761}, {"source": 905844, "target": 1092954}, {"source": 905844, "target": 817121}, {"source": 905844, "target": 817122}, {"source": 905844, "target": 1133795}, {"source": 905844, "target": 846946}, {"source": 905844, "target": 940776}, {"source": 905844, "target": 817258}, {"source": 905844, "target": 957172}, {"source": 905844, "target": 846971}, {"source": 905844, "target": 846972}, {"source": 905844, "target": 846973}, {"source": 905844, "target": 1092863}, {"source": 817463, "target": 885248}, {"source": 817463, "target": 885250}, {"source": 817463, "target": 817159}, {"source": 817463, "target": 817160}, {"source": 817463, "target": 817173}, {"source": 817463, "target": 817206}, {"source": 817463, "target": 817218}, {"source": 817463, "target": 846915}, {"source": 817463, "target": 954950}, {"source": 817463, "target": 817236}, {"source": 817463, "target": 846933}, {"source": 817463, "target": 846936}, {"source": 817463, "target": 817249}, {"source": 817463, "target": 846946}, {"source": 817463, "target": 817256}, {"source": 817463, "target": 1133165}, {"source": 817463, "target": 846963}, {"source": 817463, "target": 905844}, {"source": 817463, "target": 846964}, {"source": 817463, "target": 846968}, {"source": 817463, "target": 846971}, {"source": 817463, "target": 846972}, {"source": 817463, "target": 846973}, {"source": 817463, "target": 1181314}, {"source": 817463, "target": 817296}, {"source": 817463, "target": 817305}, {"source": 817463, "target": 905898}, {"source": 817463, "target": 905900}, {"source": 817463, "target": 817324}, {"source": 817463, "target": 817328}, {"source": 817463, "target": 817354}, {"source": 817463, "target": 940758}, {"source": 817463, "target": 1133784}, {"source": 817463, "target": 940761}, {"source": 817463, "target": 1133795}, {"source": 817463, "target": 940776}, {"source": 817463, "target": 957172}, {"source": 817463, "target": 940789}, {"source": 817463, "target": 855801}, {"source": 817463, "target": 1092863}, {"source": 817463, "target": 940800}, {"source": 817463, "target": 940804}, {"source": 817463, "target": 817414}, {"source": 817463, "target": 940809}, {"source": 817463, "target": 817422}, {"source": 817463, "target": 817423}, {"source": 817463, "target": 1092880}, {"source": 817463, "target": 1092881}, {"source": 817463, "target": 861455}, {"source": 817463, "target": 817429}, {"source": 817463, "target": 817442}, {"source": 817463, "target": 958769}, {"source": 817463, "target": 990002}, {"source": 817463, "target": 1092921}, {"source": 817463, "target": 1092937}, {"source": 817463, "target": 1092947}, {"source": 817463, "target": 1092951}, {"source": 817463, "target": 1133911}, {"source": 817463, "target": 989015}, {"source": 817463, "target": 816997}, {"source": 817463, "target": 817025}, {"source": 817463, "target": 942986}, {"source": 817463, "target": 987552}, {"source": 817463, "target": 817057}, {"source": 817463, "target": 817058}, {"source": 817463, "target": 987559}, {"source": 817463, "target": 817063}, {"source": 817463, "target": 963001}, {"source": 817463, "target": 1179581}, {"source": 817463, "target": 954825}, {"source": 817463, "target": 817108}, {"source": 817463, "target": 885207}, {"source": 817463, "target": 987611}, {"source": 817463, "target": 817119}, {"source": 817463, "target": 885217}, {"source": 817463, "target": 885222}, {"source": 817463, "target": 885229}, {"source": 817463, "target": 885239}, {"source": 817463, "target": 885242}, {"source": 1133784, "target": 885250}, {"source": 1133784, "target": 1181314}, {"source": 1133784, "target": 942986}, {"source": 1133784, "target": 905900}, {"source": 1133784, "target": 817068}, {"source": 1133784, "target": 817196}, {"source": 1133784, "target": 817328}, {"source": 1133784, "target": 817463}, {"source": 1133784, "target": 1179581}, {"source": 1133784, "target": 846915}, {"source": 1133784, "target": 1092937}, {"source": 1133784, "target": 817239}, {"source": 1133784, "target": 940761}, {"source": 1133784, "target": 1092954}, {"source": 1133784, "target": 1133795}, {"source": 1133784, "target": 940776}, {"source": 1133784, "target": 905844}, {"source": 1133784, "target": 957172}, {"source": 1133784, "target": 846971}, {"source": 1133784, "target": 846972}, {"source": 1133784, "target": 846973}, {"source": 1133784, "target": 1092863}, {"source": 940761, "target": 885250}, {"source": 940761, "target": 1181314}, {"source": 940761, "target": 988678}, {"source": 940761, "target": 942986}, {"source": 940761, "target": 817039}, {"source": 940761, "target": 817044}, {"source": 940761, "target": 817300}, {"source": 940761, "target": 817049}, {"source": 940761, "target": 957469}, {"source": 940761, "target": 905900}, {"source": 940761, "target": 817068}, {"source": 940761, "target": 817196}, {"source": 940761, "target": 855982}, {"source": 940761, "target": 817328}, {"source": 940761, "target": 855985}, {"source": 940761, "target": 905908}, {"source": 940761, "target": 817463}, {"source": 940761, "target": 846905}, {"source": 940761, "target": 1179581}, {"source": 940761, "target": 846915}, {"source": 940761, "target": 1092937}, {"source": 940761, "target": 989005}, {"source": 940761, "target": 817230}, {"source": 940761, "target": 885244}, {"source": 940761, "target": 817232}, {"source": 940761, "target": 817239}, {"source": 940761, "target": 1133784}, {"source": 940761, "target": 1092954}, {"source": 940761, "target": 940767}, {"source": 940761, "target": 1133795}, {"source": 940761, "target": 940776}, {"source": 940761, "target": 905844}, {"source": 940761, "target": 957172}, {"source": 940761, "target": 885243}, {"source": 940761, "target": 885242}, {"source": 940761, "target": 846971}, {"source": 940761, "target": 846972}, {"source": 940761, "target": 846973}, {"source": 940761, "target": 1092863}, {"source": 846971, "target": 885250}, {"source": 846971, "target": 1181314}, {"source": 846971, "target": 817412}, {"source": 846971, "target": 942986}, {"source": 846971, "target": 817172}, {"source": 846971, "target": 817057}, {"source": 846971, "target": 817317}, {"source": 846971, "target": 817191}, {"source": 846971, "target": 905900}, {"source": 846971, "target": 817068}, {"source": 846971, "target": 817196}, {"source": 846971, "target": 817328}, {"source": 846971, "target": 817458}, {"source": 846971, "target": 817332}, {"source": 846971, "target": 817206}, {"source": 846971, "target": 817463}, {"source": 846971, "target": 1179581}, {"source": 846971, "target": 846915}, {"source": 846971, "target": 1092937}, {"source": 846971, "target": 817228}, {"source": 846971, "target": 989005}, {"source": 846971, "target": 817229}, {"source": 846971, "target": 817239}, {"source": 846971, "target": 1133784}, {"source": 846971, "target": 940761}, {"source": 846971, "target": 1092954}, {"source": 846971, "target": 817121}, {"source": 846971, "target": 1133795}, {"source": 846971, "target": 940776}, {"source": 846971, "target": 905844}, {"source": 846971, "target": 957172}, {"source": 846971, "target": 846972}, {"source": 846971, "target": 846973}, {"source": 846971, "target": 1092863}, {"source": 846972, "target": 885250}, {"source": 846972, "target": 1181314}, {"source": 846972, "target": 817412}, {"source": 846972, "target": 942986}, {"source": 846972, "target": 817172}, {"source": 846972, "target": 817057}, {"source": 846972, "target": 817317}, {"source": 846972, "target": 817191}, {"source": 846972, "target": 905900}, {"source": 846972, "target": 817068}, {"source": 846972, "target": 817196}, {"source": 846972, "target": 817328}, {"source": 846972, "target": 817458}, {"source": 846972, "target": 817332}, {"source": 846972, "target": 817206}, {"source": 846972, "target": 817463}, {"source": 846972, "target": 1179581}, {"source": 846972, "target": 846915}, {"source": 846972, "target": 817352}, {"source": 846972, "target": 1092937}, {"source": 846972, "target": 817228}, {"source": 846972, "target": 989005}, {"source": 846972, "target": 817229}, {"source": 846972, "target": 817239}, {"source": 846972, "target": 1133784}, {"source": 846972, "target": 940761}, {"source": 846972, "target": 1092954}, {"source": 846972, "target": 817121}, {"source": 846972, "target": 1133795}, {"source": 846972, "target": 940776}, {"source": 846972, "target": 905844}, {"source": 846972, "target": 957172}, {"source": 846972, "target": 846971}, {"source": 846972, "target": 846973}, {"source": 846972, "target": 1092863}, {"source": 846973, "target": 885248}, {"source": 846973, "target": 885250}, {"source": 846973, "target": 1181314}, {"source": 846973, "target": 817412}, {"source": 846973, "target": 940809}, {"source": 846973, "target": 942986}, {"source": 846973, "target": 1092880}, {"source": 846973, "target": 817172}, {"source": 846973, "target": 987552}, {"source": 846973, "target": 817057}, {"source": 846973, "target": 817058}, {"source": 846973, "target": 817063}, {"source": 846973, "target": 987559}, {"source": 846973, "target": 817191}, {"source": 846973, "target": 817068}, {"source": 846973, "target": 1179822}, {"source": 846973, "target": 817328}, {"source": 846973, "target": 817458}, {"source": 846973, "target": 817332}, {"source": 846973, "target": 817206}, {"source": 846973, "target": 817463}, {"source": 846973, "target": 1179581}, {"source": 846973, "target": 846915}, {"source": 846973, "target": 954950}, {"source": 846973, "target": 817352}, {"source": 846973, "target": 1092937}, {"source": 846973, "target": 817101}, {"source": 846973, "target": 817106}, {"source": 846973, "target": 1092947}, {"source": 846973, "target": 940758}, {"source": 846973, "target": 1092951}, {"source": 846973, "target": 1133784}, {"source": 846973, "target": 940761}, {"source": 846973, "target": 817240}, {"source": 846973, "target": 817239}, {"source": 846973, "target": 987101}, {"source": 846973, "target": 816990}, {"source": 846973, "target": 1133795}, {"source": 846973, "target": 989030}, {"source": 846973, "target": 940776}, {"source": 846973, "target": 817256}, {"source": 846973, "target": 940778}, {"source": 846973, "target": 1133165}, {"source": 846973, "target": 905844}, {"source": 846973, "target": 846964}, {"source": 846973, "target": 817270}, {"source": 846973, "target": 846965}, {"source": 846973, "target": 885242}, {"source": 846973, "target": 846971}, {"source": 846973, "target": 846972}, {"source": 846973, "target": 1092863}, {"source": 1092863, "target": 817280}, {"source": 1092863, "target": 885250}, {"source": 1092863, "target": 1181314}, {"source": 1092863, "target": 942986}, {"source": 1092863, "target": 817173}, {"source": 1092863, "target": 817047}, {"source": 1092863, "target": 817305}, {"source": 1092863, "target": 817306}, {"source": 1092863, "target": 1391264}, {"source": 1092863, "target": 817058}, {"source": 1092863, "target": 905900}, {"source": 1092863, "target": 817068}, {"source": 1092863, "target": 817196}, {"source": 1092863, "target": 817328}, {"source": 1092863, "target": 958896}, {"source": 1092863, "target": 990002}, {"source": 1092863, "target": 855985}, {"source": 1092863, "target": 817463}, {"source": 1092863, "target": 1179581}, {"source": 1092863, "target": 846915}, {"source": 1092863, "target": 945092}, {"source": 1092863, "target": 1092937}, {"source": 1092863, "target": 817230}, {"source": 1092863, "target": 1133784}, {"source": 1092863, "target": 940761}, {"source": 1092863, "target": 1092954}, {"source": 1092863, "target": 885218}, {"source": 1092863, "target": 1133795}, {"source": 1092863, "target": 956516}, {"source": 1092863, "target": 940776}, {"source": 1092863, "target": 905844}, {"source": 1092863, "target": 957172}, {"source": 1092863, "target": 988789}, {"source": 1092863, "target": 885239}, {"source": 1092863, "target": 817144}, {"source": 1092863, "target": 817017}, {"source": 1092863, "target": 846971}, {"source": 1092863, "target": 846972}, {"source": 1092863, "target": 846973}, {"source": 1184917, "target": 1134112}, {"source": 1184917, "target": 989026}, {"source": 1184917, "target": 1134115}, {"source": 1184917, "target": 956516}, {"source": 1184917, "target": 1134118}, {"source": 1184917, "target": 1178665}, {"source": 1184917, "target": 885209}, {"source": 1184917, "target": 1415757}, {"source": 1184917, "target": 1132141}, {"source": 1184917, "target": 1180783}, {"source": 1184917, "target": 905681}, {"source": 1184917, "target": 817330}, {"source": 1184917, "target": 817458}, {"source": 1184917, "target": 816979}, {"source": 1184917, "target": 816985}, {"source": 1184917, "target": 1092921}, {"source": 1184917, "target": 913627}, {"source": 1184917, "target": 885215}, {"source": 1134112, "target": 817293}, {"source": 1134112, "target": 1184917}, {"source": 1134112, "target": 1134115}, {"source": 1134112, "target": 1134118}, {"source": 1134112, "target": 1178665}, {"source": 1134112, "target": 817065}, {"source": 1134112, "target": 817330}, {"source": 1134112, "target": 817458}, {"source": 1134112, "target": 1092921}, {"source": 1134112, "target": 1415757}, {"source": 1134112, "target": 905681}, {"source": 1134112, "target": 816979}, {"source": 1134112, "target": 885209}, {"source": 1134112, "target": 816985}, {"source": 1134112, "target": 913627}, {"source": 1134112, "target": 885215}, {"source": 1134112, "target": 885216}, {"source": 1134112, "target": 817376}, {"source": 1134112, "target": 989026}, {"source": 1134112, "target": 956516}, {"source": 1134112, "target": 1132141}, {"source": 1134112, "target": 1180783}, {"source": 1134112, "target": 817136}, {"source": 1134112, "target": 988788}, {"source": 1134112, "target": 940789}, {"source": 1134112, "target": 846965}, {"source": 1134112, "target": 817020}, {"source": 1134115, "target": 817293}, {"source": 1134115, "target": 1184917}, {"source": 1134115, "target": 817437}, {"source": 1134115, "target": 1134112}, {"source": 1134115, "target": 1134118}, {"source": 1134115, "target": 1178665}, {"source": 1134115, "target": 817065}, {"source": 1134115, "target": 817330}, {"source": 1134115, "target": 817458}, {"source": 1134115, "target": 1092921}, {"source": 1134115, "target": 817228}, {"source": 1134115, "target": 1415757}, {"source": 1134115, "target": 905681}, {"source": 1134115, "target": 816979}, {"source": 1134115, "target": 817237}, {"source": 1134115, "target": 885209}, {"source": 1134115, "target": 816985}, {"source": 1134115, "target": 913627}, {"source": 1134115, "target": 885215}, {"source": 1134115, "target": 885216}, {"source": 1134115, "target": 817376}, {"source": 1134115, "target": 989026}, {"source": 1134115, "target": 956516}, {"source": 1134115, "target": 1132141}, {"source": 1134115, "target": 1180783}, {"source": 1134115, "target": 817136}, {"source": 1134115, "target": 988788}, {"source": 1134115, "target": 940789}, {"source": 1134115, "target": 846965}, {"source": 1134115, "target": 817020}, {"source": 1134118, "target": 817293}, {"source": 1134118, "target": 1184917}, {"source": 1134118, "target": 1134112}, {"source": 1134118, "target": 1134115}, {"source": 1134118, "target": 1178665}, {"source": 1134118, "target": 817065}, {"source": 1134118, "target": 817330}, {"source": 1134118, "target": 817458}, {"source": 1134118, "target": 1092921}, {"source": 1134118, "target": 817228}, {"source": 1134118, "target": 1415757}, {"source": 1134118, "target": 905681}, {"source": 1134118, "target": 816979}, {"source": 1134118, "target": 885209}, {"source": 1134118, "target": 816985}, {"source": 1134118, "target": 913627}, {"source": 1134118, "target": 885215}, {"source": 1134118, "target": 885216}, {"source": 1134118, "target": 817376}, {"source": 1134118, "target": 989026}, {"source": 1134118, "target": 956516}, {"source": 1134118, "target": 1132141}, {"source": 1134118, "target": 1180783}, {"source": 1134118, "target": 817136}, {"source": 1134118, "target": 988788}, {"source": 1134118, "target": 940789}, {"source": 1134118, "target": 846965}, {"source": 1134118, "target": 817020}, {"source": 1178665, "target": 1134112}, {"source": 1178665, "target": 989026}, {"source": 1178665, "target": 1134115}, {"source": 1178665, "target": 956516}, {"source": 1178665, "target": 1134118}, {"source": 1178665, "target": 885209}, {"source": 1178665, "target": 1415757}, {"source": 1178665, "target": 1132141}, {"source": 1178665, "target": 1180783}, {"source": 1178665, "target": 905681}, {"source": 1178665, "target": 817330}, {"source": 1178665, "target": 817458}, {"source": 1178665, "target": 816979}, {"source": 1178665, "target": 1184917}, {"source": 1178665, "target": 816985}, {"source": 1178665, "target": 1092921}, {"source": 1178665, "target": 913627}, {"source": 1178665, "target": 885215}, {"source": 817330, "target": 940803}, {"source": 817330, "target": 957958}, {"source": 817330, "target": 817160}, {"source": 817330, "target": 817293}, {"source": 817330, "target": 817422}, {"source": 817330, "target": 1184917}, {"source": 817330, "target": 817049}, {"source": 817330, "target": 1134112}, {"source": 817330, "target": 1134115}, {"source": 817330, "target": 1134118}, {"source": 817330, "target": 817191}, {"source": 817330, "target": 861608}, {"source": 817330, "target": 1178665}, {"source": 817330, "target": 905898}, {"source": 817330, "target": 817458}, {"source": 817330, "target": 817331}, {"source": 817330, "target": 996152}, {"source": 817330, "target": 1092921}, {"source": 817330, "target": 846909}, {"source": 817330, "target": 816961}, {"source": 817330, "target": 817351}, {"source": 817330, "target": 1092940}, {"source": 817330, "target": 1415757}, {"source": 817330, "target": 905681}, {"source": 817330, "target": 816977}, {"source": 817330, "target": 816979}, {"source": 817330, "target": 817237}, {"source": 817330, "target": 861655}, {"source": 817330, "target": 885209}, {"source": 817330, "target": 816985}, {"source": 817330, "target": 913627}, {"source": 817330, "target": 817244}, {"source": 817330, "target": 885215}, {"source": 817330, "target": 885216}, {"source": 817330, "target": 817376}, {"source": 817330, "target": 989026}, {"source": 817330, "target": 940771}, {"source": 817330, "target": 956516}, {"source": 817330, "target": 989030}, {"source": 817330, "target": 885224}, {"source": 817330, "target": 817256}, {"source": 817330, "target": 817132}, {"source": 817330, "target": 1132141}, {"source": 817330, "target": 940782}, {"source": 817330, "target": 1180783}, {"source": 817330, "target": 988788}, {"source": 817330, "target": 940789}, {"source": 817330, "target": 817012}, {"source": 817330, "target": 885243}, {"source": 817330, "target": 817020}, {"source": 817458, "target": 885250}, {"source": 817458, "target": 885251}, {"source": 817458, "target": 885254}, {"source": 817458, "target": 885256}, {"source": 817458, "target": 817160}, {"source": 817458, "target": 817163}, {"source": 817458, "target": 817172}, {"source": 817458, "target": 817173}, {"source": 817458, "target": 1134112}, {"source": 817458, "target": 1134115}, {"source": 817458, "target": 1134118}, {"source": 817458, "target": 817191}, {"source": 817458, "target": 1178665}, {"source": 817458, "target": 817206}, {"source": 817458, "target": 846905}, {"source": 817458, "target": 846909}, {"source": 817458, "target": 846919}, {"source": 817458, "target": 1415757}, {"source": 817458, "target": 817229}, {"source": 817458, "target": 846928}, {"source": 817458, "target": 817239}, {"source": 817458, "target": 817244}, {"source": 817458, "target": 956516}, {"source": 817458, "target": 1132132}, {"source": 817458, "target": 1132138}, {"source": 817458, "target": 1132141}, {"source": 817458, "target": 1180783}, {"source": 817458, "target": 1000050}, {"source": 817458, "target": 988788}, {"source": 817458, "target": 846964}, {"source": 817458, "target": 905844}, {"source": 817458, "target": 846971}, {"source": 817458, "target": 846972}, {"source": 817458, "target": 846973}, {"source": 817458, "target": 988300}, {"source": 817458, "target": 1184917}, {"source": 817458, "target": 817324}, {"source": 817458, "target": 817330}, {"source": 817458, "target": 817331}, {"source": 817458, "target": 905908}, {"source": 817458, "target": 817332}, {"source": 817458, "target": 817351}, {"source": 817458, "target": 817352}, {"source": 817458, "target": 940755}, {"source": 817458, "target": 913627}, {"source": 817458, "target": 1133787}, {"source": 817458, "target": 940776}, {"source": 817458, "target": 940778}, {"source": 817458, "target": 998636}, {"source": 817458, "target": 940782}, {"source": 817458, "target": 940785}, {"source": 817458, "target": 940788}, {"source": 817458, "target": 940798}, {"source": 817458, "target": 817406}, {"source": 817458, "target": 940801}, {"source": 817458, "target": 940803}, {"source": 817458, "target": 817412}, {"source": 817458, "target": 1092874}, {"source": 817458, "target": 940811}, {"source": 817458, "target": 940814}, {"source": 817458, "target": 987934}, {"source": 817458, "target": 1092901}, {"source": 817458, "target": 817455}, {"source": 817458, "target": 1092921}, {"source": 817458, "target": 816958}, {"source": 817458, "target": 1092928}, {"source": 817458, "target": 988996}, {"source": 817458, "target": 989005}, {"source": 817458, "target": 1092944}, {"source": 817458, "target": 816977}, {"source": 817458, "target": 816979}, {"source": 817458, "target": 1092948}, {"source": 817458, "target": 1092951}, {"source": 817458, "target": 1092952}, {"source": 817458, "target": 816985}, {"source": 817458, "target": 816990}, {"source": 817458, "target": 989026}, {"source": 817458, "target": 989030}, {"source": 817458, "target": 817022}, {"source": 817458, "target": 817038}, {"source": 817458, "target": 817047}, {"source": 817458, "target": 817049}, {"source": 817458, "target": 817057}, {"source": 817458, "target": 817058}, {"source": 817458, "target": 817063}, {"source": 817458, "target": 861608}, {"source": 817458, "target": 817101}, {"source": 817458, "target": 885200}, {"source": 817458, "target": 905681}, {"source": 817458, "target": 885206}, {"source": 817458, "target": 861655}, {"source": 817458, "target": 885208}, {"source": 817458, "target": 885209}, {"source": 817458, "target": 987102}, {"source": 817458, "target": 885215}, {"source": 817458, "target": 817119}, {"source": 817458, "target": 817121}, {"source": 817458, "target": 988643}, {"source": 817458, "target": 817127}, {"source": 817458, "target": 817132}, {"source": 817458, "target": 885243}, {"source": 817458, "target": 885244}, {"source": 1092921, "target": 940800}, {"source": 1092921, "target": 885251}, {"source": 1092921, "target": 940804}, {"source": 1092921, "target": 817422}, {"source": 1092921, "target": 817423}, {"source": 1092921, "target": 861455}, {"source": 1092921, "target": 1092881}, {"source": 1092921, "target": 1132153}, {"source": 1092921, "target": 1184917}, {"source": 1092921, "target": 1134112}, {"source": 1092921, "target": 817057}, {"source": 1092921, "target": 1134115}, {"source": 1092921, "target": 1134118}, {"source": 1092921, "target": 1178665}, {"source": 1092921, "target": 905898}, {"source": 1092921, "target": 817068}, {"source": 1092921, "target": 817069}, {"source": 1092921, "target": 817196}, {"source": 1092921, "target": 817328}, {"source": 1092921, "target": 855985}, {"source": 1092921, "target": 817330}, {"source": 1092921, "target": 817458}, {"source": 1092921, "target": 817463}, {"source": 1092921, "target": 963001}, {"source": 1092921, "target": 817218}, {"source": 1092921, "target": 954825}, {"source": 1092921, "target": 1415757}, {"source": 1092921, "target": 905681}, {"source": 1092921, "target": 816979}, {"source": 1092921, "target": 1133911}, {"source": 1092921, "target": 989015}, {"source": 1092921, "target": 816985}, {"source": 1092921, "target": 885209}, {"source": 1092921, "target": 913627}, {"source": 1092921, "target": 1133914}, {"source": 1092921, "target": 885207}, {"source": 1092921, "target": 885215}, {"source": 1092921, "target": 885217}, {"source": 1092921, "target": 989026}, {"source": 1092921, "target": 956516}, {"source": 1092921, "target": 1132141}, {"source": 1092921, "target": 1180783}, {"source": 1092921, "target": 846963}, {"source": 1092921, "target": 988788}, {"source": 1092921, "target": 855801}, {"source": 1092921, "target": 817406}, {"source": 1415757, "target": 940804}, {"source": 1415757, "target": 940810}, {"source": 1415757, "target": 885258}, {"source": 1415757, "target": 1184917}, {"source": 1415757, "target": 957469}, {"source": 1415757, "target": 817181}, {"source": 1415757, "target": 817054}, {"source": 1415757, "target": 1134112}, {"source": 1415757, "target": 817437}, {"source": 1415757, "target": 1134115}, {"source": 1415757, "target": 1134118}, {"source": 1415757, "target": 1178665}, {"source": 1415757, "target": 817196}, {"source": 1415757, "target": 817330}, {"source": 1415757, "target": 817458}, {"source": 1415757, "target": 817205}, {"source": 1415757, "target": 1092921}, {"source": 1415757, "target": 846918}, {"source": 1415757, "target": 846919}, {"source": 1415757, "target": 816970}, {"source": 1415757, "target": 998860}, {"source": 1415757, "target": 817357}, {"source": 1415757, "target": 987343}, {"source": 1415757, "target": 905681}, {"source": 1415757, "target": 817361}, {"source": 1415757, "target": 816979}, {"source": 1415757, "target": 940758}, {"source": 1415757, "target": 940760}, {"source": 1415757, "target": 885209}, {"source": 1415757, "target": 816985}, {"source": 1415757, "target": 913627}, {"source": 1415757, "target": 816989}, {"source": 1415757, "target": 885215}, {"source": 1415757, "target": 885216}, {"source": 1415757, "target": 817249}, {"source": 1415757, "target": 989026}, {"source": 1415757, "target": 956516}, {"source": 1415757, "target": 1132141}, {"source": 1415757, "target": 1180783}, {"source": 1415757, "target": 988788}, {"source": 1415757, "target": 885239}, {"source": 1415757, "target": 1132153}, {"source": 905681, "target": 940804}, {"source": 905681, "target": 817293}, {"source": 905681, "target": 1184917}, {"source": 905681, "target": 817437}, {"source": 905681, "target": 1134112}, {"source": 905681, "target": 1134115}, {"source": 905681, "target": 1134118}, {"source": 905681, "target": 1178665}, {"source": 905681, "target": 817065}, {"source": 905681, "target": 855982}, {"source": 905681, "target": 817330}, {"source": 905681, "target": 817458}, {"source": 905681, "target": 1092921}, {"source": 905681, "target": 817228}, {"source": 905681, "target": 1415757}, {"source": 905681, "target": 816979}, {"source": 905681, "target": 817237}, {"source": 905681, "target": 940759}, {"source": 905681, "target": 885209}, {"source": 905681, "target": 816985}, {"source": 905681, "target": 913627}, {"source": 905681, "target": 885215}, {"source": 905681, "target": 885216}, {"source": 905681, "target": 817376}, {"source": 905681, "target": 989026}, {"source": 905681, "target": 956516}, {"source": 905681, "target": 1132141}, {"source": 905681, "target": 1180783}, {"source": 905681, "target": 817136}, {"source": 905681, "target": 988788}, {"source": 905681, "target": 940789}, {"source": 905681, "target": 846965}, {"source": 905681, "target": 817020}, {"source": 816979, "target": 885252}, {"source": 816979, "target": 940809}, {"source": 816979, "target": 817293}, {"source": 816979, "target": 817422}, {"source": 816979, "target": 817300}, {"source": 816979, "target": 1184917}, {"source": 816979, "target": 1134112}, {"source": 816979, "target": 1134115}, {"source": 816979, "target": 1134118}, {"source": 816979, "target": 1178665}, {"source": 816979, "target": 817324}, {"source": 816979, "target": 817199}, {"source": 816979, "target": 817330}, {"source": 816979, "target": 817458}, {"source": 816979, "target": 1092914}, {"source": 816979, "target": 1092921}, {"source": 816979, "target": 817344}, {"source": 816979, "target": 846915}, {"source": 816979, "target": 846917}, {"source": 816979, "target": 846918}, {"source": 816979, "target": 861639}, {"source": 816979, "target": 816970}, {"source": 816979, "target": 1415757}, {"source": 816979, "target": 989005}, {"source": 816979, "target": 817101}, {"source": 816979, "target": 846928}, {"source": 816979, "target": 905681}, {"source": 816979, "target": 817230}, {"source": 816979, "target": 817232}, {"source": 816979, "target": 1092949}, {"source": 816979, "target": 816981}, {"source": 816979, "target": 817237}, {"source": 816979, "target": 940760}, {"source": 816979, "target": 885209}, {"source": 816979, "target": 816985}, {"source": 816979, "target": 913627}, {"source": 816979, "target": 817114}, {"source": 816979, "target": 885211}, {"source": 816979, "target": 1133917}, {"source": 816979, "target": 885215}, {"source": 816979, "target": 885216}, {"source": 816979, "target": 817119}, {"source": 816979, "target": 989026}, {"source": 816979, "target": 817249}, {"source": 816979, "target": 956516}, {"source": 816979, "target": 940773}, {"source": 816979, "target": 817126}, {"source": 816979, "target": 817125}, {"source": 816979, "target": 817258}, {"source": 816979, "target": 1132141}, {"source": 816979, "target": 1180783}, {"source": 816979, "target": 1133811}, {"source": 816979, "target": 988788}, {"source": 816979, "target": 817139}, {"source": 816979, "target": 905846}, {"source": 816979, "target": 885239}, {"source": 816979, "target": 817240}, {"source": 885209, "target": 885252}, {"source": 885209, "target": 940809}, {"source": 885209, "target": 817293}, {"source": 885209, "target": 817422}, {"source": 885209, "target": 1184917}, {"source": 885209, "target": 1134112}, {"source": 885209, "target": 1134115}, {"source": 885209, "target": 1134118}, {"source": 885209, "target": 1178665}, {"source": 885209, "target": 817324}, {"source": 885209, "target": 817199}, {"source": 885209, "target": 817330}, {"source": 885209, "target": 817458}, {"source": 885209, "target": 1092914}, {"source": 885209, "target": 1092921}, {"source": 885209, "target": 817344}, {"source": 885209, "target": 846915}, {"source": 885209, "target": 846917}, {"source": 885209, "target": 846918}, {"source": 885209, "target": 861639}, {"source": 885209, "target": 1415757}, {"source": 885209, "target": 989005}, {"source": 885209, "target": 817101}, {"source": 885209, "target": 846928}, {"source": 885209, "target": 905681}, {"source": 885209, "target": 816979}, {"source": 885209, "target": 1092949}, {"source": 885209, "target": 940760}, {"source": 885209, "target": 816985}, {"source": 885209, "target": 817114}, {"source": 885209, "target": 913627}, {"source": 885209, "target": 885211}, {"source": 885209, "target": 1133917}, {"source": 885209, "target": 817240}, {"source": 885209, "target": 885215}, {"source": 885209, "target": 885216}, {"source": 885209, "target": 817119}, {"source": 885209, "target": 989026}, {"source": 885209, "target": 956516}, {"source": 885209, "target": 940773}, {"source": 885209, "target": 817126}, {"source": 885209, "target": 817125}, {"source": 885209, "target": 817258}, {"source": 885209, "target": 1132141}, {"source": 885209, "target": 1180783}, {"source": 885209, "target": 1133811}, {"source": 885209, "target": 988788}, {"source": 885209, "target": 817139}, {"source": 885209, "target": 905846}, {"source": 885209, "target": 885239}, {"source": 816985, "target": 817280}, {"source": 816985, "target": 940804}, {"source": 816985, "target": 817293}, {"source": 816985, "target": 817428}, {"source": 816985, "target": 1184917}, {"source": 816985, "target": 817307}, {"source": 816985, "target": 817437}, {"source": 816985, "target": 1134112}, {"source": 816985, "target": 1134115}, {"source": 816985, "target": 1134118}, {"source": 816985, "target": 1178665}, {"source": 816985, "target": 817065}, {"source": 816985, "target": 855982}, {"source": 816985, "target": 817328}, {"source": 816985, "target": 817329}, {"source": 816985, "target": 817330}, {"source": 816985, "target": 817458}, {"source": 816985, "target": 1092921}, {"source": 816985, "target": 817344}, {"source": 816985, "target": 817228}, {"source": 816985, "target": 1415757}, {"source": 816985, "target": 905681}, {"source": 816985, "target": 816979}, {"source": 816985, "target": 817237}, {"source": 816985, "target": 940759}, {"source": 816985, "target": 885209}, {"source": 816985, "target": 913627}, {"source": 816985, "target": 885215}, {"source": 816985, "target": 885216}, {"source": 816985, "target": 817376}, {"source": 816985, "target": 989026}, {"source": 816985, "target": 956516}, {"source": 816985, "target": 816997}, {"source": 816985, "target": 817126}, {"source": 816985, "target": 1132141}, {"source": 816985, "target": 1180783}, {"source": 816985, "target": 817136}, {"source": 816985, "target": 988788}, {"source": 816985, "target": 940789}, {"source": 816985, "target": 846965}, {"source": 816985, "target": 817020}, {"source": 913627, "target": 940804}, {"source": 913627, "target": 817293}, {"source": 913627, "target": 817428}, {"source": 913627, "target": 1184917}, {"source": 913627, "target": 817437}, {"source": 913627, "target": 1134112}, {"source": 913627, "target": 1134115}, {"source": 913627, "target": 1134118}, {"source": 913627, "target": 1178665}, {"source": 913627, "target": 817065}, {"source": 913627, "target": 855982}, {"source": 913627, "target": 817330}, {"source": 913627, "target": 817458}, {"source": 913627, "target": 1092921}, {"source": 913627, "target": 817228}, {"source": 913627, "target": 1415757}, {"source": 913627, "target": 905681}, {"source": 913627, "target": 816979}, {"source": 913627, "target": 817237}, {"source": 913627, "target": 940759}, {"source": 913627, "target": 885209}, {"source": 913627, "target": 816985}, {"source": 913627, "target": 885215}, {"source": 913627, "target": 885216}, {"source": 913627, "target": 817376}, {"source": 913627, "target": 989026}, {"source": 913627, "target": 956516}, {"source": 913627, "target": 1132141}, {"source": 913627, "target": 1180783}, {"source": 913627, "target": 817136}, {"source": 913627, "target": 988788}, {"source": 913627, "target": 940789}, {"source": 913627, "target": 846965}, {"source": 913627, "target": 817020}, {"source": 885215, "target": 817280}, {"source": 885215, "target": 817287}, {"source": 885215, "target": 817034}, {"source": 885215, "target": 988300}, {"source": 885215, "target": 817293}, {"source": 885215, "target": 1184917}, {"source": 885215, "target": 817181}, {"source": 885215, "target": 817054}, {"source": 885215, "target": 1134112}, {"source": 885215, "target": 1134115}, {"source": 885215, "target": 1134118}, {"source": 885215, "target": 1178665}, {"source": 885215, "target": 817065}, {"source": 885215, "target": 817069}, {"source": 885215, "target": 855982}, {"source": 885215, "target": 817330}, {"source": 885215, "target": 817458}, {"source": 885215, "target": 1092921}, {"source": 885215, "target": 817338}, {"source": 885215, "target": 846919}, {"source": 885215, "target": 817228}, {"source": 885215, "target": 1415757}, {"source": 885215, "target": 817357}, {"source": 885215, "target": 987343}, {"source": 885215, "target": 846927}, {"source": 885215, "target": 905681}, {"source": 885215, "target": 817361}, {"source": 885215, "target": 816979}, {"source": 885215, "target": 817236}, {"source": 885215, "target": 817237}, {"source": 885215, "target": 940759}, {"source": 885215, "target": 846936}, {"source": 885215, "target": 885209}, {"source": 885215, "target": 816985}, {"source": 885215, "target": 913627}, {"source": 885215, "target": 885214}, {"source": 885215, "target": 885216}, {"source": 885215, "target": 817376}, {"source": 885215, "target": 989026}, {"source": 885215, "target": 817249}, {"source": 885215, "target": 956516}, {"source": 885215, "target": 817121}, {"source": 885215, "target": 885217}, {"source": 885215, "target": 885222}, {"source": 885215, "target": 940776}, {"source": 885215, "target": 817258}, {"source": 885215, "target": 1132141}, {"source": 885215, "target": 1180783}, {"source": 885215, "target": 817136}, {"source": 885215, "target": 988788}, {"source": 885215, "target": 940789}, {"source": 885215, "target": 846965}, {"source": 885215, "target": 817012}, {"source": 885215, "target": 817140}, {"source": 885215, "target": 855801}, {"source": 885215, "target": 817020}, {"source": 989026, "target": 817293}, {"source": 989026, "target": 1184917}, {"source": 989026, "target": 817437}, {"source": 989026, "target": 1134112}, {"source": 989026, "target": 1134115}, {"source": 989026, "target": 1134118}, {"source": 989026, "target": 1178665}, {"source": 989026, "target": 817065}, {"source": 989026, "target": 855982}, {"source": 989026, "target": 817330}, {"source": 989026, "target": 817458}, {"source": 989026, "target": 1092921}, {"source": 989026, "target": 817228}, {"source": 989026, "target": 1415757}, {"source": 989026, "target": 905681}, {"source": 989026, "target": 816979}, {"source": 989026, "target": 817237}, {"source": 989026, "target": 885209}, {"source": 989026, "target": 816985}, {"source": 989026, "target": 913627}, {"source": 989026, "target": 885215}, {"source": 989026, "target": 885216}, {"source": 989026, "target": 817376}, {"source": 989026, "target": 956516}, {"source": 989026, "target": 1132141}, {"source": 989026, "target": 1180783}, {"source": 989026, "target": 817136}, {"source": 989026, "target": 988788}, {"source": 989026, "target": 940789}, {"source": 989026, "target": 846965}, {"source": 989026, "target": 817020}, {"source": 956516, "target": 817280}, {"source": 956516, "target": 940804}, {"source": 956516, "target": 885258}, {"source": 956516, "target": 1184917}, {"source": 956516, "target": 817173}, {"source": 956516, "target": 817047}, {"source": 956516, "target": 817305}, {"source": 956516, "target": 817017}, {"source": 956516, "target": 817306}, {"source": 956516, "target": 957469}, {"source": 956516, "target": 817181}, {"source": 956516, "target": 817054}, {"source": 956516, "target": 1134112}, {"source": 956516, "target": 817437}, {"source": 956516, "target": 1391264}, {"source": 956516, "target": 1134115}, {"source": 956516, "target": 817058}, {"source": 956516, "target": 1134118}, {"source": 956516, "target": 817191}, {"source": 956516, "target": 1178665}, {"source": 956516, "target": 817196}, {"source": 956516, "target": 817068}, {"source": 956516, "target": 817453}, {"source": 956516, "target": 958896}, {"source": 956516, "target": 855985}, {"source": 956516, "target": 817330}, {"source": 956516, "target": 817458}, {"source": 956516, "target": 990002}, {"source": 956516, "target": 817205}, {"source": 956516, "target": 1092921}, {"source": 956516, "target": 945092}, {"source": 956516, "target": 846919}, {"source": 956516, "target": 816970}, {"source": 956516, "target": 998860}, {"source": 956516, "target": 1415757}, {"source": 956516, "target": 817230}, {"source": 956516, "target": 987343}, {"source": 956516, "target": 905681}, {"source": 956516, "target": 817361}, {"source": 956516, "target": 816979}, {"source": 956516, "target": 940758}, {"source": 956516, "target": 885209}, {"source": 956516, "target": 816985}, {"source": 956516, "target": 913627}, {"source": 956516, "target": 816989}, {"source": 956516, "target": 885215}, {"source": 956516, "target": 885216}, {"source": 956516, "target": 817249}, {"source": 956516, "target": 989026}, {"source": 956516, "target": 885218}, {"source": 956516, "target": 1132141}, {"source": 956516, "target": 1180783}, {"source": 956516, "target": 988789}, {"source": 956516, "target": 885239}, {"source": 956516, "target": 817144}, {"source": 956516, "target": 1132153}, {"source": 956516, "target": 1092863}, {"source": 1132141, "target": 1134112}, {"source": 1132141, "target": 989026}, {"source": 1132141, "target": 1134115}, {"source": 1132141, "target": 956516}, {"source": 1132141, "target": 1134118}, {"source": 1132141, "target": 1178665}, {"source": 1132141, "target": 885209}, {"source": 1132141, "target": 1415757}, {"source": 1132141, "target": 1180783}, {"source": 1132141, "target": 905681}, {"source": 1132141, "target": 817330}, {"source": 1132141, "target": 817458}, {"source": 1132141, "target": 816979}, {"source": 1132141, "target": 1184917}, {"source": 1132141, "target": 816985}, {"source": 1132141, "target": 1092921}, {"source": 1132141, "target": 913627}, {"source": 1132141, "target": 885215}, {"source": 1180783, "target": 1134112}, {"source": 1180783, "target": 989026}, {"source": 1180783, "target": 1134115}, {"source": 1180783, "target": 956516}, {"source": 1180783, "target": 1134118}, {"source": 1180783, "target": 1178665}, {"source": 1180783, "target": 885209}, {"source": 1180783, "target": 1415757}, {"source": 1180783, "target": 1132141}, {"source": 1180783, "target": 905681}, {"source": 1180783, "target": 817330}, {"source": 1180783, "target": 817458}, {"source": 1180783, "target": 816979}, {"source": 1180783, "target": 1184917}, {"source": 1180783, "target": 816985}, {"source": 1180783, "target": 1092921}, {"source": 1180783, "target": 913627}, {"source": 1180783, "target": 885215}, {"source": 987552, "target": 885248}, {"source": 987552, "target": 940809}, {"source": 987552, "target": 1092880}, {"source": 987552, "target": 817057}, {"source": 987552, "target": 817058}, {"source": 987552, "target": 817063}, {"source": 987552, "target": 987559}, {"source": 987552, "target": 905900}, {"source": 987552, "target": 817068}, {"source": 987552, "target": 1179822}, {"source": 987552, "target": 817463}, {"source": 987552, "target": 846915}, {"source": 987552, "target": 954950}, {"source": 987552, "target": 817101}, {"source": 987552, "target": 817106}, {"source": 987552, "target": 1092947}, {"source": 987552, "target": 940758}, {"source": 987552, "target": 1092951}, {"source": 987552, "target": 817240}, {"source": 987552, "target": 987101}, {"source": 987552, "target": 989030}, {"source": 987552, "target": 817256}, {"source": 987552, "target": 940778}, {"source": 987552, "target": 1133165}, {"source": 987552, "target": 846964}, {"source": 987552, "target": 846965}, {"source": 987552, "target": 817270}, {"source": 987552, "target": 940793}, {"source": 987552, "target": 885242}, {"source": 987552, "target": 846973}, {"source": 817058, "target": 885248}, {"source": 817058, "target": 885251}, {"source": 817058, "target": 885256}, {"source": 817058, "target": 817163}, {"source": 817058, "target": 817172}, {"source": 817058, "target": 817173}, {"source": 817058, "target": 990763}, {"source": 817058, "target": 846893}, {"source": 817058, "target": 817206}, {"source": 817058, "target": 846905}, {"source": 817058, "target": 846919}, {"source": 817058, "target": 817228}, {"source": 817058, "target": 817229}, {"source": 817058, "target": 846928}, {"source": 817058, "target": 817239}, {"source": 817058, "target": 956516}, {"source": 817058, "target": 817256}, {"source": 817058, "target": 1133165}, {"source": 817058, "target": 1132146}, {"source": 817058, "target": 846963}, {"source": 817058, "target": 846964}, {"source": 817058, "target": 988789}, {"source": 817058, "target": 846965}, {"source": 817058, "target": 817270}, {"source": 817058, "target": 846973}, {"source": 817058, "target": 817280}, {"source": 817058, "target": 817287}, {"source": 817058, "target": 988300}, {"source": 817058, "target": 817296}, {"source": 817058, "target": 1084054}, {"source": 817058, "target": 817305}, {"source": 817058, "target": 1391264}, {"source": 817058, "target": 905900}, {"source": 817058, "target": 817324}, {"source": 817058, "target": 1179822}, {"source": 817058, "target": 905908}, {"source": 817058, "target": 817351}, {"source": 817058, "target": 817361}, {"source": 817058, "target": 940755}, {"source": 817058, "target": 940776}, {"source": 817058, "target": 998636}, {"source": 817058, "target": 940788}, {"source": 817058, "target": 940793}, {"source": 817058, "target": 817404}, {"source": 817058, "target": 940798}, {"source": 817058, "target": 1092863}, {"source": 817058, "target": 817412}, {"source": 817058, "target": 972549}, {"source": 817058, "target": 940809}, {"source": 817058, "target": 1092874}, {"source": 817058, "target": 940811}, {"source": 817058, "target": 817423}, {"source": 817058, "target": 1092880}, {"source": 817058, "target": 1092901}, {"source": 817058, "target": 817455}, {"source": 817058, "target": 990002}, {"source": 817058, "target": 817458}, {"source": 817058, "target": 817463}, {"source": 817058, "target": 816958}, {"source": 817058, "target": 816970}, {"source": 817058, "target": 816977}, {"source": 817058, "target": 1092947}, {"source": 817058, "target": 1092951}, {"source": 817058, "target": 1092952}, {"source": 817058, "target": 816990}, {"source": 817058, "target": 817014}, {"source": 817058, "target": 817017}, {"source": 817058, "target": 817022}, {"source": 817058, "target": 817025}, {"source": 817058, "target": 989078}, {"source": 817058, "target": 817049}, {"source": 817058, "target": 817050}, {"source": 817058, "target": 987552}, {"source": 817058, "target": 817063}, {"source": 817058, "target": 861608}, {"source": 817058, "target": 817068}, {"source": 817058, "target": 958896}, {"source": 817058, "target": 945092}, {"source": 817058, "target": 817094}, {"source": 817058, "target": 885200}, {"source": 817058, "target": 817106}, {"source": 817058, "target": 885206}, {"source": 817058, "target": 885208}, {"source": 817058, "target": 817114}, {"source": 817058, "target": 987101}, {"source": 817058, "target": 817119}, {"source": 817058, "target": 817121}, {"source": 817058, "target": 885218}, {"source": 817058, "target": 988643}, {"source": 817058, "target": 817122}, {"source": 817058, "target": 817126}, {"source": 817058, "target": 817127}, {"source": 817058, "target": 817132}, {"source": 817058, "target": 817141}, {"source": 817058, "target": 885239}, {"source": 817058, "target": 817144}, {"source": 817058, "target": 885242}, {"source": 817058, "target": 885244}, {"source": 817063, "target": 885248}, {"source": 817063, "target": 817410}, {"source": 817063, "target": 885254}, {"source": 817063, "target": 817160}, {"source": 817063, "target": 940809}, {"source": 817063, "target": 1092873}, {"source": 817063, "target": 1092872}, {"source": 817063, "target": 988300}, {"source": 817063, "target": 940814}, {"source": 817063, "target": 817422}, {"source": 817063, "target": 1092880}, {"source": 817063, "target": 988302}, {"source": 817063, "target": 817044}, {"source": 817063, "target": 905877}, {"source": 817063, "target": 817017}, {"source": 817063, "target": 987933}, {"source": 817063, "target": 987934}, {"source": 817063, "target": 987552}, {"source": 817063, "target": 817057}, {"source": 817063, "target": 817058}, {"source": 817063, "target": 817442}, {"source": 817063, "target": 987559}, {"source": 817063, "target": 905900}, {"source": 817063, "target": 817453}, {"source": 817063, "target": 1179822}, {"source": 817063, "target": 951089}, {"source": 817063, "target": 817458}, {"source": 817063, "target": 905908}, {"source": 817063, "target": 817204}, {"source": 817063, "target": 817463}, {"source": 817063, "target": 816958}, {"source": 817063, "target": 1092928}, {"source": 817063, "target": 817218}, {"source": 817063, "target": 846915}, {"source": 817063, "target": 954950}, {"source": 817063, "target": 846918}, {"source": 817063, "target": 817351}, {"source": 817063, "target": 817354}, {"source": 817063, "target": 817101}, {"source": 817063, "target": 885200}, {"source": 817063, "target": 817106}, {"source": 817063, "target": 1092947}, {"source": 817063, "target": 940755}, {"source": 817063, "target": 1092948}, {"source": 817063, "target": 940758}, {"source": 817063, "target": 817109}, {"source": 817063, "target": 817240}, {"source": 817063, "target": 940760}, {"source": 817063, "target": 885207}, {"source": 817063, "target": 1133787}, {"source": 817063, "target": 846933}, {"source": 817063, "target": 987101}, {"source": 817063, "target": 987102}, {"source": 817063, "target": 817238}, {"source": 817063, "target": 846947}, {"source": 817063, "target": 989030}, {"source": 817063, "target": 940774}, {"source": 817063, "target": 817256}, {"source": 817063, "target": 940779}, {"source": 817063, "target": 1133165}, {"source": 817063, "target": 940782}, {"source": 817063, "target": 940785}, {"source": 817063, "target": 846964}, {"source": 817063, "target": 940789}, {"source": 817063, "target": 940788}, {"source": 817063, "target": 817270}, {"source": 817063, "target": 940793}, {"source": 817063, "target": 885242}, {"source": 817063, "target": 846973}, {"source": 817063, "target": 817022}, {"source": 817256, "target": 885248}, {"source": 817256, "target": 817025}, {"source": 817256, "target": 940803}, {"source": 817256, "target": 817414}, {"source": 817256, "target": 817160}, {"source": 817256, "target": 940809}, {"source": 817256, "target": 1092880}, {"source": 817256, "target": 817296}, {"source": 817256, "target": 817429}, {"source": 817256, "target": 817305}, {"source": 817256, "target": 817049}, {"source": 817256, "target": 817017}, {"source": 817256, "target": 817437}, {"source": 817256, "target": 987552}, {"source": 817256, "target": 817058}, {"source": 817256, "target": 817063}, {"source": 817256, "target": 987559}, {"source": 817256, "target": 861608}, {"source": 817256, "target": 905898}, {"source": 817256, "target": 816938}, {"source": 817256, "target": 905900}, {"source": 817256, "target": 817068}, {"source": 817256, "target": 1179822}, {"source": 817256, "target": 823344}, {"source": 817256, "target": 958769}, {"source": 817256, "target": 817330}, {"source": 817256, "target": 817331}, {"source": 817256, "target": 817329}, {"source": 817256, "target": 817205}, {"source": 817256, "target": 817206}, {"source": 817256, "target": 817463}, {"source": 817256, "target": 846909}, {"source": 817256, "target": 816961}, {"source": 817256, "target": 846915}, {"source": 817256, "target": 954950}, {"source": 817256, "target": 817351}, {"source": 817256, "target": 816970}, {"source": 817256, "target": 989900}, {"source": 817256, "target": 817101}, {"source": 817256, "target": 816977}, {"source": 817256, "target": 1092947}, {"source": 817256, "target": 846931}, {"source": 817256, "target": 940755}, {"source": 817256, "target": 940758}, {"source": 817256, "target": 1092951}, {"source": 817256, "target": 846936}, {"source": 817256, "target": 861655}, {"source": 817256, "target": 885208}, {"source": 817256, "target": 987611}, {"source": 817256, "target": 1133916}, {"source": 817256, "target": 987101}, {"source": 817256, "target": 817109}, {"source": 817256, "target": 817119}, {"source": 817256, "target": 1133920}, {"source": 817256, "target": 817249}, {"source": 817256, "target": 817108}, {"source": 817256, "target": 816997}, {"source": 817256, "target": 989030}, {"source": 817256, "target": 885224}, {"source": 817256, "target": 940777}, {"source": 817256, "target": 817132}, {"source": 817256, "target": 1133165}, {"source": 817256, "target": 885229}, {"source": 817256, "target": 817237}, {"source": 817256, "target": 846964}, {"source": 817256, "target": 940789}, {"source": 817256, "target": 885239}, {"source": 817256, "target": 846968}, {"source": 817256, "target": 940793}, {"source": 817256, "target": 885242}, {"source": 817256, "target": 846973}, {"source": 940809, "target": 885248}, {"source": 940809, "target": 817410}, {"source": 940809, "target": 817422}, {"source": 940809, "target": 988302}, {"source": 940809, "target": 1092880}, {"source": 940809, "target": 817044}, {"source": 940809, "target": 817017}, {"source": 940809, "target": 987933}, {"source": 940809, "target": 987552}, {"source": 940809, "target": 817057}, {"source": 940809, "target": 817058}, {"source": 940809, "target": 817442}, {"source": 940809, "target": 817063}, {"source": 940809, "target": 987559}, {"source": 940809, "target": 905900}, {"source": 940809, "target": 817068}, {"source": 940809, "target": 1179822}, {"source": 940809, "target": 817199}, {"source": 940809, "target": 817324}, {"source": 940809, "target": 951089}, {"source": 940809, "target": 817204}, {"source": 940809, "target": 817463}, {"source": 940809, "target": 846915}, {"source": 940809, "target": 846917}, {"source": 940809, "target": 954950}, {"source": 940809, "target": 817351}, {"source": 940809, "target": 817101}, {"source": 940809, "target": 817106}, {"source": 940809, "target": 1092947}, {"source": 940809, "target": 816979}, {"source": 940809, "target": 817109}, {"source": 940809, "target": 940758}, {"source": 940809, "target": 1092951}, {"source": 940809, "target": 817240}, {"source": 940809, "target": 885209}, {"source": 940809, "target": 885211}, {"source": 940809, "target": 987101}, {"source": 940809, "target": 817119}, {"source": 940809, "target": 846947}, {"source": 940809, "target": 940773}, {"source": 940809, "target": 989030}, {"source": 940809, "target": 817125}, {"source": 940809, "target": 817256}, {"source": 940809, "target": 940774}, {"source": 940809, "target": 1133165}, {"source": 940809, "target": 817139}, {"source": 940809, "target": 846964}, {"source": 940809, "target": 817270}, {"source": 940809, "target": 905846}, {"source": 940809, "target": 940793}, {"source": 940809, "target": 885242}, {"source": 940809, "target": 846973}, {"source": 905900, "target": 940800}, {"source": 905900, "target": 1092865}, {"source": 905900, "target": 885250}, {"source": 905900, "target": 817025}, {"source": 905900, "target": 940809}, {"source": 905900, "target": 942986}, {"source": 905900, "target": 940810}, {"source": 905900, "target": 817423}, {"source": 905900, "target": 1092880}, {"source": 905900, "target": 987552}, {"source": 905900, "target": 817058}, {"source": 905900, "target": 817063}, {"source": 905900, "target": 817068}, {"source": 905900, "target": 817196}, {"source": 905900, "target": 1179822}, {"source": 905900, "target": 817328}, {"source": 905900, "target": 817463}, {"source": 905900, "target": 1179581}, {"source": 905900, "target": 846915}, {"source": 905900, "target": 817094}, {"source": 905900, "target": 817352}, {"source": 905900, "target": 1092937}, {"source": 905900, "target": 816970}, {"source": 905900, "target": 987343}, {"source": 905900, "target": 1092947}, {"source": 905900, "target": 1092949}, {"source": 905900, "target": 817239}, {"source": 905900, "target": 1133784}, {"source": 905900, "target": 940761}, {"source": 905900, "target": 1092954}, {"source": 905900, "target": 817114}, {"source": 905900, "target": 940760}, {"source": 905900, "target": 987101}, {"source": 905900, "target": 816990}, {"source": 905900, "target": 987103}, {"source": 905900, "target": 1133795}, {"source": 905900, "target": 817126}, {"source": 905900, "target": 817256}, {"source": 905900, "target": 940776}, {"source": 905900, "target": 885228}, {"source": 905900, "target": 1133165}, {"source": 905900, "target": 817139}, {"source": 905900, "target": 905844}, {"source": 905900, "target": 957172}, {"source": 905900, "target": 885237}, {"source": 905900, "target": 940793}, {"source": 905900, "target": 885242}, {"source": 905900, "target": 846971}, {"source": 905900, "target": 846972}, {"source": 905900, "target": 1092863}, {"source": 1133165, "target": 885248}, {"source": 1133165, "target": 940809}, {"source": 1133165, "target": 1092880}, {"source": 1133165, "target": 987552}, {"source": 1133165, "target": 817057}, {"source": 1133165, "target": 817058}, {"source": 1133165, "target": 817063}, {"source": 1133165, "target": 987559}, {"source": 1133165, "target": 905900}, {"source": 1133165, "target": 817068}, {"source": 1133165, "target": 1179822}, {"source": 1133165, "target": 817463}, {"source": 1133165, "target": 846915}, {"source": 1133165, "target": 954950}, {"source": 1133165, "target": 817101}, {"source": 1133165, "target": 817106}, {"source": 1133165, "target": 1092947}, {"source": 1133165, "target": 940758}, {"source": 1133165, "target": 1092951}, {"source": 1133165, "target": 817240}, {"source": 1133165, "target": 987101}, {"source": 1133165, "target": 989030}, {"source": 1133165, "target": 817256}, {"source": 1133165, "target": 846964}, {"source": 1133165, "target": 817270}, {"source": 1133165, "target": 940793}, {"source": 1133165, "target": 885242}, {"source": 1133165, "target": 846973}, {"source": 1179822, "target": 987552}, {"source": 1179822, "target": 817058}, {"source": 1179822, "target": 989030}, {"source": 1179822, "target": 817063}, {"source": 1179822, "target": 817256}, {"source": 1179822, "target": 940809}, {"source": 1179822, "target": 954950}, {"source": 1179822, "target": 905900}, {"source": 1179822, "target": 1133165}, {"source": 1179822, "target": 817101}, {"source": 1179822, "target": 1092880}, {"source": 1179822, "target": 1092947}, {"source": 1179822, "target": 846964}, {"source": 1179822, "target": 846973}, {"source": 1179822, "target": 940758}, {"source": 1179822, "target": 940793}, {"source": 1179822, "target": 885242}, {"source": 1179822, "target": 987101}, {"source": 1092880, "target": 885248}, {"source": 1092880, "target": 940809}, {"source": 1092880, "target": 987552}, {"source": 1092880, "target": 817057}, {"source": 1092880, "target": 817058}, {"source": 1092880, "target": 817063}, {"source": 1092880, "target": 987559}, {"source": 1092880, "target": 905900}, {"source": 1092880, "target": 817068}, {"source": 1092880, "target": 1179822}, {"source": 1092880, "target": 817463}, {"source": 1092880, "target": 846915}, {"source": 1092880, "target": 954950}, {"source": 1092880, "target": 817101}, {"source": 1092880, "target": 817106}, {"source": 1092880, "target": 1092947}, {"source": 1092880, "target": 940758}, {"source": 1092880, "target": 1092951}, {"source": 1092880, "target": 817240}, {"source": 1092880, "target": 987101}, {"source": 1092880, "target": 989030}, {"source": 1092880, "target": 817256}, {"source": 1092880, "target": 1133165}, {"source": 1092880, "target": 846964}, {"source": 1092880, "target": 817270}, {"source": 1092880, "target": 940793}, {"source": 1092880, "target": 885242}, {"source": 1092880, "target": 846973}, {"source": 1092947, "target": 885248}, {"source": 1092947, "target": 940809}, {"source": 1092947, "target": 1092880}, {"source": 1092947, "target": 987552}, {"source": 1092947, "target": 817057}, {"source": 1092947, "target": 817058}, {"source": 1092947, "target": 817063}, {"source": 1092947, "target": 987559}, {"source": 1092947, "target": 905900}, {"source": 1092947, "target": 817068}, {"source": 1092947, "target": 1179822}, {"source": 1092947, "target": 817463}, {"source": 1092947, "target": 846915}, {"source": 1092947, "target": 954950}, {"source": 1092947, "target": 817101}, {"source": 1092947, "target": 817106}, {"source": 1092947, "target": 940758}, {"source": 1092947, "target": 1092951}, {"source": 1092947, "target": 817240}, {"source": 1092947, "target": 987101}, {"source": 1092947, "target": 989030}, {"source": 1092947, "target": 817256}, {"source": 1092947, "target": 1133165}, {"source": 1092947, "target": 846964}, {"source": 1092947, "target": 817270}, {"source": 1092947, "target": 940793}, {"source": 1092947, "target": 885242}, {"source": 1092947, "target": 846973}, {"source": 940793, "target": 817025}, {"source": 940793, "target": 1092868}, {"source": 940793, "target": 817287}, {"source": 940793, "target": 940809}, {"source": 940793, "target": 905866}, {"source": 940793, "target": 885258}, {"source": 940793, "target": 1092880}, {"source": 940793, "target": 817307}, {"source": 940793, "target": 957469}, {"source": 940793, "target": 987552}, {"source": 940793, "target": 817058}, {"source": 940793, "target": 817063}, {"source": 940793, "target": 861608}, {"source": 940793, "target": 1092907}, {"source": 940793, "target": 905900}, {"source": 940793, "target": 817324}, {"source": 940793, "target": 1179822}, {"source": 940793, "target": 990763}, {"source": 940793, "target": 846893}, {"source": 940793, "target": 817464}, {"source": 940793, "target": 817208}, {"source": 940793, "target": 940794}, {"source": 940793, "target": 988994}, {"source": 940793, "target": 1134020}, {"source": 940793, "target": 817353}, {"source": 940793, "target": 885200}, {"source": 940793, "target": 989009}, {"source": 940793, "target": 817361}, {"source": 940793, "target": 1092947}, {"source": 940793, "target": 816981}, {"source": 940793, "target": 1133782}, {"source": 940793, "target": 989016}, {"source": 940793, "target": 1133786}, {"source": 940793, "target": 987101}, {"source": 940793, "target": 885214}, {"source": 940793, "target": 987613}, {"source": 940793, "target": 816990}, {"source": 940793, "target": 817376}, {"source": 940793, "target": 817256}, {"source": 940793, "target": 1133165}, {"source": 940793, "target": 885242}, {"source": 940793, "target": 817147}, {"source": 940793, "target": 940798}, {"source": 885242, "target": 885248}, {"source": 885242, "target": 988678}, {"source": 885242, "target": 940809}, {"source": 885242, "target": 817422}, {"source": 885242, "target": 817039}, {"source": 885242, "target": 1092880}, {"source": 885242, "target": 817044}, {"source": 885242, "target": 817300}, {"source": 885242, "target": 817049}, {"source": 885242, "target": 957469}, {"source": 885242, "target": 987552}, {"source": 885242, "target": 817057}, {"source": 885242, "target": 817058}, {"source": 885242, "target": 817063}, {"source": 885242, "target": 987559}, {"source": 885242, "target": 905900}, {"source": 885242, "target": 817068}, {"source": 885242, "target": 1179822}, {"source": 885242, "target": 855982}, {"source": 885242, "target": 855985}, {"source": 885242, "target": 817332}, {"source": 885242, "target": 817463}, {"source": 885242, "target": 846905}, {"source": 885242, "target": 846915}, {"source": 885242, "target": 954950}, {"source": 885242, "target": 817101}, {"source": 885242, "target": 817230}, {"source": 885242, "target": 817232}, {"source": 885242, "target": 817106}, {"source": 885242, "target": 1092947}, {"source": 885242, "target": 1133781}, {"source": 885242, "target": 940758}, {"source": 885242, "target": 1092951}, {"source": 885242, "target": 817240}, {"source": 885242, "target": 940761}, {"source": 885242, "target": 987101}, {"source": 885242, "target": 940767}, {"source": 885242, "target": 989030}, {"source": 885242, "target": 817256}, {"source": 885242, "target": 1133165}, {"source": 885242, "target": 846964}, {"source": 885242, "target": 817270}, {"source": 885242, "target": 940793}, {"source": 885242, "target": 885244}, {"source": 885242, "target": 846973}, {"source": 987101, "target": 957958}, {"source": 987101, "target": 1092872}, {"source": 987101, "target": 940809}, {"source": 987101, "target": 817165}, {"source": 987101, "target": 861455}, {"source": 987101, "target": 1092880}, {"source": 987101, "target": 989078}, {"source": 987101, "target": 989079}, {"source": 987101, "target": 817177}, {"source": 987101, "target": 989085}, {"source": 987101, "target": 987552}, {"source": 987101, "target": 817058}, {"source": 987101, "target": 817063}, {"source": 987101, "target": 817147}, {"source": 987101, "target": 905898}, {"source": 987101, "target": 905900}, {"source": 987101, "target": 817068}, {"source": 987101, "target": 1179822}, {"source": 987101, "target": 1092911}, {"source": 987101, "target": 1092913}, {"source": 987101, "target": 846898}, {"source": 987101, "target": 996152}, {"source": 987101, "target": 846915}, {"source": 987101, "target": 954950}, {"source": 987101, "target": 817094}, {"source": 987101, "target": 954825}, {"source": 987101, "target": 817353}, {"source": 987101, "target": 817101}, {"source": 987101, "target": 817361}, {"source": 987101, "target": 1092947}, {"source": 987101, "target": 885203}, {"source": 987101, "target": 940756}, {"source": 987101, "target": 940758}, {"source": 987101, "target": 1092951}, {"source": 987101, "target": 846933}, {"source": 987101, "target": 940759}, {"source": 987101, "target": 987099}, {"source": 987101, "target": 989020}, {"source": 987101, "target": 817375}, {"source": 987101, "target": 989030}, {"source": 987101, "target": 817256}, {"source": 987101, "target": 1133165}, {"source": 987101, "target": 846963}, {"source": 987101, "target": 846964}, {"source": 987101, "target": 940793}, {"source": 987101, "target": 885242}, {"source": 987101, "target": 885243}, {"source": 987101, "target": 846973}, {"source": 987101, "target": 817406}, {"source": 987101, "target": 817279}, {"source": 816960, "target": 940801}, {"source": 816960, "target": 817154}, {"source": 816960, "target": 817025}, {"source": 816960, "target": 817412}, {"source": 816960, "target": 817159}, {"source": 816960, "target": 993675}, {"source": 816960, "target": 940814}, {"source": 816960, "target": 817039}, {"source": 816960, "target": 817172}, {"source": 816960, "target": 817047}, {"source": 816960, "target": 817175}, {"source": 816960, "target": 1409308}, {"source": 816960, "target": 817060}, {"source": 816960, "target": 987558}, {"source": 816960, "target": 905898}, {"source": 816960, "target": 817068}, {"source": 816960, "target": 855982}, {"source": 816960, "target": 817329}, {"source": 816960, "target": 1134004}, {"source": 816960, "target": 1206073}, {"source": 816960, "target": 816961}, {"source": 816960, "target": 816970}, {"source": 816960, "target": 817230}, {"source": 816960, "target": 846931}, {"source": 816960, "target": 817236}, {"source": 816960, "target": 817237}, {"source": 816960, "target": 1179862}, {"source": 816960, "target": 1132119}, {"source": 816960, "target": 817249}, {"source": 816960, "target": 817265}, {"source": 816960, "target": 905846}, {"source": 816960, "target": 885243}, {"source": 816960, "target": 940799}, {"source": 816961, "target": 940801}, {"source": 816961, "target": 817154}, {"source": 816961, "target": 817412}, {"source": 816961, "target": 817159}, {"source": 816961, "target": 817160}, {"source": 816961, "target": 993675}, {"source": 816961, "target": 940814}, {"source": 816961, "target": 817039}, {"source": 816961, "target": 817422}, {"source": 816961, "target": 817172}, {"source": 816961, "target": 817047}, {"source": 816961, "target": 817175}, {"source": 816961, "target": 1409308}, {"source": 816961, "target": 905898}, {"source": 816961, "target": 817068}, {"source": 816961, "target": 817329}, {"source": 816961, "target": 817330}, {"source": 816961, "target": 1134004}, {"source": 816961, "target": 817205}, {"source": 816961, "target": 1206073}, {"source": 816961, "target": 817338}, {"source": 816961, "target": 816960}, {"source": 816961, "target": 988995}, {"source": 816961, "target": 817351}, {"source": 816961, "target": 816970}, {"source": 816961, "target": 817230}, {"source": 816961, "target": 817236}, {"source": 816961, "target": 817237}, {"source": 816961, "target": 1179862}, {"source": 816961, "target": 1132119}, {"source": 816961, "target": 817109}, {"source": 816961, "target": 885208}, {"source": 816961, "target": 817249}, {"source": 816961, "target": 940771}, {"source": 816961, "target": 885224}, {"source": 816961, "target": 817256}, {"source": 816961, "target": 817132}, {"source": 816961, "target": 940782}, {"source": 816961, "target": 817265}, {"source": 816961, "target": 817012}, {"source": 816961, "target": 905846}, {"source": 816961, "target": 885243}, {"source": 816961, "target": 940799}, {"source": 817249, "target": 817154}, {"source": 817249, "target": 817159}, {"source": 817249, "target": 885258}, {"source": 817249, "target": 817172}, {"source": 817249, "target": 817175}, {"source": 817249, "target": 817181}, {"source": 817249, "target": 817205}, {"source": 817249, "target": 817206}, {"source": 817249, "target": 846909}, {"source": 817249, "target": 846919}, {"source": 817249, "target": 1415757}, {"source": 817249, "target": 817230}, {"source": 817249, "target": 817232}, {"source": 817249, "target": 846931}, {"source": 817249, "target": 817236}, {"source": 817249, "target": 817237}, {"source": 817249, "target": 1132119}, {"source": 817249, "target": 956516}, {"source": 817249, "target": 817256}, {"source": 817249, "target": 817258}, {"source": 817249, "target": 817265}, {"source": 817249, "target": 817270}, {"source": 817249, "target": 846968}, {"source": 817249, "target": 817280}, {"source": 817249, "target": 817296}, {"source": 817249, "target": 817305}, {"source": 817249, "target": 905898}, {"source": 817249, "target": 817324}, {"source": 817249, "target": 817329}, {"source": 817249, "target": 817331}, {"source": 817249, "target": 987343}, {"source": 817249, "target": 817361}, {"source": 817249, "target": 940755}, {"source": 817249, "target": 1179862}, {"source": 817249, "target": 940771}, {"source": 817249, "target": 940777}, {"source": 817249, "target": 940782}, {"source": 817249, "target": 940789}, {"source": 817249, "target": 855801}, {"source": 817249, "target": 940799}, {"source": 817249, "target": 940801}, {"source": 817249, "target": 940803}, {"source": 817249, "target": 817414}, {"source": 817249, "target": 940814}, {"source": 817249, "target": 817422}, {"source": 817249, "target": 817429}, {"source": 817249, "target": 817437}, {"source": 817249, "target": 958769}, {"source": 817249, "target": 885243}, {"source": 817249, "target": 817463}, {"source": 817249, "target": 1206073}, {"source": 817249, "target": 816960}, {"source": 817249, "target": 816961}, {"source": 817249, "target": 816977}, {"source": 817249, "target": 816979}, {"source": 817249, "target": 816981}, {"source": 817249, "target": 816997}, {"source": 817249, "target": 817020}, {"source": 817249, "target": 993675}, {"source": 817249, "target": 817039}, {"source": 817249, "target": 817047}, {"source": 817249, "target": 817049}, {"source": 817249, "target": 817054}, {"source": 817249, "target": 987558}, {"source": 817249, "target": 861608}, {"source": 817249, "target": 817068}, {"source": 817249, "target": 817069}, {"source": 817249, "target": 1134004}, {"source": 817249, "target": 861655}, {"source": 817249, "target": 885208}, {"source": 817249, "target": 987611}, {"source": 817249, "target": 885215}, {"source": 817249, "target": 885224}, {"source": 817249, "target": 885229}, {"source": 817249, "target": 817136}, {"source": 817249, "target": 885239}, {"source": 817249, "target": 817147}, {"source": 940801, "target": 817154}, {"source": 940801, "target": 940805}, {"source": 940801, "target": 885254}, {"source": 940801, "target": 817159}, {"source": 940801, "target": 940807}, {"source": 940801, "target": 817160}, {"source": 940801, "target": 905866}, {"source": 940801, "target": 993675}, {"source": 940801, "target": 940812}, {"source": 940801, "target": 940814}, {"source": 940801, "target": 817039}, {"source": 940801, "target": 817422}, {"source": 940801, "target": 988302}, {"source": 940801, "target": 817038}, {"source": 940801, "target": 817172}, {"source": 940801, "target": 817173}, {"source": 940801, "target": 817047}, {"source": 940801, "target": 817175}, {"source": 940801, "target": 817049}, {"source": 940801, "target": 817177}, {"source": 940801, "target": 817307}, {"source": 940801, "target": 957469}, {"source": 940801, "target": 987934}, {"source": 940801, "target": 1092897}, {"source": 940801, "target": 817315}, {"source": 940801, "target": 817317}, {"source": 940801, "target": 817191}, {"source": 940801, "target": 1133995}, {"source": 940801, "target": 817068}, {"source": 940801, "target": 817069}, {"source": 940801, "target": 817329}, {"source": 940801, "target": 817074}, {"source": 940801, "target": 817458}, {"source": 940801, "target": 1134004}, {"source": 940801, "target": 817205}, {"source": 940801, "target": 817208}, {"source": 940801, "target": 1206073}, {"source": 940801, "target": 816958}, {"source": 940801, "target": 1134015}, {"source": 940801, "target": 816960}, {"source": 940801, "target": 816961}, {"source": 940801, "target": 1134019}, {"source": 940801, "target": 988996}, {"source": 940801, "target": 846919}, {"source": 940801, "target": 817354}, {"source": 940801, "target": 817230}, {"source": 940801, "target": 989006}, {"source": 940801, "target": 817236}, {"source": 940801, "target": 1179862}, {"source": 940801, "target": 1132119}, {"source": 940801, "target": 987102}, {"source": 940801, "target": 940768}, {"source": 940801, "target": 817249}, {"source": 940801, "target": 846947}, {"source": 940801, "target": 846949}, {"source": 940801, "target": 817126}, {"source": 940801, "target": 817127}, {"source": 940801, "target": 817000}, {"source": 940801, "target": 817125}, {"source": 940801, "target": 885229}, {"source": 940801, "target": 817133}, {"source": 940801, "target": 817265}, {"source": 940801, "target": 940785}, {"source": 940801, "target": 817140}, {"source": 940801, "target": 817270}, {"source": 940801, "target": 905846}, {"source": 817159, "target": 940801}, {"source": 817159, "target": 817154}, {"source": 817159, "target": 817412}, {"source": 817159, "target": 993675}, {"source": 817159, "target": 988300}, {"source": 817159, "target": 940814}, {"source": 817159, "target": 817039}, {"source": 817159, "target": 817423}, {"source": 817159, "target": 817172}, {"source": 817159, "target": 817173}, {"source": 817159, "target": 817047}, {"source": 817159, "target": 817175}, {"source": 817159, "target": 1409308}, {"source": 817159, "target": 817054}, {"source": 817159, "target": 905898}, {"source": 817159, "target": 817068}, {"source": 817159, "target": 817196}, {"source": 817159, "target": 817455}, {"source": 817159, "target": 817329}, {"source": 817159, "target": 1134004}, {"source": 817159, "target": 817463}, {"source": 817159, "target": 1206073}, {"source": 817159, "target": 817338}, {"source": 817159, "target": 846905}, {"source": 817159, "target": 816960}, {"source": 817159, "target": 816961}, {"source": 817159, "target": 988994}, {"source": 817159, "target": 817091}, {"source": 817159, "target": 817344}, {"source": 817159, "target": 816970}, {"source": 817159, "target": 817230}, {"source": 817159, "target": 817236}, {"source": 817159, "target": 817237}, {"source": 817159, "target": 1179862}, {"source": 817159, "target": 1132119}, {"source": 817159, "target": 885206}, {"source": 817159, "target": 817115}, {"source": 817159, "target": 885214}, {"source": 817159, "target": 817376}, {"source": 817159, "target": 817249}, {"source": 817159, "target": 885217}, {"source": 817159, "target": 885229}, {"source": 817159, "target": 817265}, {"source": 817159, "target": 905846}, {"source": 817159, "target": 885243}, {"source": 817159, "target": 940799}, {"source": 817068, "target": 885250}, {"source": 817068, "target": 885251}, {"source": 817068, "target": 817159}, {"source": 817068, "target": 817173}, {"source": 817068, "target": 817175}, {"source": 817068, "target": 817177}, {"source": 817068, "target": 817191}, {"source": 817068, "target": 817196}, {"source": 817068, "target": 817218}, {"source": 817068, "target": 954950}, {"source": 817068, "target": 817228}, {"source": 817068, "target": 817230}, {"source": 817068, "target": 846928}, {"source": 817068, "target": 817236}, {"source": 817068, "target": 817237}, {"source": 817068, "target": 817249}, {"source": 817068, "target": 956516}, {"source": 817068, "target": 846949}, {"source": 817068, "target": 817256}, {"source": 817068, "target": 1133165}, {"source": 817068, "target": 817265}, {"source": 817068, "target": 846964}, {"source": 817068, "target": 905844}, {"source": 817068, "target": 817270}, {"source": 817068, "target": 988789}, {"source": 817068, "target": 846971}, {"source": 817068, "target": 846972}, {"source": 817068, "target": 846973}, {"source": 817068, "target": 817279}, {"source": 817068, "target": 817280}, {"source": 817068, "target": 817305}, {"source": 817068, "target": 817306}, {"source": 817068, "target": 1391264}, {"source": 817068, "target": 905900}, {"source": 817068, "target": 817329}, {"source": 817068, "target": 905919}, {"source": 817068, "target": 1179862}, {"source": 817068, "target": 940758}, {"source": 817068, "target": 1133784}, {"source": 817068, "target": 940761}, {"source": 817068, "target": 817376}, {"source": 817068, "target": 1133795}, {"source": 817068, "target": 940776}, {"source": 817068, "target": 855801}, {"source": 817068, "target": 817406}, {"source": 817068, "target": 1092863}, {"source": 817068, "target": 940801}, {"source": 817068, "target": 817412}, {"source": 817068, "target": 940805}, {"source": 817068, "target": 940809}, {"source": 817068, "target": 940814}, {"source": 817068, "target": 817423}, {"source": 817068, "target": 817422}, {"source": 817068, "target": 1092881}, {"source": 817068, "target": 1092880}, {"source": 817068, "target": 817429}, {"source": 817068, "target": 817453}, {"source": 817068, "target": 990002}, {"source": 817068, "target": 1206073}, {"source": 817068, "target": 1092921}, {"source": 817068, "target": 816960}, {"source": 817068, "target": 816961}, {"source": 817068, "target": 1092937}, {"source": 817068, "target": 989006}, {"source": 817068, "target": 1092947}, {"source": 817068, "target": 1133911}, {"source": 817068, "target": 989015}, {"source": 817068, "target": 1092951}, {"source": 817068, "target": 1092954}, {"source": 817068, "target": 1133914}, {"source": 817068, "target": 816989}, {"source": 817068, "target": 1133917}, {"source": 817068, "target": 817012}, {"source": 817068, "target": 817017}, {"source": 817068, "target": 942986}, {"source": 817068, "target": 817039}, {"source": 817068, "target": 817047}, {"source": 817068, "target": 817049}, {"source": 817068, "target": 987552}, {"source": 817068, "target": 817057}, {"source": 817068, "target": 817058}, {"source": 817068, "target": 1133995}, {"source": 817068, "target": 817069}, {"source": 817068, "target": 958896}, {"source": 817068, "target": 855985}, {"source": 817068, "target": 817074}, {"source": 817068, "target": 1134004}, {"source": 817068, "target": 963001}, {"source": 817068, "target": 1134015}, {"source": 817068, "target": 1134019}, {"source": 817068, "target": 945092}, {"source": 817068, "target": 954825}, {"source": 817068, "target": 987101}, {"source": 817068, "target": 885217}, {"source": 817068, "target": 885218}, {"source": 817068, "target": 817127}, {"source": 817068, "target": 885229}, {"source": 817068, "target": 817140}, {"source": 817068, "target": 885239}, {"source": 817068, "target": 817144}, {"source": 817068, "target": 885242}, {"source": 817230, "target": 940801}, {"source": 817230, "target": 1133825}, {"source": 817230, "target": 885251}, {"source": 817230, "target": 817154}, {"source": 817230, "target": 972550}, {"source": 817230, "target": 817159}, {"source": 817230, "target": 817287}, {"source": 817230, "target": 988678}, {"source": 817230, "target": 988301}, {"source": 817230, "target": 940814}, {"source": 817230, "target": 817039}, {"source": 817230, "target": 817165}, {"source": 817230, "target": 817422}, {"source": 817230, "target": 817300}, {"source": 817230, "target": 817173}, {"source": 817230, "target": 817047}, {"source": 817230, "target": 817175}, {"source": 817230, "target": 1133847}, {"source": 817230, "target": 817306}, {"source": 817230, "target": 817049}, {"source": 817230, "target": 1409308}, {"source": 817230, "target": 1391264}, {"source": 817230, "target": 957474}, {"source": 817230, "target": 817191}, {"source": 817230, "target": 940841}, {"source": 817230, "target": 817068}, {"source": 817230, "target": 817453}, {"source": 817230, "target": 855982}, {"source": 817230, "target": 817324}, {"source": 817230, "target": 958896}, {"source": 817230, "target": 817329}, {"source": 817230, "target": 990002}, {"source": 817230, "target": 855985}, {"source": 817230, "target": 1134004}, {"source": 817230, "target": 996152}, {"source": 817230, "target": 1206073}, {"source": 817230, "target": 816960}, {"source": 817230, "target": 816961}, {"source": 817230, "target": 817344}, {"source": 817230, "target": 817091}, {"source": 817230, "target": 988996}, {"source": 817230, "target": 945092}, {"source": 817230, "target": 1092943}, {"source": 817230, "target": 817232}, {"source": 817230, "target": 1181394}, {"source": 817230, "target": 816979}, {"source": 817230, "target": 817236}, {"source": 817230, "target": 817237}, {"source": 817230, "target": 1179862}, {"source": 817230, "target": 1092950}, {"source": 817230, "target": 816981}, {"source": 817230, "target": 940761}, {"source": 817230, "target": 940767}, {"source": 817230, "target": 817249}, {"source": 817230, "target": 885218}, {"source": 817230, "target": 846947}, {"source": 817230, "target": 1133924}, {"source": 817230, "target": 989029}, {"source": 817230, "target": 989030}, {"source": 817230, "target": 1133158}, {"source": 817230, "target": 940776}, {"source": 817230, "target": 956516}, {"source": 817230, "target": 885239}, {"source": 817230, "target": 903020}, {"source": 817230, "target": 817265}, {"source": 817230, "target": 885242}, {"source": 817230, "target": 1133812}, {"source": 817230, "target": 988789}, {"source": 817230, "target": 1133815}, {"source": 817230, "target": 817144}, {"source": 817230, "target": 817017}, {"source": 817230, "target": 940794}, {"source": 817230, "target": 885243}, {"source": 817230, "target": 1182205}, {"source": 817230, "target": 1092863}, {"source": 817039, "target": 940801}, {"source": 817039, "target": 817154}, {"source": 817039, "target": 817412}, {"source": 817039, "target": 817159}, {"source": 817039, "target": 993675}, {"source": 817039, "target": 940814}, {"source": 817039, "target": 817422}, {"source": 817039, "target": 817172}, {"source": 817039, "target": 817300}, {"source": 817039, "target": 817047}, {"source": 817039, "target": 817175}, {"source": 817039, "target": 817049}, {"source": 817039, "target": 1409308}, {"source": 817039, "target": 817060}, {"source": 817039, "target": 987558}, {"source": 817039, "target": 905898}, {"source": 817039, "target": 817068}, {"source": 817039, "target": 817324}, {"source": 817039, "target": 817329}, {"source": 817039, "target": 1134004}, {"source": 817039, "target": 1206073}, {"source": 817039, "target": 816960}, {"source": 817039, "target": 816961}, {"source": 817039, "target": 816970}, {"source": 817039, "target": 817230}, {"source": 817039, "target": 817232}, {"source": 817039, "target": 846931}, {"source": 817039, "target": 817236}, {"source": 817039, "target": 817237}, {"source": 817039, "target": 1179862}, {"source": 817039, "target": 1132119}, {"source": 817039, "target": 940761}, {"source": 817039, "target": 940767}, {"source": 817039, "target": 817249}, {"source": 817039, "target": 817265}, {"source": 817039, "target": 905846}, {"source": 817039, "target": 885242}, {"source": 817039, "target": 885243}, {"source": 817039, "target": 940799}, {"source": 940814, "target": 940801}, {"source": 940814, "target": 817154}, {"source": 940814, "target": 885251}, {"source": 940814, "target": 817412}, {"source": 940814, "target": 885252}, {"source": 940814, "target": 885254}, {"source": 940814, "target": 817159}, {"source": 940814, "target": 1092872}, {"source": 940814, "target": 1092873}, {"source": 940814, "target": 817160}, {"source": 940814, "target": 993675}, {"source": 940814, "target": 817293}, {"source": 940814, "target": 817038}, {"source": 940814, "target": 817039}, {"source": 940814, "target": 817172}, {"source": 940814, "target": 817173}, {"source": 940814, "target": 817047}, {"source": 940814, "target": 817175}, {"source": 940814, "target": 1409308}, {"source": 940814, "target": 987934}, {"source": 940814, "target": 817063}, {"source": 940814, "target": 905898}, {"source": 940814, "target": 817068}, {"source": 940814, "target": 817453}, {"source": 940814, "target": 817329}, {"source": 940814, "target": 817458}, {"source": 940814, "target": 1134004}, {"source": 940814, "target": 817204}, {"source": 940814, "target": 1206073}, {"source": 940814, "target": 816958}, {"source": 940814, "target": 905919}, {"source": 940814, "target": 816960}, {"source": 940814, "target": 816961}, {"source": 940814, "target": 817091}, {"source": 940814, "target": 988996}, {"source": 940814, "target": 816970}, {"source": 940814, "target": 817354}, {"source": 940814, "target": 817230}, {"source": 940814, "target": 817236}, {"source": 940814, "target": 1179862}, {"source": 940814, "target": 1132119}, {"source": 940814, "target": 817111}, {"source": 940814, "target": 987102}, {"source": 940814, "target": 817249}, {"source": 940814, "target": 846946}, {"source": 940814, "target": 816997}, {"source": 940814, "target": 817126}, {"source": 940814, "target": 940779}, {"source": 940814, "target": 817265}, {"source": 940814, "target": 940785}, {"source": 940814, "target": 905846}, {"source": 940814, "target": 817014}, {"source": 940814, "target": 885243}, {"source": 940814, "target": 940799}, {"source": 817329, "target": 940800}, {"source": 817329, "target": 940801}, {"source": 817329, "target": 817154}, {"source": 817329, "target": 817025}, {"source": 817329, "target": 817412}, {"source": 817329, "target": 940804}, {"source": 817329, "target": 817159}, {"source": 817329, "target": 817160}, {"source": 817329, "target": 993675}, {"source": 817329, "target": 940814}, {"source": 817329, "target": 817039}, {"source": 817329, "target": 817422}, {"source": 817329, "target": 817172}, {"source": 817329, "target": 817428}, {"source": 817329, "target": 817047}, {"source": 817329, "target": 817175}, {"source": 817329, "target": 1409308}, {"source": 817329, "target": 817317}, {"source": 817329, "target": 905898}, {"source": 817329, "target": 817068}, {"source": 817329, "target": 855982}, {"source": 817329, "target": 817328}, {"source": 817329, "target": 1134004}, {"source": 817329, "target": 1206073}, {"source": 817329, "target": 817338}, {"source": 817329, "target": 817279}, {"source": 817329, "target": 816960}, {"source": 817329, "target": 816961}, {"source": 817329, "target": 817218}, {"source": 817329, "target": 988995}, {"source": 817329, "target": 817351}, {"source": 817329, "target": 816970}, {"source": 817329, "target": 817230}, {"source": 817329, "target": 817236}, {"source": 817329, "target": 817237}, {"source": 817329, "target": 1179862}, {"source": 817329, "target": 1132119}, {"source": 817329, "target": 817109}, {"source": 817329, "target": 885208}, {"source": 817329, "target": 816985}, {"source": 817329, "target": 846933}, {"source": 817329, "target": 885207}, {"source": 817329, "target": 885216}, {"source": 817329, "target": 817249}, {"source": 817329, "target": 940771}, {"source": 817329, "target": 817126}, {"source": 817329, "target": 885224}, {"source": 817329, "target": 817256}, {"source": 817329, "target": 940782}, {"source": 817329, "target": 817265}, {"source": 817329, "target": 846963}, {"source": 817329, "target": 817012}, {"source": 817329, "target": 988788}, {"source": 817329, "target": 905846}, {"source": 817329, "target": 817017}, {"source": 817329, "target": 885243}, {"source": 817329, "target": 940799}, {"source": 817265, "target": 940801}, {"source": 817265, "target": 817154}, {"source": 817265, "target": 817025}, {"source": 817265, "target": 817412}, {"source": 817265, "target": 817159}, {"source": 817265, "target": 993675}, {"source": 817265, "target": 940814}, {"source": 817265, "target": 817039}, {"source": 817265, "target": 817172}, {"source": 817265, "target": 817047}, {"source": 817265, "target": 817175}, {"source": 817265, "target": 1409308}, {"source": 817265, "target": 817060}, {"source": 817265, "target": 987558}, {"source": 817265, "target": 905898}, {"source": 817265, "target": 817068}, {"source": 817265, "target": 817069}, {"source": 817265, "target": 855982}, {"source": 817265, "target": 817329}, {"source": 817265, "target": 1134004}, {"source": 817265, "target": 1206073}, {"source": 817265, "target": 816960}, {"source": 817265, "target": 816961}, {"source": 817265, "target": 816970}, {"source": 817265, "target": 817230}, {"source": 817265, "target": 846931}, {"source": 817265, "target": 817236}, {"source": 817265, "target": 817237}, {"source": 817265, "target": 1179862}, {"source": 817265, "target": 1132119}, {"source": 817265, "target": 817249}, {"source": 817265, "target": 905846}, {"source": 817265, "target": 885243}, {"source": 817265, "target": 817020}, {"source": 817265, "target": 940799}, {"source": 1134004, "target": 940801}, {"source": 1134004, "target": 817154}, {"source": 1134004, "target": 817412}, {"source": 1134004, "target": 817159}, {"source": 1134004, "target": 993675}, {"source": 1134004, "target": 940814}, {"source": 1134004, "target": 817039}, {"source": 1134004, "target": 817172}, {"source": 1134004, "target": 817175}, {"source": 1134004, "target": 817047}, {"source": 1134004, "target": 1409308}, {"source": 1134004, "target": 905898}, {"source": 1134004, "target": 817068}, {"source": 1134004, "target": 817329}, {"source": 1134004, "target": 1206073}, {"source": 1134004, "target": 816960}, {"source": 1134004, "target": 816961}, {"source": 1134004, "target": 817230}, {"source": 1134004, "target": 817236}, {"source": 1134004, "target": 1179862}, {"source": 1134004, "target": 1132119}, {"source": 1134004, "target": 817249}, {"source": 1134004, "target": 817265}, {"source": 1134004, "target": 885243}, {"source": 1134004, "target": 940799}, {"source": 817236, "target": 940801}, {"source": 817236, "target": 817154}, {"source": 817236, "target": 817412}, {"source": 817236, "target": 817159}, {"source": 817236, "target": 817034}, {"source": 817236, "target": 993675}, {"source": 817236, "target": 940814}, {"source": 817236, "target": 817039}, {"source": 817236, "target": 817172}, {"source": 817236, "target": 817175}, {"source": 817236, "target": 817047}, {"source": 817236, "target": 1409308}, {"source": 817236, "target": 817181}, {"source": 817236, "target": 817060}, {"source": 817236, "target": 987558}, {"source": 817236, "target": 817065}, {"source": 817236, "target": 905898}, {"source": 817236, "target": 817068}, {"source": 817236, "target": 817324}, {"source": 817236, "target": 855982}, {"source": 817236, "target": 817329}, {"source": 817236, "target": 1134004}, {"source": 817236, "target": 817463}, {"source": 817236, "target": 1206073}, {"source": 817236, "target": 817338}, {"source": 817236, "target": 816960}, {"source": 817236, "target": 816961}, {"source": 817236, "target": 817091}, {"source": 817236, "target": 816970}, {"source": 817236, "target": 817357}, {"source": 817236, "target": 817230}, {"source": 817236, "target": 846927}, {"source": 817236, "target": 846931}, {"source": 817236, "target": 817237}, {"source": 817236, "target": 1179862}, {"source": 817236, "target": 1132119}, {"source": 817236, "target": 940759}, {"source": 817236, "target": 846936}, {"source": 817236, "target": 885214}, {"source": 817236, "target": 885215}, {"source": 817236, "target": 885216}, {"source": 817236, "target": 817249}, {"source": 817236, "target": 885217}, {"source": 817236, "target": 816997}, {"source": 817236, "target": 885222}, {"source": 817236, "target": 940776}, {"source": 817236, "target": 817258}, {"source": 817236, "target": 817265}, {"source": 817236, "target": 817140}, {"source": 817236, "target": 905846}, {"source": 817236, "target": 855801}, {"source": 817236, "target": 885243}, {"source": 817236, "target": 817020}, {"source": 817236, "target": 940799}, {"source": 1179862, "target": 816960}, {"source": 1179862, "target": 816961}, {"source": 1179862, "target": 817249}, {"source": 1179862, "target": 940801}, {"source": 1179862, "target": 817159}, {"source": 1179862, "target": 817068}, {"source": 1179862, "target": 817230}, {"source": 1179862, "target": 817039}, {"source": 1179862, "target": 940814}, {"source": 1179862, "target": 817329}, {"source": 1179862, "target": 817265}, {"source": 1179862, "target": 1134004}, {"source": 1179862, "target": 817236}, {"source": 1179862, "target": 817175}, {"source": 1179862, "target": 817047}, {"source": 1179862, "target": 1206073}, {"source": 817047, "target": 885251}, {"source": 817047, "target": 885252}, {"source": 817047, "target": 885254}, {"source": 817047, "target": 817159}, {"source": 817047, "target": 817160}, {"source": 817047, "target": 817165}, {"source": 817047, "target": 817173}, {"source": 817047, "target": 817175}, {"source": 817047, "target": 817181}, {"source": 817047, "target": 846898}, {"source": 817047, "target": 817204}, {"source": 817047, "target": 817208}, {"source": 817047, "target": 954950}, {"source": 817047, "target": 846919}, {"source": 817047, "target": 817230}, {"source": 817047, "target": 817236}, {"source": 817047, "target": 817238}, {"source": 817047, "target": 817249}, {"source": 817047, "target": 846946}, {"source": 817047, "target": 846947}, {"source": 817047, "target": 956516}, {"source": 817047, "target": 817258}, {"source": 817047, "target": 817265}, {"source": 817047, "target": 988789}, {"source": 817047, "target": 905846}, {"source": 817047, "target": 817279}, {"source": 817047, "target": 817293}, {"source": 817047, "target": 988302}, {"source": 817047, "target": 905877}, {"source": 817047, "target": 817306}, {"source": 817047, "target": 1391264}, {"source": 817047, "target": 817315}, {"source": 817047, "target": 817317}, {"source": 817047, "target": 817329}, {"source": 817047, "target": 817331}, {"source": 817047, "target": 905919}, {"source": 817047, "target": 817351}, {"source": 817047, "target": 817353}, {"source": 817047, "target": 817354}, {"source": 817047, "target": 1179862}, {"source": 817047, "target": 817375}, {"source": 817047, "target": 940768}, {"source": 817047, "target": 940774}, {"source": 817047, "target": 940779}, {"source": 817047, "target": 940785}, {"source": 817047, "target": 940789}, {"source": 817047, "target": 817406}, {"source": 817047, "target": 1092863}, {"source": 817047, "target": 940801}, {"source": 817047, "target": 940807}, {"source": 817047, "target": 940812}, {"source": 817047, "target": 940814}, {"source": 817047, "target": 861455}, {"source": 817047, "target": 987934}, {"source": 817047, "target": 1092897}, {"source": 817047, "target": 817458}, {"source": 817047, "target": 1206073}, {"source": 817047, "target": 816958}, {"source": 817047, "target": 816960}, {"source": 817047, "target": 816961}, {"source": 817047, "target": 988996}, {"source": 817047, "target": 1092952}, {"source": 817047, "target": 816990}, {"source": 817047, "target": 816997}, {"source": 817047, "target": 817000}, {"source": 817047, "target": 817014}, {"source": 817047, "target": 817017}, {"source": 817047, "target": 817038}, {"source": 817047, "target": 817039}, {"source": 817047, "target": 817147}, {"source": 817047, "target": 851371}, {"source": 817047, "target": 817068}, {"source": 817047, "target": 958896}, {"source": 817047, "target": 855985}, {"source": 817047, "target": 1134004}, {"source": 817047, "target": 817091}, {"source": 817047, "target": 945092}, {"source": 817047, "target": 885203}, {"source": 817047, "target": 817111}, {"source": 817047, "target": 987102}, {"source": 817047, "target": 885218}, {"source": 817047, "target": 817126}, {"source": 817047, "target": 885239}, {"source": 817047, "target": 817144}, {"source": 817047, "target": 885243}, {"source": 817175, "target": 940801}, {"source": 817175, "target": 817154}, {"source": 817175, "target": 1092867}, {"source": 817175, "target": 885252}, {"source": 817175, "target": 885251}, {"source": 817175, "target": 988678}, {"source": 817175, "target": 817159}, {"source": 817175, "target": 846983}, {"source": 817175, "target": 817034}, {"source": 817175, "target": 993675}, {"source": 817175, "target": 1136397}, {"source": 817175, "target": 940814}, {"source": 817175, "target": 817039}, {"source": 817175, "target": 817038}, {"source": 817175, "target": 817293}, {"source": 817175, "target": 817172}, {"source": 817175, "target": 817300}, {"source": 817175, "target": 817047}, {"source": 817175, "target": 817068}, {"source": 817175, "target": 817453}, {"source": 817175, "target": 846893}, {"source": 817175, "target": 817329}, {"source": 817175, "target": 1134001}, {"source": 817175, "target": 1134004}, {"source": 817175, "target": 817464}, {"source": 817175, "target": 1206073}, {"source": 817175, "target": 905919}, {"source": 817175, "target": 816960}, {"source": 817175, "target": 816961}, {"source": 817175, "target": 817091}, {"source": 817175, "target": 988996}, {"source": 817175, "target": 817351}, {"source": 817175, "target": 817354}, {"source": 817175, "target": 817230}, {"source": 817175, "target": 817232}, {"source": 817175, "target": 817106}, {"source": 817175, "target": 817236}, {"source": 817175, "target": 846933}, {"source": 817175, "target": 1179862}, {"source": 817175, "target": 1133781}, {"source": 817175, "target": 885208}, {"source": 817175, "target": 817111}, {"source": 817175, "target": 817240}, {"source": 817175, "target": 987611}, {"source": 817175, "target": 885214}, {"source": 817175, "target": 940767}, {"source": 817175, "target": 817119}, {"source": 817175, "target": 817249}, {"source": 817175, "target": 846946}, {"source": 817175, "target": 885216}, {"source": 817175, "target": 816997}, {"source": 817175, "target": 817126}, {"source": 817175, "target": 817265}, {"source": 817175, "target": 957172}, {"source": 817175, "target": 817014}, {"source": 817175, "target": 817147}, {"source": 1206073, "target": 816960}, {"source": 1206073, "target": 816961}, {"source": 1206073, "target": 817249}, {"source": 1206073, "target": 940801}, {"source": 1206073, "target": 817159}, {"source": 1206073, "target": 817068}, {"source": 1206073, "target": 817230}, {"source": 1206073, "target": 817039}, {"source": 1206073, "target": 940814}, {"source": 1206073, "target": 817329}, {"source": 1206073, "target": 817265}, {"source": 1206073, "target": 1134004}, {"source": 1206073, "target": 817236}, {"source": 1206073, "target": 1179862}, {"source": 1206073, "target": 817047}, {"source": 1206073, "target": 817175}, {"source": 989024, "target": 1092884}, {"source": 989024, "target": 817173}, {"source": 989024, "target": 1389948}, {"source": 989024, "target": 817050}, {"source": 989024, "target": 817307}, {"source": 989024, "target": 1178910}, {"source": 989024, "target": 817442}, {"source": 989024, "target": 851371}, {"source": 989024, "target": 855982}, {"source": 989024, "target": 817328}, {"source": 989024, "target": 817074}, {"source": 989024, "target": 846919}, {"source": 989024, "target": 998860}, {"source": 989024, "target": 817357}, {"source": 989024, "target": 1180496}, {"source": 989024, "target": 817235}, {"source": 989024, "target": 1132119}, {"source": 989024, "target": 1132126}, {"source": 989024, "target": 817122}, {"source": 989024, "target": 817125}, {"source": 989024, "target": 1132134}, {"source": 989024, "target": 817014}, {"source": 989024, "target": 817404}, {"source": 989024, "target": 940799}, {"source": 817442, "target": 817410}, {"source": 817442, "target": 940809}, {"source": 817442, "target": 817422}, {"source": 817442, "target": 988302}, {"source": 817442, "target": 1092884}, {"source": 817442, "target": 817173}, {"source": 817442, "target": 817044}, {"source": 817442, "target": 905877}, {"source": 817442, "target": 1389948}, {"source": 817442, "target": 817050}, {"source": 817442, "target": 817307}, {"source": 817442, "target": 987933}, {"source": 817442, "target": 1178910}, {"source": 817442, "target": 817063}, {"source": 817442, "target": 851371}, {"source": 817442, "target": 855982}, {"source": 817442, "target": 817328}, {"source": 817442, "target": 951089}, {"source": 817442, "target": 817204}, {"source": 817442, "target": 817463}, {"source": 817442, "target": 817218}, {"source": 817442, "target": 846915}, {"source": 817442, "target": 846918}, {"source": 817442, "target": 817351}, {"source": 817442, "target": 817354}, {"source": 817442, "target": 998860}, {"source": 817442, "target": 1180496}, {"source": 817442, "target": 817235}, {"source": 817442, "target": 817109}, {"source": 817442, "target": 846933}, {"source": 817442, "target": 1132119}, {"source": 817442, "target": 940760}, {"source": 817442, "target": 885207}, {"source": 817442, "target": 1132126}, {"source": 817442, "target": 989024}, {"source": 817442, "target": 817122}, {"source": 817442, "target": 846947}, {"source": 817442, "target": 817125}, {"source": 817442, "target": 1132134}, {"source": 817442, "target": 940774}, {"source": 817442, "target": 817017}, {"source": 817442, "target": 817404}, {"source": 817442, "target": 940799}, {"source": 817122, "target": 817160}, {"source": 817122, "target": 1092884}, {"source": 817122, "target": 817173}, {"source": 817122, "target": 1389948}, {"source": 817122, "target": 817050}, {"source": 817122, "target": 817307}, {"source": 817122, "target": 1178910}, {"source": 817122, "target": 817442}, {"source": 817122, "target": 817058}, {"source": 817122, "target": 851371}, {"source": 817122, "target": 855982}, {"source": 817122, "target": 817328}, {"source": 817122, "target": 817074}, {"source": 817122, "target": 846919}, {"source": 817122, "target": 998860}, {"source": 817122, "target": 817357}, {"source": 817122, "target": 1180496}, {"source": 817122, "target": 816977}, {"source": 817122, "target": 817235}, {"source": 817122, "target": 1132119}, {"source": 817122, "target": 1132126}, {"source": 817122, "target": 989024}, {"source": 817122, "target": 846946}, {"source": 817122, "target": 817125}, {"source": 817122, "target": 1132134}, {"source": 817122, "target": 817258}, {"source": 817122, "target": 905844}, {"source": 817122, "target": 817014}, {"source": 817122, "target": 817404}, {"source": 817122, "target": 940799}, {"source": 817125, "target": 940801}, {"source": 817125, "target": 940805}, {"source": 817125, "target": 885254}, {"source": 817125, "target": 817160}, {"source": 817125, "target": 940809}, {"source": 817125, "target": 905866}, {"source": 817125, "target": 817422}, {"source": 817125, "target": 817038}, {"source": 817125, "target": 1092884}, {"source": 817125, "target": 817173}, {"source": 817125, "target": 1389948}, {"source": 817125, "target": 817050}, {"source": 817125, "target": 817180}, {"source": 817125, "target": 1178910}, {"source": 817125, "target": 817442}, {"source": 817125, "target": 817191}, {"source": 817125, "target": 817020}, {"source": 817125, "target": 817324}, {"source": 817125, "target": 855982}, {"source": 817125, "target": 817199}, {"source": 817125, "target": 1092914}, {"source": 817125, "target": 817205}, {"source": 817125, "target": 816958}, {"source": 817125, "target": 817279}, {"source": 817125, "target": 817344}, {"source": 817125, "target": 846917}, {"source": 817125, "target": 861639}, {"source": 817125, "target": 817229}, {"source": 817125, "target": 817101}, {"source": 817125, "target": 846927}, {"source": 817125, "target": 1180496}, {"source": 817125, "target": 846928}, {"source": 817125, "target": 817235}, {"source": 817125, "target": 816979}, {"source": 817125, "target": 1092949}, {"source": 817125, "target": 817108}, {"source": 817125, "target": 885209}, {"source": 817125, "target": 817114}, {"source": 817125, "target": 885211}, {"source": 817125, "target": 989017}, {"source": 817125, "target": 1133917}, {"source": 817125, "target": 1132126}, {"source": 817125, "target": 817119}, {"source": 817125, "target": 989024}, {"source": 817125, "target": 817376}, {"source": 817125, "target": 817122}, {"source": 817125, "target": 816989}, {"source": 817125, "target": 940768}, {"source": 817125, "target": 940773}, {"source": 817125, "target": 1132134}, {"source": 817125, "target": 817126}, {"source": 817125, "target": 817258}, {"source": 817125, "target": 817136}, {"source": 817125, "target": 940785}, {"source": 817125, "target": 1133811}, {"source": 817125, "target": 817139}, {"source": 817125, "target": 905846}, {"source": 817125, "target": 885239}, {"source": 817125, "target": 940794}, {"source": 817125, "target": 817404}, {"source": 817125, "target": 940799}, {"source": 1132134, "target": 1092884}, {"source": 1132134, "target": 817173}, {"source": 1132134, "target": 1389948}, {"source": 1132134, "target": 817050}, {"source": 1132134, "target": 817307}, {"source": 1132134, "target": 1178910}, {"source": 1132134, "target": 817442}, {"source": 1132134, "target": 851371}, {"source": 1132134, "target": 855982}, {"source": 1132134, "target": 817328}, {"source": 1132134, "target": 998860}, {"source": 1132134, "target": 1180496}, {"source": 1132134, "target": 817235}, {"source": 1132134, "target": 1132119}, {"source": 1132134, "target": 1132126}, {"source": 1132134, "target": 989024}, {"source": 1132134, "target": 817122}, {"source": 1132134, "target": 817125}, {"source": 1132134, "target": 817404}, {"source": 1132134, "target": 940799}, {"source": 1132126, "target": 1092884}, {"source": 1132126, "target": 817173}, {"source": 1132126, "target": 1389948}, {"source": 1132126, "target": 817050}, {"source": 1132126, "target": 817307}, {"source": 1132126, "target": 1178910}, {"source": 1132126, "target": 817442}, {"source": 1132126, "target": 851371}, {"source": 1132126, "target": 855982}, {"source": 1132126, "target": 817328}, {"source": 1132126, "target": 998860}, {"source": 1132126, "target": 1180496}, {"source": 1132126, "target": 817235}, {"source": 1132126, "target": 1132119}, {"source": 1132126, "target": 989024}, {"source": 1132126, "target": 817122}, {"source": 1132126, "target": 817125}, {"source": 1132126, "target": 1132134}, {"source": 1132126, "target": 817404}, {"source": 1132126, "target": 940799}, {"source": 855982, "target": 817280}, {"source": 855982, "target": 846931}, {"source": 855982, "target": 940804}, {"source": 855982, "target": 988678}, {"source": 855982, "target": 817034}, {"source": 855982, "target": 817293}, {"source": 855982, "target": 817300}, {"source": 855982, "target": 817173}, {"source": 855982, "target": 1092884}, {"source": 855982, "target": 817428}, {"source": 855982, "target": 1389948}, {"source": 855982, "target": 817049}, {"source": 855982, "target": 817050}, {"source": 855982, "target": 817307}, {"source": 855982, "target": 817437}, {"source": 855982, "target": 1178910}, {"source": 855982, "target": 817181}, {"source": 855982, "target": 817442}, {"source": 855982, "target": 817060}, {"source": 855982, "target": 817020}, {"source": 855982, "target": 851371}, {"source": 855982, "target": 817453}, {"source": 855982, "target": 817328}, {"source": 855982, "target": 1134001}, {"source": 855982, "target": 817329}, {"source": 855982, "target": 817464}, {"source": 855982, "target": 817338}, {"source": 855982, "target": 816960}, {"source": 855982, "target": 998860}, {"source": 855982, "target": 817228}, {"source": 855982, "target": 817230}, {"source": 855982, "target": 846927}, {"source": 855982, "target": 1180496}, {"source": 855982, "target": 817232}, {"source": 855982, "target": 905681}, {"source": 855982, "target": 817235}, {"source": 855982, "target": 817236}, {"source": 855982, "target": 846933}, {"source": 855982, "target": 1133781}, {"source": 855982, "target": 1132119}, {"source": 855982, "target": 885208}, {"source": 855982, "target": 817237}, {"source": 855982, "target": 816985}, {"source": 855982, "target": 913627}, {"source": 855982, "target": 940759}, {"source": 855982, "target": 940761}, {"source": 855982, "target": 1132126}, {"source": 855982, "target": 885214}, {"source": 855982, "target": 989024}, {"source": 855982, "target": 940767}, {"source": 855982, "target": 817122}, {"source": 855982, "target": 817119}, {"source": 855982, "target": 885216}, {"source": 855982, "target": 817125}, {"source": 855982, "target": 1132134}, {"source": 855982, "target": 817376}, {"source": 855982, "target": 989026}, {"source": 855982, "target": 817126}, {"source": 855982, "target": 885215}, {"source": 855982, "target": 940776}, {"source": 855982, "target": 817258}, {"source": 855982, "target": 817265}, {"source": 855982, "target": 957172}, {"source": 855982, "target": 988788}, {"source": 855982, "target": 846965}, {"source": 855982, "target": 885217}, {"source": 855982, "target": 855801}, {"source": 855982, "target": 885242}, {"source": 855982, "target": 817404}, {"source": 855982, "target": 940799}, {"source": 1180496, "target": 989024}, {"source": 1180496, "target": 817122}, {"source": 1180496, "target": 817442}, {"source": 1180496, "target": 817125}, {"source": 1180496, "target": 1132134}, {"source": 1180496, "target": 851371}, {"source": 1180496, "target": 998860}, {"source": 1180496, "target": 855982}, {"source": 1180496, "target": 817328}, {"source": 1180496, "target": 817235}, {"source": 1180496, "target": 817404}, {"source": 1180496, "target": 817173}, {"source": 1180496, "target": 940799}, {"source": 1180496, "target": 1092884}, {"source": 1180496, "target": 817050}, {"source": 1180496, "target": 1389948}, {"source": 1180496, "target": 1132126}, {"source": 1180496, "target": 1178910}, {"source": 817235, "target": 817160}, {"source": 817235, "target": 1092884}, {"source": 817235, "target": 817173}, {"source": 817235, "target": 1389948}, {"source": 817235, "target": 817050}, {"source": 817235, "target": 817307}, {"source": 817235, "target": 1178910}, {"source": 817235, "target": 817442}, {"source": 817235, "target": 851371}, {"source": 817235, "target": 855982}, {"source": 817235, "target": 817328}, {"source": 817235, "target": 817074}, {"source": 817235, "target": 846919}, {"source": 817235, "target": 998860}, {"source": 817235, "target": 817357}, {"source": 817235, "target": 1180496}, {"source": 817235, "target": 816977}, {"source": 817235, "target": 1132119}, {"source": 817235, "target": 1132126}, {"source": 817235, "target": 989024}, {"source": 817235, "target": 817122}, {"source": 817235, "target": 846946}, {"source": 817235, "target": 817125}, {"source": 817235, "target": 1132134}, {"source": 817235, "target": 817014}, {"source": 817235, "target": 817404}, {"source": 817235, "target": 940799}, {"source": 817173, "target": 817280}, {"source": 817173, "target": 940801}, {"source": 817173, "target": 885254}, {"source": 817173, "target": 817159}, {"source": 817173, "target": 817160}, {"source": 817173, "target": 940814}, {"source": 817173, "target": 817423}, {"source": 817173, "target": 1092884}, {"source": 817173, "target": 817047}, {"source": 817173, "target": 1389948}, {"source": 817173, "target": 817305}, {"source": 817173, "target": 817050}, {"source": 817173, "target": 817306}, {"source": 817173, "target": 1178910}, {"source": 817173, "target": 987934}, {"source": 817173, "target": 1391264}, {"source": 817173, "target": 817442}, {"source": 817173, "target": 817058}, {"source": 817173, "target": 851371}, {"source": 817173, "target": 817068}, {"source": 817173, "target": 855982}, {"source": 817173, "target": 817328}, {"source": 817173, "target": 958896}, {"source": 817173, "target": 990002}, {"source": 817173, "target": 855985}, {"source": 817173, "target": 817204}, {"source": 817173, "target": 817458}, {"source": 817173, "target": 817074}, {"source": 817173, "target": 817463}, {"source": 817173, "target": 816958}, {"source": 817173, "target": 945092}, {"source": 817173, "target": 817094}, {"source": 817173, "target": 846919}, {"source": 817173, "target": 998860}, {"source": 817173, "target": 817101}, {"source": 817173, "target": 817230}, {"source": 817173, "target": 1180496}, {"source": 817173, "target": 816977}, {"source": 817173, "target": 817235}, {"source": 817173, "target": 1132119}, {"source": 817173, "target": 1132126}, {"source": 817173, "target": 987102}, {"source": 817173, "target": 989024}, {"source": 817173, "target": 817122}, {"source": 817173, "target": 885218}, {"source": 817173, "target": 1092863}, {"source": 817173, "target": 817125}, {"source": 817173, "target": 1132134}, {"source": 817173, "target": 956516}, {"source": 817173, "target": 846946}, {"source": 817173, "target": 817258}, {"source": 817173, "target": 940779}, {"source": 817173, "target": 940785}, {"source": 817173, "target": 905844}, {"source": 817173, "target": 988789}, {"source": 817173, "target": 885239}, {"source": 817173, "target": 817144}, {"source": 817173, "target": 817017}, {"source": 817173, "target": 817404}, {"source": 817173, "target": 940799}, {"source": 1389948, "target": 989024}, {"source": 1389948, "target": 817122}, {"source": 1389948, "target": 817442}, {"source": 1389948, "target": 817125}, {"source": 1389948, "target": 1132134}, {"source": 1389948, "target": 855982}, {"source": 1389948, "target": 1180496}, {"source": 1389948, "target": 817235}, {"source": 1389948, "target": 940799}, {"source": 1389948, "target": 817173}, {"source": 1389948, "target": 817050}, {"source": 1389948, "target": 817404}, {"source": 1389948, "target": 1132126}, {"source": 1389948, "target": 1178910}, {"source": 817050, "target": 817160}, {"source": 817050, "target": 1092884}, {"source": 817050, "target": 817173}, {"source": 817050, "target": 1389948}, {"source": 817050, "target": 817307}, {"source": 817050, "target": 1178910}, {"source": 817050, "target": 817442}, {"source": 817050, "target": 817058}, {"source": 817050, "target": 851371}, {"source": 817050, "target": 855982}, {"source": 817050, "target": 817328}, {"source": 817050, "target": 817074}, {"source": 817050, "target": 846919}, {"source": 817050, "target": 998860}, {"source": 817050, "target": 817357}, {"source": 817050, "target": 1180496}, {"source": 817050, "target": 816977}, {"source": 817050, "target": 817235}, {"source": 817050, "target": 1132119}, {"source": 817050, "target": 1132126}, {"source": 817050, "target": 989024}, {"source": 817050, "target": 817122}, {"source": 817050, "target": 846946}, {"source": 817050, "target": 817125}, {"source": 817050, "target": 1132134}, {"source": 817050, "target": 817258}, {"source": 817050, "target": 905844}, {"source": 817050, "target": 817014}, {"source": 817050, "target": 817404}, {"source": 817050, "target": 940799}, {"source": 817404, "target": 817160}, {"source": 817404, "target": 1092884}, {"source": 817404, "target": 817173}, {"source": 817404, "target": 817050}, {"source": 817404, "target": 817307}, {"source": 817404, "target": 1178910}, {"source": 817404, "target": 817442}, {"source": 817404, "target": 817058}, {"source": 817404, "target": 851371}, {"source": 817404, "target": 855982}, {"source": 817404, "target": 817328}, {"source": 817404, "target": 817074}, {"source": 817404, "target": 846919}, {"source": 817404, "target": 998860}, {"source": 817404, "target": 817357}, {"source": 817404, "target": 1180496}, {"source": 817404, "target": 816977}, {"source": 817404, "target": 817235}, {"source": 817404, "target": 1132119}, {"source": 817404, "target": 1132126}, {"source": 817404, "target": 989024}, {"source": 817404, "target": 817122}, {"source": 817404, "target": 846946}, {"source": 817404, "target": 817125}, {"source": 817404, "target": 1132134}, {"source": 817404, "target": 817258}, {"source": 817404, "target": 905844}, {"source": 817404, "target": 817014}, {"source": 817404, "target": 1389948}, {"source": 817404, "target": 940799}, {"source": 1178910, "target": 989024}, {"source": 1178910, "target": 817122}, {"source": 1178910, "target": 817442}, {"source": 1178910, "target": 817125}, {"source": 1178910, "target": 1132134}, {"source": 1178910, "target": 855982}, {"source": 1178910, "target": 1180496}, {"source": 1178910, "target": 817235}, {"source": 1178910, "target": 817404}, {"source": 1178910, "target": 817173}, {"source": 1178910, "target": 817050}, {"source": 1178910, "target": 1389948}, {"source": 1178910, "target": 1132126}, {"source": 1178910, "target": 940799}, {"source": 940799, "target": 817154}, {"source": 940799, "target": 817412}, {"source": 940799, "target": 817159}, {"source": 940799, "target": 817160}, {"source": 940799, "target": 817163}, {"source": 940799, "target": 993675}, {"source": 940799, "target": 940814}, {"source": 940799, "target": 817039}, {"source": 940799, "target": 1092884}, {"source": 940799, "target": 817173}, {"source": 940799, "target": 1389948}, {"source": 940799, "target": 817050}, {"source": 940799, "target": 1409308}, {"source": 940799, "target": 1178910}, {"source": 940799, "target": 817442}, {"source": 940799, "target": 817060}, {"source": 940799, "target": 987558}, {"source": 940799, "target": 905898}, {"source": 940799, "target": 851371}, {"source": 940799, "target": 855982}, {"source": 940799, "target": 817329}, {"source": 940799, "target": 1134004}, {"source": 940799, "target": 816960}, {"source": 940799, "target": 816961}, {"source": 940799, "target": 846919}, {"source": 940799, "target": 816970}, {"source": 940799, "target": 817228}, {"source": 940799, "target": 989005}, {"source": 940799, "target": 885244}, {"source": 940799, "target": 1180496}, {"source": 940799, "target": 816977}, {"source": 940799, "target": 817235}, {"source": 940799, "target": 817236}, {"source": 940799, "target": 817237}, {"source": 940799, "target": 846931}, {"source": 940799, "target": 1132119}, {"source": 940799, "target": 817240}, {"source": 940799, "target": 1132126}, {"source": 940799, "target": 989024}, {"source": 940799, "target": 817249}, {"source": 940799, "target": 817122}, {"source": 940799, "target": 1132132}, {"source": 940799, "target": 817125}, {"source": 940799, "target": 1132134}, {"source": 940799, "target": 940778}, {"source": 940799, "target": 1132138}, {"source": 940799, "target": 817265}, {"source": 940799, "target": 1000050}, {"source": 940799, "target": 905846}, {"source": 940799, "target": 846968}, {"source": 940799, "target": 885243}, {"source": 940799, "target": 817404}, {"source": 1178819, "target": 1092951}, {"source": 1178819, "target": 1178691}, {"source": 1178819, "target": 987558}, {"source": 1178819, "target": 1178599}, {"source": 1178819, "target": 1178696}, {"source": 1178819, "target": 1385033}, {"source": 1178819, "target": 1133934}, {"source": 1178819, "target": 817244}, {"source": 1178819, "target": 905364}, {"source": 1178819, "target": 817428}, {"source": 1178819, "target": 1092887}, {"source": 1178819, "target": 817208}, {"source": 1178819, "target": 1092924}, {"source": 1178819, "target": 1133853}, {"source": 1178819, "target": 1133822}, {"source": 1178691, "target": 1092951}, {"source": 1178691, "target": 1178819}, {"source": 1178691, "target": 987558}, {"source": 1178691, "target": 1178599}, {"source": 1178691, "target": 1178696}, {"source": 1178691, "target": 1385033}, {"source": 1178691, "target": 1133934}, {"source": 1178691, "target": 817244}, {"source": 1178691, "target": 905364}, {"source": 1178691, "target": 817428}, {"source": 1178691, "target": 1092887}, {"source": 1178691, "target": 817208}, {"source": 1178691, "target": 1092924}, {"source": 1178691, "target": 1133853}, {"source": 1178691, "target": 1133822}, {"source": 987558, "target": 817154}, {"source": 987558, "target": 817412}, {"source": 987558, "target": 846983}, {"source": 987558, "target": 817160}, {"source": 987558, "target": 817034}, {"source": 987558, "target": 905866}, {"source": 987558, "target": 861455}, {"source": 987558, "target": 817039}, {"source": 987558, "target": 905364}, {"source": 987558, "target": 817428}, {"source": 987558, "target": 989078}, {"source": 987558, "target": 1092887}, {"source": 987558, "target": 905877}, {"source": 987558, "target": 817305}, {"source": 987558, "target": 817306}, {"source": 987558, "target": 987161}, {"source": 987558, "target": 1133853}, {"source": 987558, "target": 1092900}, {"source": 987558, "target": 817060}, {"source": 987558, "target": 817317}, {"source": 987558, "target": 987560}, {"source": 987558, "target": 987564}, {"source": 987558, "target": 846893}, {"source": 987558, "target": 817069}, {"source": 987558, "target": 817455}, {"source": 987558, "target": 1092915}, {"source": 987558, "target": 817208}, {"source": 987558, "target": 1092924}, {"source": 987558, "target": 817406}, {"source": 987558, "target": 816960}, {"source": 987558, "target": 1178691}, {"source": 987558, "target": 1178819}, {"source": 987558, "target": 1178696}, {"source": 987558, "target": 1385033}, {"source": 987558, "target": 816970}, {"source": 987558, "target": 817361}, {"source": 987558, "target": 846931}, {"source": 987558, "target": 817236}, {"source": 987558, "target": 817237}, {"source": 987558, "target": 817238}, {"source": 987558, "target": 1092951}, {"source": 987558, "target": 817115}, {"source": 987558, "target": 989020}, {"source": 987558, "target": 817244}, {"source": 987558, "target": 817121}, {"source": 987558, "target": 940769}, {"source": 987558, "target": 817249}, {"source": 987558, "target": 885222}, {"source": 987558, "target": 1178599}, {"source": 987558, "target": 817258}, {"source": 987558, "target": 1133934}, {"source": 987558, "target": 817265}, {"source": 987558, "target": 1133822}, {"source": 987558, "target": 940799}, {"source": 1178599, "target": 1092951}, {"source": 1178599, "target": 1178691}, {"source": 1178599, "target": 1178819}, {"source": 1178599, "target": 987558}, {"source": 1178599, "target": 1178696}, {"source": 1178599, "target": 1385033}, {"source": 1178599, "target": 1133934}, {"source": 1178599, "target": 817244}, {"source": 1178599, "target": 905364}, {"source": 1178599, "target": 817428}, {"source": 1178599, "target": 1092887}, {"source": 1178599, "target": 817208}, {"source": 1178599, "target": 1092924}, {"source": 1178599, "target": 1133853}, {"source": 1178599, "target": 1133822}, {"source": 1178696, "target": 1092951}, {"source": 1178696, "target": 1178691}, {"source": 1178696, "target": 1178819}, {"source": 1178696, "target": 987558}, {"source": 1178696, "target": 1178599}, {"source": 1178696, "target": 1385033}, {"source": 1178696, "target": 1133934}, {"source": 1178696, "target": 817244}, {"source": 1178696, "target": 905364}, {"source": 1178696, "target": 817428}, {"source": 1178696, "target": 1092887}, {"source": 1178696, "target": 817208}, {"source": 1178696, "target": 1092924}, {"source": 1178696, "target": 1133853}, {"source": 1178696, "target": 1133822}, {"source": 1385033, "target": 1092951}, {"source": 1385033, "target": 1178691}, {"source": 1385033, "target": 1178819}, {"source": 1385033, "target": 987558}, {"source": 1385033, "target": 1178599}, {"source": 1385033, "target": 1178696}, {"source": 1385033, "target": 1133934}, {"source": 1385033, "target": 817244}, {"source": 1385033, "target": 905364}, {"source": 1385033, "target": 817428}, {"source": 1385033, "target": 1092887}, {"source": 1385033, "target": 817208}, {"source": 1385033, "target": 1092924}, {"source": 1385033, "target": 1133853}, {"source": 1385033, "target": 1133822}, {"source": 1133822, "target": 846983}, {"source": 1133822, "target": 817160}, {"source": 1133822, "target": 861455}, {"source": 1133822, "target": 905364}, {"source": 1133822, "target": 817428}, {"source": 1133822, "target": 989078}, {"source": 1133822, "target": 1092887}, {"source": 1133822, "target": 817306}, {"source": 1133822, "target": 1133853}, {"source": 1133822, "target": 987558}, {"source": 1133822, "target": 817455}, {"source": 1133822, "target": 817208}, {"source": 1133822, "target": 1092924}, {"source": 1133822, "target": 1178691}, {"source": 1133822, "target": 1178819}, {"source": 1133822, "target": 1178696}, {"source": 1133822, "target": 1385033}, {"source": 1133822, "target": 816970}, {"source": 1133822, "target": 817361}, {"source": 1133822, "target": 1092951}, {"source": 1133822, "target": 817115}, {"source": 1133822, "target": 989020}, {"source": 1133822, "target": 817244}, {"source": 1133822, "target": 817121}, {"source": 1133822, "target": 1178599}, {"source": 1133822, "target": 1133934}, {"source": 1133934, "target": 846983}, {"source": 1133934, "target": 817160}, {"source": 1133934, "target": 861455}, {"source": 1133934, "target": 905364}, {"source": 1133934, "target": 817428}, {"source": 1133934, "target": 989078}, {"source": 1133934, "target": 1092887}, {"source": 1133934, "target": 1133853}, {"source": 1133934, "target": 987558}, {"source": 1133934, "target": 817455}, {"source": 1133934, "target": 817208}, {"source": 1133934, "target": 1092924}, {"source": 1133934, "target": 1178691}, {"source": 1133934, "target": 1178819}, {"source": 1133934, "target": 1178696}, {"source": 1133934, "target": 1385033}, {"source": 1133934, "target": 816970}, {"source": 1133934, "target": 817361}, {"source": 1133934, "target": 1092951}, {"source": 1133934, "target": 817115}, {"source": 1133934, "target": 989020}, {"source": 1133934, "target": 817244}, {"source": 1133934, "target": 817121}, {"source": 1133934, "target": 1178599}, {"source": 1133934, "target": 1133822}, {"source": 905364, "target": 846983}, {"source": 905364, "target": 817160}, {"source": 905364, "target": 861455}, {"source": 905364, "target": 817428}, {"source": 905364, "target": 989078}, {"source": 905364, "target": 1092887}, {"source": 905364, "target": 817306}, {"source": 905364, "target": 1133853}, {"source": 905364, "target": 987558}, {"source": 905364, "target": 817455}, {"source": 905364, "target": 817208}, {"source": 905364, "target": 1092924}, {"source": 905364, "target": 1178691}, {"source": 905364, "target": 1178819}, {"source": 905364, "target": 1178696}, {"source": 905364, "target": 1385033}, {"source": 905364, "target": 816970}, {"source": 905364, "target": 817361}, {"source": 905364, "target": 1092951}, {"source": 905364, "target": 817115}, {"source": 905364, "target": 989020}, {"source": 905364, "target": 817244}, {"source": 905364, "target": 817121}, {"source": 905364, "target": 1178599}, {"source": 905364, "target": 1133934}, {"source": 905364, "target": 1133822}, {"source": 817428, "target": 817280}, {"source": 817428, "target": 817412}, {"source": 817428, "target": 940804}, {"source": 817428, "target": 846983}, {"source": 817428, "target": 817160}, {"source": 817428, "target": 885256}, {"source": 817428, "target": 817293}, {"source": 817428, "target": 861455}, {"source": 817428, "target": 905364}, {"source": 817428, "target": 817044}, {"source": 817428, "target": 989078}, {"source": 817428, "target": 1092887}, {"source": 817428, "target": 817305}, {"source": 817428, "target": 817306}, {"source": 817428, "target": 817307}, {"source": 817428, "target": 817180}, {"source": 817428, "target": 1133853}, {"source": 817428, "target": 1133989}, {"source": 817428, "target": 987558}, {"source": 817428, "target": 855982}, {"source": 817428, "target": 817455}, {"source": 817428, "target": 817328}, {"source": 817428, "target": 817329}, {"source": 817428, "target": 817332}, {"source": 817428, "target": 817208}, {"source": 817428, "target": 1092924}, {"source": 817428, "target": 817344}, {"source": 817428, "target": 1178691}, {"source": 817428, "target": 1178819}, {"source": 817428, "target": 1178696}, {"source": 817428, "target": 1385033}, {"source": 817428, "target": 816970}, {"source": 817428, "target": 817229}, {"source": 817428, "target": 989007}, {"source": 817428, "target": 846927}, {"source": 817428, "target": 817361}, {"source": 817428, "target": 817108}, {"source": 817428, "target": 816981}, {"source": 817428, "target": 817237}, {"source": 817428, "target": 1092951}, {"source": 817428, "target": 846936}, {"source": 817428, "target": 989017}, {"source": 817428, "target": 940759}, {"source": 817428, "target": 817115}, {"source": 817428, "target": 817244}, {"source": 817428, "target": 989020}, {"source": 817428, "target": 816985}, {"source": 817428, "target": 913627}, {"source": 817428, "target": 885216}, {"source": 817428, "target": 817121}, {"source": 817428, "target": 817376}, {"source": 817428, "target": 816997}, {"source": 817428, "target": 817126}, {"source": 817428, "target": 1178599}, {"source": 817428, "target": 817258}, {"source": 817428, "target": 817133}, {"source": 817428, "target": 1133934}, {"source": 817428, "target": 988788}, {"source": 817428, "target": 846965}, {"source": 817428, "target": 1133822}, {"source": 817428, "target": 817279}, {"source": 1092924, "target": 817412}, {"source": 1092924, "target": 846983}, {"source": 1092924, "target": 817160}, {"source": 1092924, "target": 861455}, {"source": 1092924, "target": 905364}, {"source": 1092924, "target": 817428}, {"source": 1092924, "target": 989078}, {"source": 1092924, "target": 1092887}, {"source": 1092924, "target": 817305}, {"source": 1092924, "target": 817306}, {"source": 1092924, "target": 1133853}, {"source": 1092924, "target": 987558}, {"source": 1092924, "target": 817455}, {"source": 1092924, "target": 817208}, {"source": 1092924, "target": 1178691}, {"source": 1092924, "target": 1178819}, {"source": 1092924, "target": 1178696}, {"source": 1092924, "target": 1385033}, {"source": 1092924, "target": 816970}, {"source": 1092924, "target": 817361}, {"source": 1092924, "target": 1092951}, {"source": 1092924, "target": 846936}, {"source": 1092924, "target": 817115}, {"source": 1092924, "target": 989020}, {"source": 1092924, "target": 817244}, {"source": 1092924, "target": 817121}, {"source": 1092924, "target": 1178599}, {"source": 1092924, "target": 817133}, {"source": 1092924, "target": 1133934}, {"source": 1092924, "target": 1133822}, {"source": 1092887, "target": 817412}, {"source": 1092887, "target": 846983}, {"source": 1092887, "target": 817160}, {"source": 1092887, "target": 861455}, {"source": 1092887, "target": 905364}, {"source": 1092887, "target": 817428}, {"source": 1092887, "target": 989078}, {"source": 1092887, "target": 817305}, {"source": 1092887, "target": 817306}, {"source": 1092887, "target": 1133853}, {"source": 1092887, "target": 987558}, {"source": 1092887, "target": 817455}, {"source": 1092887, "target": 817208}, {"source": 1092887, "target": 1092924}, {"source": 1092887, "target": 1178691}, {"source": 1092887, "target": 1178819}, {"source": 1092887, "target": 1178696}, {"source": 1092887, "target": 1385033}, {"source": 1092887, "target": 816970}, {"source": 1092887, "target": 817361}, {"source": 1092887, "target": 1092951}, {"source": 1092887, "target": 846936}, {"source": 1092887, "target": 817115}, {"source": 1092887, "target": 989020}, {"source": 1092887, "target": 817244}, {"source": 1092887, "target": 817121}, {"source": 1092887, "target": 1178599}, {"source": 1092887, "target": 817133}, {"source": 1092887, "target": 1133934}, {"source": 1092887, "target": 1133822}, {"source": 817208, "target": 940801}, {"source": 817208, "target": 817025}, {"source": 817208, "target": 940807}, {"source": 817208, "target": 817160}, {"source": 817208, "target": 885258}, {"source": 817208, "target": 817163}, {"source": 817208, "target": 940812}, {"source": 817208, "target": 940811}, {"source": 817208, "target": 988302}, {"source": 817208, "target": 905364}, {"source": 817208, "target": 817428}, {"source": 817208, "target": 1092887}, {"source": 817208, "target": 817047}, {"source": 817208, "target": 817307}, {"source": 817208, "target": 1133853}, {"source": 817208, "target": 987933}, {"source": 817208, "target": 1391264}, {"source": 817208, "target": 1092897}, {"source": 817208, "target": 817315}, {"source": 817208, "target": 817317}, {"source": 817208, "target": 987558}, {"source": 817208, "target": 851371}, {"source": 817208, "target": 817206}, {"source": 817208, "target": 817464}, {"source": 817208, "target": 846905}, {"source": 817208, "target": 1092924}, {"source": 817208, "target": 1178691}, {"source": 817208, "target": 1178819}, {"source": 817208, "target": 954950}, {"source": 817208, "target": 846919}, {"source": 817208, "target": 1178696}, {"source": 817208, "target": 1385033}, {"source": 817208, "target": 817354}, {"source": 817208, "target": 817353}, {"source": 817208, "target": 940798}, {"source": 817208, "target": 1092944}, {"source": 817208, "target": 816977}, {"source": 817208, "target": 989009}, {"source": 817208, "target": 816981}, {"source": 817208, "target": 885206}, {"source": 817208, "target": 1092951}, {"source": 817208, "target": 1092952}, {"source": 817208, "target": 989016}, {"source": 817208, "target": 817244}, {"source": 817208, "target": 987613}, {"source": 817208, "target": 816990}, {"source": 817208, "target": 940768}, {"source": 817208, "target": 817121}, {"source": 817208, "target": 846947}, {"source": 817208, "target": 940774}, {"source": 817208, "target": 1178599}, {"source": 817208, "target": 817000}, {"source": 817208, "target": 817258}, {"source": 817208, "target": 940778}, {"source": 817208, "target": 940779}, {"source": 817208, "target": 1133934}, {"source": 817208, "target": 940789}, {"source": 817208, "target": 905846}, {"source": 817208, "target": 940793}, {"source": 817208, "target": 940794}, {"source": 817208, "target": 885243}, {"source": 817208, "target": 885244}, {"source": 817208, "target": 1133822}, {"source": 817244, "target": 940803}, {"source": 817244, "target": 972549}, {"source": 817244, "target": 957958}, {"source": 817244, "target": 817160}, {"source": 817244, "target": 885256}, {"source": 817244, "target": 817165}, {"source": 817244, "target": 905364}, {"source": 817244, "target": 817428}, {"source": 817244, "target": 989078}, {"source": 817244, "target": 1092887}, {"source": 817244, "target": 817049}, {"source": 817244, "target": 817180}, {"source": 817244, "target": 1133853}, {"source": 817244, "target": 987558}, {"source": 817244, "target": 817191}, {"source": 817244, "target": 861608}, {"source": 817244, "target": 817065}, {"source": 817244, "target": 817196}, {"source": 817244, "target": 817069}, {"source": 817244, "target": 823344}, {"source": 817244, "target": 817330}, {"source": 817244, "target": 817331}, {"source": 817244, "target": 817458}, {"source": 817244, "target": 817205}, {"source": 817244, "target": 817208}, {"source": 817244, "target": 996152}, {"source": 817244, "target": 817081}, {"source": 817244, "target": 1092924}, {"source": 817244, "target": 846909}, {"source": 817244, "target": 816958}, {"source": 817244, "target": 817344}, {"source": 817244, "target": 1178691}, {"source": 817244, "target": 1178819}, {"source": 817244, "target": 1178696}, {"source": 817244, "target": 1385033}, {"source": 817244, "target": 1092940}, {"source": 817244, "target": 817101}, {"source": 817244, "target": 817229}, {"source": 817244, "target": 817361}, {"source": 817244, "target": 1092951}, {"source": 817244, "target": 861655}, {"source": 817244, "target": 817115}, {"source": 817244, "target": 989020}, {"source": 817244, "target": 816989}, {"source": 817244, "target": 817376}, {"source": 817244, "target": 817121}, {"source": 817244, "target": 846949}, {"source": 817244, "target": 989030}, {"source": 817244, "target": 1178599}, {"source": 817244, "target": 885224}, {"source": 817244, "target": 846950}, {"source": 817244, "target": 940777}, {"source": 817244, "target": 817132}, {"source": 817244, "target": 1133934}, {"source": 817244, "target": 817136}, {"source": 817244, "target": 817012}, {"source": 817244, "target": 846965}, {"source": 817244, "target": 817141}, {"source": 817244, "target": 885237}, {"source": 817244, "target": 817270}, {"source": 817244, "target": 817017}, {"source": 817244, "target": 940794}, {"source": 817244, "target": 885243}, {"source": 817244, "target": 817020}, {"source": 817244, "target": 1133822}, {"source": 817244, "target": 817279}, {"source": 1133853, "target": 846983}, {"source": 1133853, "target": 817160}, {"source": 1133853, "target": 861455}, {"source": 1133853, "target": 905364}, {"source": 1133853, "target": 817428}, {"source": 1133853, "target": 989078}, {"source": 1133853, "target": 1092887}, {"source": 1133853, "target": 817306}, {"source": 1133853, "target": 987558}, {"source": 1133853, "target": 817455}, {"source": 1133853, "target": 817208}, {"source": 1133853, "target": 1092924}, {"source": 1133853, "target": 1178691}, {"source": 1133853, "target": 1178819}, {"source": 1133853, "target": 1178696}, {"source": 1133853, "target": 1385033}, {"source": 1133853, "target": 816970}, {"source": 1133853, "target": 817361}, {"source": 1133853, "target": 1092951}, {"source": 1133853, "target": 817115}, {"source": 1133853, "target": 989020}, {"source": 1133853, "target": 817244}, {"source": 1133853, "target": 817121}, {"source": 1133853, "target": 1178599}, {"source": 1133853, "target": 1133934}, {"source": 1133853, "target": 1133822}, {"source": 1092951, "target": 885248}, {"source": 1092951, "target": 846983}, {"source": 1092951, "target": 817160}, {"source": 1092951, "target": 940809}, {"source": 1092951, "target": 1092874}, {"source": 1092951, "target": 861455}, {"source": 1092951, "target": 1092880}, {"source": 1092951, "target": 905364}, {"source": 1092951, "target": 817428}, {"source": 1092951, "target": 989078}, {"source": 1092951, "target": 1092887}, {"source": 1092951, "target": 817305}, {"source": 1092951, "target": 817306}, {"source": 1092951, "target": 1133853}, {"source": 1092951, "target": 987552}, {"source": 1092951, "target": 817058}, {"source": 1092951, "target": 1092901}, {"source": 1092951, "target": 987558}, {"source": 1092951, "target": 817068}, {"source": 1092951, "target": 817324}, {"source": 1092951, "target": 817455}, {"source": 1092951, "target": 817458}, {"source": 1092951, "target": 817463}, {"source": 1092951, "target": 817208}, {"source": 1092951, "target": 1092924}, {"source": 1092951, "target": 1178691}, {"source": 1092951, "target": 1178819}, {"source": 1092951, "target": 846915}, {"source": 1092951, "target": 954950}, {"source": 1092951, "target": 817351}, {"source": 1092951, "target": 1178696}, {"source": 1092951, "target": 1385033}, {"source": 1092951, "target": 816970}, {"source": 1092951, "target": 940798}, {"source": 1092951, "target": 846928}, {"source": 1092951, "target": 817361}, {"source": 1092951, "target": 1092947}, {"source": 1092951, "target": 940758}, {"source": 1092951, "target": 885206}, {"source": 1092951, "target": 1092952}, {"source": 1092951, "target": 885208}, {"source": 1092951, "target": 817115}, {"source": 1092951, "target": 989020}, {"source": 1092951, "target": 817244}, {"source": 1092951, "target": 987101}, {"source": 1092951, "target": 817119}, {"source": 1092951, "target": 817121}, {"source": 1092951, "target": 1178599}, {"source": 1092951, "target": 817256}, {"source": 1092951, "target": 940776}, {"source": 1092951, "target": 817127}, {"source": 1092951, "target": 998636}, {"source": 1092951, "target": 1133165}, {"source": 1092951, "target": 1133934}, {"source": 1092951, "target": 846964}, {"source": 1092951, "target": 885242}, {"source": 1092951, "target": 846973}, {"source": 1092951, "target": 1133822}, {"source": 817280, "target": 957958}, {"source": 817280, "target": 817160}, {"source": 817280, "target": 885256}, {"source": 817280, "target": 885258}, {"source": 817280, "target": 817173}, {"source": 817280, "target": 817177}, {"source": 817280, "target": 817180}, {"source": 817280, "target": 817181}, {"source": 817280, "target": 990763}, {"source": 817280, "target": 846919}, {"source": 817280, "target": 817228}, {"source": 817280, "target": 817237}, {"source": 817280, "target": 817239}, {"source": 817280, "target": 817249}, {"source": 817280, "target": 956516}, {"source": 817280, "target": 817258}, {"source": 817280, "target": 1132146}, {"source": 817280, "target": 846965}, {"source": 817280, "target": 988789}, {"source": 817280, "target": 817279}, {"source": 817280, "target": 817287}, {"source": 817280, "target": 817296}, {"source": 817280, "target": 1084054}, {"source": 817280, "target": 817305}, {"source": 817280, "target": 817307}, {"source": 817280, "target": 1391264}, {"source": 817280, "target": 817328}, {"source": 817280, "target": 817331}, {"source": 817280, "target": 817344}, {"source": 817280, "target": 817351}, {"source": 817280, "target": 987343}, {"source": 817280, "target": 817361}, {"source": 817280, "target": 817376}, {"source": 817280, "target": 940776}, {"source": 817280, "target": 855801}, {"source": 817280, "target": 940798}, {"source": 817280, "target": 1092863}, {"source": 817280, "target": 817412}, {"source": 817280, "target": 972549}, {"source": 817280, "target": 940805}, {"source": 817280, "target": 940804}, {"source": 817280, "target": 817428}, {"source": 817280, "target": 817429}, {"source": 817280, "target": 1392408}, {"source": 817280, "target": 817437}, {"source": 817280, "target": 940841}, {"source": 817280, "target": 816938}, {"source": 817280, "target": 817455}, {"source": 817280, "target": 990002}, {"source": 817280, "target": 1206072}, {"source": 817280, "target": 988996}, {"source": 817280, "target": 1092940}, {"source": 817280, "target": 816985}, {"source": 817280, "target": 816997}, {"source": 817280, "target": 817000}, {"source": 817280, "target": 817012}, {"source": 817280, "target": 817017}, {"source": 817280, "target": 817020}, {"source": 817280, "target": 817049}, {"source": 817280, "target": 817054}, {"source": 817280, "target": 817058}, {"source": 817280, "target": 861608}, {"source": 817280, "target": 817068}, {"source": 817280, "target": 817069}, {"source": 817280, "target": 855982}, {"source": 817280, "target": 958896}, {"source": 817280, "target": 945092}, {"source": 817280, "target": 1134025}, {"source": 817280, "target": 817108}, {"source": 817280, "target": 861655}, {"source": 817280, "target": 885215}, {"source": 817280, "target": 817119}, {"source": 817280, "target": 817121}, {"source": 817280, "target": 885218}, {"source": 817280, "target": 988643}, {"source": 817280, "target": 885216}, {"source": 817280, "target": 817126}, {"source": 817280, "target": 817127}, {"source": 817280, "target": 885224}, {"source": 817280, "target": 817132}, {"source": 817280, "target": 817136}, {"source": 817280, "target": 885239}, {"source": 817280, "target": 817144}, {"source": 957958, "target": 817280}, {"source": 957958, "target": 940803}, {"source": 957958, "target": 817160}, {"source": 957958, "target": 817165}, {"source": 957958, "target": 1092877}, {"source": 957958, "target": 817296}, {"source": 957958, "target": 989078}, {"source": 957958, "target": 989079}, {"source": 957958, "target": 1392408}, {"source": 957958, "target": 817177}, {"source": 957958, "target": 861608}, {"source": 957958, "target": 817065}, {"source": 957958, "target": 905898}, {"source": 957958, "target": 817455}, {"source": 957958, "target": 1092911}, {"source": 957958, "target": 1092913}, {"source": 957958, "target": 817330}, {"source": 957958, "target": 817331}, {"source": 957958, "target": 846898}, {"source": 957958, "target": 1092912}, {"source": 957958, "target": 1206072}, {"source": 957958, "target": 996152}, {"source": 957958, "target": 817338}, {"source": 957958, "target": 846909}, {"source": 957958, "target": 817344}, {"source": 957958, "target": 846915}, {"source": 957958, "target": 988995}, {"source": 957958, "target": 817094}, {"source": 957958, "target": 817351}, {"source": 957958, "target": 1134025}, {"source": 957958, "target": 1133771}, {"source": 957958, "target": 1092940}, {"source": 957958, "target": 817361}, {"source": 957958, "target": 885203}, {"source": 957958, "target": 940756}, {"source": 957958, "target": 817109}, {"source": 957958, "target": 861655}, {"source": 957958, "target": 885208}, {"source": 957958, "target": 817244}, {"source": 957958, "target": 987101}, {"source": 957958, "target": 989020}, {"source": 957958, "target": 817375}, {"source": 957958, "target": 1133792}, {"source": 957958, "target": 940771}, {"source": 957958, "target": 1133798}, {"source": 957958, "target": 885224}, {"source": 957958, "target": 817258}, {"source": 957958, "target": 817132}, {"source": 957958, "target": 940782}, {"source": 957958, "target": 846963}, {"source": 957958, "target": 817012}, {"source": 957958, "target": 846965}, {"source": 957958, "target": 817014}, {"source": 957958, "target": 885243}, {"source": 817160, "target": 957958}, {"source": 817160, "target": 885254}, {"source": 817160, "target": 817163}, {"source": 817160, "target": 817165}, {"source": 817160, "target": 817173}, {"source": 817160, "target": 817177}, {"source": 817160, "target": 823344}, {"source": 817160, "target": 817204}, {"source": 817160, "target": 817208}, {"source": 817160, "target": 817218}, {"source": 817160, "target": 846919}, {"source": 817160, "target": 817228}, {"source": 817160, "target": 846931}, {"source": 817160, "target": 817235}, {"source": 817160, "target": 846933}, {"source": 817160, "target": 817237}, {"source": 817160, "target": 817240}, {"source": 817160, "target": 846936}, {"source": 817160, "target": 817244}, {"source": 817160, "target": 1132132}, {"source": 817160, "target": 817256}, {"source": 817160, "target": 817258}, {"source": 817160, "target": 1132138}, {"source": 817160, "target": 1000050}, {"source": 817160, "target": 846963}, {"source": 817160, "target": 846964}, {"source": 817160, "target": 846965}, {"source": 817160, "target": 905846}, {"source": 817160, "target": 846968}, {"source": 817160, "target": 817280}, {"source": 817160, "target": 817287}, {"source": 817160, "target": 988300}, {"source": 817160, "target": 817296}, {"source": 817160, "target": 905364}, {"source": 817160, "target": 817305}, {"source": 817160, "target": 817317}, {"source": 817160, "target": 905898}, {"source": 817160, "target": 817329}, {"source": 817160, "target": 817330}, {"source": 817160, "target": 817331}, {"source": 817160, "target": 905908}, {"source": 817160, "target": 817351}, {"source": 817160, "target": 817354}, {"source": 817160, "target": 989900}, {"source": 817160, "target": 817361}, {"source": 817160, "target": 940755}, {"source": 817160, "target": 1133787}, {"source": 817160, "target": 940778}, {"source": 817160, "target": 940779}, {"source": 817160, "target": 940782}, {"source": 817160, "target": 940785}, {"source": 817160, "target": 940789}, {"source": 817160, "target": 817404}, {"source": 817160, "target": 1133822}, {"source": 817160, "target": 940799}, {"source": 817160, "target": 940800}, {"source": 817160, "target": 940801}, {"source": 817160, "target": 817406}, {"source": 817160, "target": 817414}, {"source": 817160, "target": 940811}, {"source": 817160, "target": 940814}, {"source": 817160, "target": 817422}, {"source": 817160, "target": 817428}, {"source": 817160, "target": 817429}, {"source": 817160, "target": 1092887}, {"source": 817160, "target": 1392408}, {"source": 817160, "target": 1133853}, {"source": 817160, "target": 987934}, {"source": 817160, "target": 817455}, {"source": 817160, "target": 958769}, {"source": 817160, "target": 817458}, {"source": 817160, "target": 817463}, {"source": 817160, "target": 1206072}, {"source": 817160, "target": 1092924}, {"source": 817160, "target": 816958}, {"source": 817160, "target": 1092928}, {"source": 817160, "target": 816961}, {"source": 817160, "target": 988996}, {"source": 817160, "target": 1092940}, {"source": 817160, "target": 989005}, {"source": 817160, "target": 816977}, {"source": 817160, "target": 1092951}, {"source": 817160, "target": 1133916}, {"source": 817160, "target": 1133920}, {"source": 817160, "target": 1133934}, {"source": 817160, "target": 817012}, {"source": 817160, "target": 817014}, {"source": 817160, "target": 817017}, {"source": 817160, "target": 817022}, {"source": 817160, "target": 817025}, {"source": 817160, "target": 817038}, {"source": 817160, "target": 817047}, {"source": 817160, "target": 817050}, {"source": 817160, "target": 987558}, {"source": 817160, "target": 817063}, {"source": 817160, "target": 861608}, {"source": 817160, "target": 817091}, {"source": 817160, "target": 1134025}, {"source": 817160, "target": 885200}, {"source": 817160, "target": 817109}, {"source": 817160, "target": 861655}, {"source": 817160, "target": 885207}, {"source": 817160, "target": 817111}, {"source": 817160, "target": 987102}, {"source": 817160, "target": 817121}, {"source": 817160, "target": 817122}, {"source": 817160, "target": 817125}, {"source": 817160, "target": 885224}, {"source": 817160, "target": 817132}, {"source": 817160, "target": 885229}, {"source": 817160, "target": 885239}, {"source": 817160, "target": 817147}, {"source": 817160, "target": 885244}, {"source": 1134025, "target": 817280}, {"source": 1134025, "target": 957958}, {"source": 1134025, "target": 817160}, {"source": 1134025, "target": 861608}, {"source": 1134025, "target": 885224}, {"source": 1134025, "target": 817258}, {"source": 1134025, "target": 1092940}, {"source": 1134025, "target": 817132}, {"source": 1134025, "target": 817455}, {"source": 1134025, "target": 1206072}, {"source": 1134025, "target": 817331}, {"source": 1134025, "target": 817012}, {"source": 1134025, "target": 846965}, {"source": 1134025, "target": 861655}, {"source": 1134025, "target": 1392408}, {"source": 1134025, "target": 817177}, {"source": 861608, "target": 817280}, {"source": 861608, "target": 940803}, {"source": 861608, "target": 957958}, {"source": 861608, "target": 817287}, {"source": 861608, "target": 817160}, {"source": 861608, "target": 817296}, {"source": 861608, "target": 1392408}, {"source": 861608, "target": 817177}, {"source": 861608, "target": 817049}, {"source": 861608, "target": 817058}, {"source": 861608, "target": 817191}, {"source": 861608, "target": 817065}, {"source": 861608, "target": 846893}, {"source": 861608, "target": 817455}, {"source": 861608, "target": 817330}, {"source": 861608, "target": 817331}, {"source": 861608, "target": 817458}, {"source": 861608, "target": 817205}, {"source": 861608, "target": 1206072}, {"source": 861608, "target": 996152}, {"source": 861608, "target": 846909}, {"source": 861608, "target": 1134025}, {"source": 861608, "target": 1092940}, {"source": 861608, "target": 885200}, {"source": 861608, "target": 816977}, {"source": 861608, "target": 817361}, {"source": 861608, "target": 940755}, {"source": 861608, "target": 861655}, {"source": 861608, "target": 885208}, {"source": 861608, "target": 817244}, {"source": 861608, "target": 817249}, {"source": 861608, "target": 989030}, {"source": 861608, "target": 885224}, {"source": 861608, "target": 817256}, {"source": 861608, "target": 817258}, {"source": 861608, "target": 940777}, {"source": 861608, "target": 817132}, {"source": 861608, "target": 817012}, {"source": 861608, "target": 846965}, {"source": 861608, "target": 940793}, {"source": 861608, "target": 885243}, {"source": 885224, "target": 817280}, {"source": 885224, "target": 940803}, {"source": 885224, "target": 957958}, {"source": 885224, "target": 817160}, {"source": 885224, "target": 1092877}, {"source": 885224, "target": 817422}, {"source": 885224, "target": 817296}, {"source": 885224, "target": 1392408}, {"source": 885224, "target": 817177}, {"source": 885224, "target": 861608}, {"source": 885224, "target": 817065}, {"source": 885224, "target": 905898}, {"source": 885224, "target": 817455}, {"source": 885224, "target": 1092912}, {"source": 885224, "target": 817329}, {"source": 885224, "target": 817330}, {"source": 885224, "target": 817331}, {"source": 885224, "target": 817205}, {"source": 885224, "target": 1206072}, {"source": 885224, "target": 996152}, {"source": 885224, "target": 817338}, {"source": 885224, "target": 846909}, {"source": 885224, "target": 817344}, {"source": 885224, "target": 816961}, {"source": 885224, "target": 988995}, {"source": 885224, "target": 817094}, {"source": 885224, "target": 817351}, {"source": 885224, "target": 1134025}, {"source": 885224, "target": 1133771}, {"source": 885224, "target": 1092940}, {"source": 885224, "target": 817109}, {"source": 885224, "target": 861655}, {"source": 885224, "target": 885208}, {"source": 885224, "target": 817244}, {"source": 885224, "target": 1133792}, {"source": 885224, "target": 817249}, {"source": 885224, "target": 940771}, {"source": 885224, "target": 1133798}, {"source": 885224, "target": 817256}, {"source": 885224, "target": 817258}, {"source": 885224, "target": 817132}, {"source": 885224, "target": 940782}, {"source": 885224, "target": 817012}, {"source": 885224, "target": 846965}, {"source": 885224, "target": 817014}, {"source": 885224, "target": 817279}, {"source": 1092940, "target": 817280}, {"source": 1092940, "target": 940803}, {"source": 1092940, "target": 957958}, {"source": 1092940, "target": 817160}, {"source": 1092940, "target": 1392408}, {"source": 1092940, "target": 817177}, {"source": 1092940, "target": 817191}, {"source": 1092940, "target": 861608}, {"source": 1092940, "target": 817065}, {"source": 1092940, "target": 817455}, {"source": 1092940, "target": 817330}, {"source": 1092940, "target": 817331}, {"source": 1092940, "target": 1206072}, {"source": 1092940, "target": 996152}, {"source": 1092940, "target": 846909}, {"source": 1092940, "target": 1134025}, {"source": 1092940, "target": 861655}, {"source": 1092940, "target": 817244}, {"source": 1092940, "target": 885224}, {"source": 1092940, "target": 817258}, {"source": 1092940, "target": 817132}, {"source": 1092940, "target": 817012}, {"source": 1092940, "target": 846965}, {"source": 817132, "target": 817280}, {"source": 817132, "target": 940803}, {"source": 817132, "target": 957958}, {"source": 817132, "target": 817287}, {"source": 817132, "target": 817160}, {"source": 817132, "target": 817165}, {"source": 817132, "target": 817422}, {"source": 817132, "target": 1392408}, {"source": 817132, "target": 817177}, {"source": 817132, "target": 817049}, {"source": 817132, "target": 817058}, {"source": 817132, "target": 817191}, {"source": 817132, "target": 861608}, {"source": 817132, "target": 817065}, {"source": 817132, "target": 905898}, {"source": 817132, "target": 846893}, {"source": 817132, "target": 817455}, {"source": 817132, "target": 817330}, {"source": 817132, "target": 817331}, {"source": 817132, "target": 817458}, {"source": 817132, "target": 1206072}, {"source": 817132, "target": 996152}, {"source": 817132, "target": 846909}, {"source": 817132, "target": 816961}, {"source": 817132, "target": 1134025}, {"source": 817132, "target": 1092940}, {"source": 817132, "target": 885200}, {"source": 817132, "target": 816977}, {"source": 817132, "target": 817361}, {"source": 817132, "target": 861655}, {"source": 817132, "target": 817244}, {"source": 817132, "target": 940771}, {"source": 817132, "target": 989030}, {"source": 817132, "target": 885224}, {"source": 817132, "target": 817256}, {"source": 817132, "target": 817258}, {"source": 817132, "target": 940782}, {"source": 817132, "target": 817012}, {"source": 817132, "target": 846965}, {"source": 817132, "target": 885243}, {"source": 817258, "target": 957958}, {"source": 817258, "target": 817160}, {"source": 817258, "target": 817163}, {"source": 817258, "target": 817173}, {"source": 817258, "target": 817177}, {"source": 817258, "target": 987161}, {"source": 817258, "target": 817181}, {"source": 817258, "target": 846893}, {"source": 817258, "target": 817199}, {"source": 817258, "target": 817208}, {"source": 817258, "target": 846909}, {"source": 817258, "target": 846917}, {"source": 817258, "target": 846919}, {"source": 817258, "target": 846927}, {"source": 817258, "target": 817236}, {"source": 817258, "target": 817238}, {"source": 817258, "target": 817249}, {"source": 817258, "target": 846946}, {"source": 817258, "target": 846947}, {"source": 817258, "target": 905844}, {"source": 817258, "target": 846965}, {"source": 817258, "target": 905846}, {"source": 817258, "target": 817280}, {"source": 817258, "target": 817287}, {"source": 817258, "target": 988300}, {"source": 817258, "target": 988302}, {"source": 817258, "target": 817296}, {"source": 817258, "target": 817300}, {"source": 817258, "target": 905877}, {"source": 817258, "target": 817315}, {"source": 817258, "target": 817317}, {"source": 817258, "target": 817331}, {"source": 817258, "target": 817344}, {"source": 817258, "target": 987343}, {"source": 817258, "target": 817361}, {"source": 817258, "target": 940759}, {"source": 817258, "target": 940768}, {"source": 817258, "target": 940769}, {"source": 817258, "target": 817376}, {"source": 817258, "target": 940773}, {"source": 817258, "target": 940776}, {"source": 817258, "target": 1133811}, {"source": 817258, "target": 940789}, {"source": 817258, "target": 855801}, {"source": 817258, "target": 817404}, {"source": 817258, "target": 817406}, {"source": 817258, "target": 940807}, {"source": 817258, "target": 940812}, {"source": 817258, "target": 817428}, {"source": 817258, "target": 1392408}, {"source": 817258, "target": 1092897}, {"source": 817258, "target": 1092900}, {"source": 817258, "target": 817455}, {"source": 817258, "target": 1092914}, {"source": 817258, "target": 1092915}, {"source": 817258, "target": 1206072}, {"source": 817258, "target": 1092940}, {"source": 817258, "target": 816977}, {"source": 817258, "target": 816979}, {"source": 817258, "target": 816990}, {"source": 817258, "target": 817000}, {"source": 817258, "target": 817012}, {"source": 817258, "target": 817020}, {"source": 817258, "target": 817044}, {"source": 817258, "target": 817047}, {"source": 817258, "target": 817049}, {"source": 817258, "target": 817050}, {"source": 817258, "target": 817054}, {"source": 817258, "target": 817060}, {"source": 817258, "target": 987558}, {"source": 817258, "target": 861608}, {"source": 817258, "target": 817065}, {"source": 817258, "target": 987560}, {"source": 817258, "target": 987564}, {"source": 817258, "target": 817069}, {"source": 817258, "target": 855982}, {"source": 817258, "target": 817074}, {"source": 817258, "target": 817081}, {"source": 817258, "target": 817094}, {"source": 817258, "target": 1134025}, {"source": 817258, "target": 817101}, {"source": 817258, "target": 861655}, {"source": 817258, "target": 885209}, {"source": 817258, "target": 817114}, {"source": 817258, "target": 885211}, {"source": 817258, "target": 885214}, {"source": 817258, "target": 885215}, {"source": 817258, "target": 817119}, {"source": 817258, "target": 817121}, {"source": 817258, "target": 885217}, {"source": 817258, "target": 817122}, {"source": 817258, "target": 817125}, {"source": 817258, "target": 817126}, {"source": 817258, "target": 885222}, {"source": 817258, "target": 885224}, {"source": 817258, "target": 817132}, {"source": 817258, "target": 817136}, {"source": 817258, "target": 817139}, {"source": 817258, "target": 885243}, {"source": 817455, "target": 817280}, {"source": 817455, "target": 940803}, {"source": 817455, "target": 817412}, {"source": 817455, "target": 885251}, {"source": 817455, "target": 957958}, {"source": 817455, "target": 846983}, {"source": 817455, "target": 817160}, {"source": 817455, "target": 885256}, {"source": 817455, "target": 940805}, {"source": 817455, "target": 817159}, {"source": 817455, "target": 988300}, {"source": 817455, "target": 861455}, {"source": 817455, "target": 905364}, {"source": 817455, "target": 817428}, {"source": 817455, "target": 989078}, {"source": 817455, "target": 1092887}, {"source": 817455, "target": 1392408}, {"source": 817455, "target": 817177}, {"source": 817455, "target": 817306}, {"source": 817455, "target": 817305}, {"source": 817455, "target": 817180}, {"source": 817455, "target": 1133853}, {"source": 817455, "target": 817437}, {"source": 817455, "target": 817054}, {"source": 817455, "target": 817058}, {"source": 817455, "target": 987558}, {"source": 817455, "target": 861608}, {"source": 817455, "target": 817065}, {"source": 817455, "target": 817324}, {"source": 817455, "target": 817069}, {"source": 817455, "target": 817196}, {"source": 817455, "target": 817458}, {"source": 817455, "target": 817331}, {"source": 817455, "target": 1206072}, {"source": 817455, "target": 817338}, {"source": 817455, "target": 1092924}, {"source": 817455, "target": 846909}, {"source": 817455, "target": 817344}, {"source": 817455, "target": 988994}, {"source": 817455, "target": 817091}, {"source": 817455, "target": 817351}, {"source": 817455, "target": 1134025}, {"source": 817455, "target": 816970}, {"source": 817455, "target": 1092940}, {"source": 817455, "target": 846928}, {"source": 817455, "target": 817361}, {"source": 817455, "target": 885206}, {"source": 817455, "target": 861655}, {"source": 817455, "target": 1092951}, {"source": 817455, "target": 846936}, {"source": 817455, "target": 817115}, {"source": 817455, "target": 989020}, {"source": 817455, "target": 885214}, {"source": 817455, "target": 885217}, {"source": 817455, "target": 817127}, {"source": 817455, "target": 885224}, {"source": 817455, "target": 940776}, {"source": 817455, "target": 817258}, {"source": 817455, "target": 817132}, {"source": 817455, "target": 817133}, {"source": 817455, "target": 1133934}, {"source": 817455, "target": 998636}, {"source": 817455, "target": 817012}, {"source": 817455, "target": 846965}, {"source": 817455, "target": 1133822}, {"source": 1392408, "target": 817280}, {"source": 1392408, "target": 957958}, {"source": 1392408, "target": 817160}, {"source": 1392408, "target": 861608}, {"source": 1392408, "target": 1134025}, {"source": 1392408, "target": 885224}, {"source": 1392408, "target": 1092940}, {"source": 1392408, "target": 817132}, {"source": 1392408, "target": 817258}, {"source": 1392408, "target": 817455}, {"source": 1392408, "target": 817331}, {"source": 1392408, "target": 817012}, {"source": 1392408, "target": 846965}, {"source": 1392408, "target": 861655}, {"source": 1392408, "target": 1206072}, {"source": 1392408, "target": 817177}, {"source": 817331, "target": 817280}, {"source": 817331, "target": 940803}, {"source": 817331, "target": 957958}, {"source": 817331, "target": 817160}, {"source": 817331, "target": 817296}, {"source": 817331, "target": 817047}, {"source": 817331, "target": 1392408}, {"source": 817331, "target": 817177}, {"source": 817331, "target": 817049}, {"source": 817331, "target": 817306}, {"source": 817331, "target": 817191}, {"source": 817331, "target": 861608}, {"source": 817331, "target": 817065}, {"source": 817331, "target": 817455}, {"source": 817331, "target": 817330}, {"source": 817331, "target": 817458}, {"source": 817331, "target": 817205}, {"source": 817331, "target": 1206072}, {"source": 817331, "target": 996152}, {"source": 817331, "target": 846909}, {"source": 817331, "target": 1134025}, {"source": 817331, "target": 1092940}, {"source": 817331, "target": 816977}, {"source": 817331, "target": 940755}, {"source": 817331, "target": 861655}, {"source": 817331, "target": 885208}, {"source": 817331, "target": 817244}, {"source": 817331, "target": 817375}, {"source": 817331, "target": 817249}, {"source": 817331, "target": 989030}, {"source": 817331, "target": 817126}, {"source": 817331, "target": 885224}, {"source": 817331, "target": 817256}, {"source": 817331, "target": 817258}, {"source": 817331, "target": 940777}, {"source": 817331, "target": 817132}, {"source": 817331, "target": 817012}, {"source": 817331, "target": 846965}, {"source": 817331, "target": 885243}, {"source": 817012, "target": 817280}, {"source": 817012, "target": 940803}, {"source": 817012, "target": 817412}, {"source": 817012, "target": 940805}, {"source": 817012, "target": 957958}, {"source": 817012, "target": 817287}, {"source": 817012, "target": 817160}, {"source": 817012, "target": 885256}, {"source": 817012, "target": 988300}, {"source": 817012, "target": 1092877}, {"source": 817012, "target": 817422}, {"source": 817012, "target": 817296}, {"source": 817012, "target": 817429}, {"source": 817012, "target": 1392408}, {"source": 817012, "target": 817177}, {"source": 817012, "target": 817049}, {"source": 817012, "target": 817180}, {"source": 817012, "target": 817181}, {"source": 817012, "target": 817054}, {"source": 817012, "target": 817315}, {"source": 817012, "target": 861608}, {"source": 817012, "target": 817065}, {"source": 817012, "target": 905898}, {"source": 817012, "target": 817196}, {"source": 817012, "target": 817069}, {"source": 817012, "target": 817068}, {"source": 817012, "target": 817455}, {"source": 817012, "target": 1092912}, {"source": 817012, "target": 817329}, {"source": 817012, "target": 817330}, {"source": 817012, "target": 817331}, {"source": 817012, "target": 817205}, {"source": 817012, "target": 1206072}, {"source": 817012, "target": 996152}, {"source": 817012, "target": 817338}, {"source": 817012, "target": 846909}, {"source": 817012, "target": 817344}, {"source": 817012, "target": 816961}, {"source": 817012, "target": 988995}, {"source": 817012, "target": 817351}, {"source": 817012, "target": 1134025}, {"source": 817012, "target": 1133771}, {"source": 817012, "target": 1092940}, {"source": 817012, "target": 817228}, {"source": 817012, "target": 987343}, {"source": 817012, "target": 846927}, {"source": 817012, "target": 817109}, {"source": 817012, "target": 861655}, {"source": 817012, "target": 885208}, {"source": 817012, "target": 940759}, {"source": 817012, "target": 817244}, {"source": 817012, "target": 885214}, {"source": 817012, "target": 885215}, {"source": 817012, "target": 1133792}, {"source": 817012, "target": 885217}, {"source": 817012, "target": 817376}, {"source": 817012, "target": 940771}, {"source": 817012, "target": 1133798}, {"source": 817012, "target": 817127}, {"source": 817012, "target": 885224}, {"source": 817012, "target": 817258}, {"source": 817012, "target": 817132}, {"source": 817012, "target": 940782}, {"source": 817012, "target": 846965}, {"source": 817012, "target": 817014}, {"source": 817012, "target": 817141}, {"source": 817012, "target": 855801}, {"source": 817012, "target": 817020}, {"source": 817012, "target": 817279}, {"source": 846965, "target": 817280}, {"source": 846965, "target": 885248}, {"source": 846965, "target": 940803}, {"source": 846965, "target": 940804}, {"source": 846965, "target": 957958}, {"source": 846965, "target": 817160}, {"source": 846965, "target": 817293}, {"source": 846965, "target": 817428}, {"source": 846965, "target": 1392408}, {"source": 846965, "target": 817177}, {"source": 846965, "target": 817437}, {"source": 846965, "target": 1134112}, {"source": 846965, "target": 987552}, {"source": 846965, "target": 817057}, {"source": 846965, "target": 1134115}, {"source": 846965, "target": 817058}, {"source": 846965, "target": 1134118}, {"source": 846965, "target": 987559}, {"source": 846965, "target": 861608}, {"source": 846965, "target": 817065}, {"source": 846965, "target": 855982}, {"source": 846965, "target": 817455}, {"source": 846965, "target": 817331}, {"source": 846965, "target": 1206072}, {"source": 846965, "target": 996152}, {"source": 846965, "target": 846909}, {"source": 846965, "target": 816958}, {"source": 846965, "target": 1134025}, {"source": 846965, "target": 1092940}, {"source": 846965, "target": 817228}, {"source": 846965, "target": 817229}, {"source": 846965, "target": 905681}, {"source": 846965, "target": 817106}, {"source": 846965, "target": 817237}, {"source": 846965, "target": 940758}, {"source": 846965, "target": 861655}, {"source": 846965, "target": 940759}, {"source": 846965, "target": 816985}, {"source": 846965, "target": 817240}, {"source": 846965, "target": 913627}, {"source": 846965, "target": 817244}, {"source": 846965, "target": 885215}, {"source": 846965, "target": 885216}, {"source": 846965, "target": 817376}, {"source": 846965, "target": 989026}, {"source": 846965, "target": 817121}, {"source": 846965, "target": 885224}, {"source": 846965, "target": 817258}, {"source": 846965, "target": 940778}, {"source": 846965, "target": 817132}, {"source": 846965, "target": 817136}, {"source": 846965, "target": 846963}, {"source": 846965, "target": 817012}, {"source": 846965, "target": 988788}, {"source": 846965, "target": 940789}, {"source": 846965, "target": 846964}, {"source": 846965, "target": 817270}, {"source": 846965, "target": 817020}, {"source": 846965, "target": 846973}, {"source": 861655, "target": 817280}, {"source": 861655, "target": 940803}, {"source": 861655, "target": 957958}, {"source": 861655, "target": 817160}, {"source": 861655, "target": 817296}, {"source": 861655, "target": 1392408}, {"source": 861655, "target": 817177}, {"source": 861655, "target": 817049}, {"source": 861655, "target": 817191}, {"source": 861655, "target": 861608}, {"source": 861655, "target": 817065}, {"source": 861655, "target": 817455}, {"source": 861655, "target": 817330}, {"source": 861655, "target": 817331}, {"source": 861655, "target": 817458}, {"source": 861655, "target": 817205}, {"source": 861655, "target": 1206072}, {"source": 861655, "target": 996152}, {"source": 861655, "target": 846909}, {"source": 861655, "target": 1134025}, {"source": 861655, "target": 1092940}, {"source": 861655, "target": 816977}, {"source": 861655, "target": 940755}, {"source": 861655, "target": 885208}, {"source": 861655, "target": 817244}, {"source": 861655, "target": 817249}, {"source": 861655, "target": 989030}, {"source": 861655, "target": 885224}, {"source": 861655, "target": 817256}, {"source": 861655, "target": 817258}, {"source": 861655, "target": 940777}, {"source": 861655, "target": 817132}, {"source": 861655, "target": 817012}, {"source": 861655, "target": 846965}, {"source": 861655, "target": 885243}, {"source": 1206072, "target": 817280}, {"source": 1206072, "target": 957958}, {"source": 1206072, "target": 817160}, {"source": 1206072, "target": 861608}, {"source": 1206072, "target": 1134025}, {"source": 1206072, "target": 885224}, {"source": 1206072, "target": 1092940}, {"source": 1206072, "target": 817132}, {"source": 1206072, "target": 817258}, {"source": 1206072, "target": 817455}, {"source": 1206072, "target": 817331}, {"source": 1206072, "target": 817012}, {"source": 1206072, "target": 846965}, {"source": 1206072, "target": 861655}, {"source": 1206072, "target": 1392408}, {"source": 1206072, "target": 817177}, {"source": 817177, "target": 817280}, {"source": 817177, "target": 940801}, {"source": 817177, "target": 940805}, {"source": 817177, "target": 957958}, {"source": 817177, "target": 817160}, {"source": 817177, "target": 817165}, {"source": 817177, "target": 817422}, {"source": 817177, "target": 861455}, {"source": 817177, "target": 817429}, {"source": 817177, "target": 905877}, {"source": 817177, "target": 989079}, {"source": 817177, "target": 1392408}, {"source": 817177, "target": 817049}, {"source": 817177, "target": 957469}, {"source": 817177, "target": 989085}, {"source": 817177, "target": 817181}, {"source": 817177, "target": 817060}, {"source": 817177, "target": 817191}, {"source": 817177, "target": 861608}, {"source": 817177, "target": 817065}, {"source": 817177, "target": 1133995}, {"source": 817177, "target": 817068}, {"source": 817177, "target": 817069}, {"source": 817177, "target": 846893}, {"source": 817177, "target": 817455}, {"source": 817177, "target": 817074}, {"source": 817177, "target": 817331}, {"source": 817177, "target": 846898}, {"source": 817177, "target": 817205}, {"source": 817177, "target": 1206072}, {"source": 817177, "target": 905919}, {"source": 817177, "target": 1134015}, {"source": 817177, "target": 988994}, {"source": 817177, "target": 1134019}, {"source": 817177, "target": 817351}, {"source": 817177, "target": 1134025}, {"source": 817177, "target": 817353}, {"source": 817177, "target": 1092940}, {"source": 817177, "target": 989006}, {"source": 817177, "target": 885203}, {"source": 817177, "target": 940756}, {"source": 817177, "target": 817238}, {"source": 817177, "target": 861655}, {"source": 817177, "target": 846936}, {"source": 817177, "target": 987101}, {"source": 817177, "target": 817375}, {"source": 817177, "target": 940768}, {"source": 817177, "target": 846949}, {"source": 817177, "target": 817126}, {"source": 817177, "target": 817127}, {"source": 817177, "target": 885224}, {"source": 817177, "target": 885222}, {"source": 817177, "target": 817258}, {"source": 817177, "target": 817132}, {"source": 817177, "target": 885229}, {"source": 817177, "target": 817133}, {"source": 817177, "target": 1132146}, {"source": 817177, "target": 817012}, {"source": 817177, "target": 846965}, {"source": 817177, "target": 817140}, {"source": 817177, "target": 817270}, {"source": 817177, "target": 817147}, {"source": 817177, "target": 817406}, {"source": 817177, "target": 817279}, {"source": 905866, "target": 940801}, {"source": 905866, "target": 817154}, {"source": 905866, "target": 1092868}, {"source": 905866, "target": 885254}, {"source": 905866, "target": 885258}, {"source": 905866, "target": 817034}, {"source": 905866, "target": 817038}, {"source": 905866, "target": 905877}, {"source": 905866, "target": 987161}, {"source": 905866, "target": 817307}, {"source": 905866, "target": 817060}, {"source": 905866, "target": 817317}, {"source": 905866, "target": 987558}, {"source": 905866, "target": 1092907}, {"source": 905866, "target": 817324}, {"source": 905866, "target": 990763}, {"source": 905866, "target": 987564}, {"source": 905866, "target": 817464}, {"source": 905866, "target": 816958}, {"source": 905866, "target": 1134020}, {"source": 905866, "target": 817353}, {"source": 905866, "target": 989009}, {"source": 905866, "target": 816981}, {"source": 905866, "target": 1133782}, {"source": 905866, "target": 817238}, {"source": 905866, "target": 989016}, {"source": 905866, "target": 1133786}, {"source": 905866, "target": 987613}, {"source": 905866, "target": 816990}, {"source": 905866, "target": 817376}, {"source": 905866, "target": 940769}, {"source": 905866, "target": 817125}, {"source": 905866, "target": 940785}, {"source": 905866, "target": 817014}, {"source": 905866, "target": 940793}, {"source": 905866, "target": 817147}, {"source": 905866, "target": 817406}, {"source": 987611, "target": 1092867}, {"source": 987611, "target": 885252}, {"source": 987611, "target": 885251}, {"source": 987611, "target": 817414}, {"source": 987611, "target": 817034}, {"source": 987611, "target": 1136397}, {"source": 987611, "target": 817038}, {"source": 987611, "target": 817429}, {"source": 987611, "target": 817175}, {"source": 987611, "target": 817305}, {"source": 987611, "target": 823344}, {"source": 987611, "target": 958769}, {"source": 987611, "target": 817206}, {"source": 987611, "target": 817463}, {"source": 987611, "target": 905919}, {"source": 987611, "target": 817091}, {"source": 987611, "target": 817106}, {"source": 987611, "target": 846931}, {"source": 987611, "target": 817111}, {"source": 987611, "target": 817249}, {"source": 987611, "target": 846946}, {"source": 987611, "target": 816997}, {"source": 987611, "target": 817126}, {"source": 987611, "target": 817256}, {"source": 987611, "target": 885229}, {"source": 987611, "target": 940789}, {"source": 987611, "target": 885239}, {"source": 987611, "target": 846968}, {"source": 817060, "target": 817025}, {"source": 817060, "target": 817034}, {"source": 817060, "target": 905866}, {"source": 817060, "target": 817039}, {"source": 817060, "target": 905877}, {"source": 817060, "target": 987161}, {"source": 817060, "target": 817177}, {"source": 817060, "target": 817049}, {"source": 817060, "target": 817181}, {"source": 817060, "target": 1092900}, {"source": 817060, "target": 817317}, {"source": 817060, "target": 987558}, {"source": 817060, "target": 987560}, {"source": 817060, "target": 987564}, {"source": 817060, "target": 846893}, {"source": 817060, "target": 817069}, {"source": 817060, "target": 855982}, {"source": 817060, "target": 1092915}, {"source": 817060, "target": 816960}, {"source": 817060, "target": 954950}, {"source": 817060, "target": 861639}, {"source": 817060, "target": 846931}, {"source": 817060, "target": 817236}, {"source": 817060, "target": 817238}, {"source": 817060, "target": 940769}, {"source": 817060, "target": 885222}, {"source": 817060, "target": 817258}, {"source": 817060, "target": 817265}, {"source": 817060, "target": 817140}, {"source": 817060, "target": 817014}, {"source": 817060, "target": 817406}, {"source": 817060, "target": 940799}], "nodes": [{"key": 817057, "attributes": {"x": 0.16668154299259186, "y": 0.31722190976142883, "size": 3.5560344827586206, "label": "DeMar DeRozan"}}, {"key": 817218, "attributes": {"x": 0.08587833493947983, "y": 0.3263469338417053, "size": 2.8448275862068964, "label": "Zach LaVine"}}, {"key": 885251, "attributes": {"x": -0.19220969080924988, "y": -0.03064543381333351, "size": 5.625, "label": "Tony Bradley"}}, {"key": 885217, "attributes": {"x": -0.0726146399974823, "y": 0.20582614839076996, "size": 3.3620689655172415, "label": "Lonzo Ball"}}, {"key": 1181319, "attributes": {"x": 0.028037065640091896, "y": 0.758862316608429, "size": 1.0991379310344827, "label": "Dalen Terry"}}, {"key": 954825, "attributes": {"x": 0.2218223661184311, "y": 0.4112370014190674, "size": 2.3275862068965516, "label": "Javonte Green"}}, {"key": 1133911, "attributes": {"x": 0.01414792612195015, "y": 0.6087304353713989, "size": 1.6810344827586208, "label": "Ayo Dosunmu"}}, {"key": 816989, "attributes": {"x": 0.05333497375249863, "y": 0.20171482861042023, "size": 7.5, "label": "Patrick Beverley"}}, {"key": 817069, "attributes": {"x": -0.21688370406627655, "y": 0.08691984415054321, "size": 5.754310344827586, "label": "Andre Drummond"}}, {"key": 817423, "attributes": {"x": -0.020088529214262962, "y": 0.4331819415092468, "size": 3.103448275862069, "label": "Nikola Vu\u010devi\u0107"}}, {"key": 855985, "attributes": {"x": -0.1223754957318306, "y": 0.2838532328605652, "size": 3.620689655172414, "label": "Derrick Jones Jr."}}, {"key": 1092881, "attributes": {"x": 0.007733204867690802, "y": 0.5477708578109741, "size": 1.9396551724137931, "label": "Patrick Williams"}}, {"key": 855801, "attributes": {"x": -0.09099847078323364, "y": 0.31717097759246826, "size": 3.2974137931034484, "label": "Alex Caruso"}}, {"key": 989015, "attributes": {"x": -0.014445604756474495, "y": 0.49788203835487366, "size": 2.1336206896551726, "label": "Coby White"}}, {"key": 963001, "attributes": {"x": 0.035253267735242844, "y": 0.5082584023475647, "size": 2.0689655172413794, "label": "Marko Simonovi\u0107"}}, {"key": 1133914, "attributes": {"x": -0.03679914399981499, "y": 0.7029420137405396, "size": 1.3577586206896552, "label": "Malcolm Hill"}}, {"key": 1133917, "attributes": {"x": -0.25667235255241394, "y": 0.5442546010017395, "size": 2.004310344827586, "label": "Carlik Jones"}}, {"key": 817406, "attributes": {"x": 0.1648266315460205, "y": -0.01819034107029438, "size": 6.142241379310345, "label": "Tristan Thompson"}}, {"key": 1092928, "attributes": {"x": 0.589119017124176, "y": -0.45841458439826965, "size": 1.6163793103448274, "label": "Skylar Mays"}}, {"key": 1092866, "attributes": {"x": 0.8218715190887451, "y": -0.5448247194290161, "size": 1.0344827586206897, "label": "Trent Forrest"}}, {"key": 1179043, "attributes": {"x": 0.7758297324180603, "y": -0.6417391300201416, "size": 1.0344827586206897, "label": "Tyrese Martin"}}, {"key": 1092036, "attributes": {"x": 0.7560884952545166, "y": -0.6055785417556763, "size": 1.0344827586206897, "label": "Onyeka Okongwu"}}, {"key": 1092874, "attributes": {"x": 0.07819018512964249, "y": -0.44866782426834106, "size": 2.7801724137931036, "label": "Saddiq Bey"}}, {"key": 988300, "attributes": {"x": 0.28937602043151855, "y": -0.24252533912658691, "size": 2.9094827586206895, "label": "De'Andre Hunter"}}, {"key": 885200, "attributes": {"x": 0.48951852321624756, "y": -0.3468480408191681, "size": 2.2629310344827585, "label": "John Collins"}}, {"key": 1181233, "attributes": {"x": 0.801848828792572, "y": -0.5856726765632629, "size": 1.0344827586206897, "label": "AJ Griffin"}}, {"key": 940755, "attributes": {"x": 0.31996724009513855, "y": -0.3988589346408844, "size": 2.8448275862068964, "label": "Trae Young"}}, {"key": 905908, "attributes": {"x": 0.44124048948287964, "y": -0.34777021408081055, "size": 2.521551724137931, "label": "Bogdan Bogdanovic"}}, {"key": 940789, "attributes": {"x": 0.09004127979278564, "y": -0.13357509672641754, "size": 4.525862068965517, "label": "Aaron Holiday"}}, {"key": 989078, "attributes": {"x": 0.3899628818035126, "y": -0.17170800268650055, "size": 4.008620689655172, "label": "Bruno Fernando"}}, {"key": 1178199, "attributes": {"x": 0.7318317890167236, "y": -0.667727530002594, "size": 1.0344827586206897, "label": "Donovan Williams"}}, {"key": 846964, "attributes": {"x": 0.46323007345199585, "y": -0.16819898784160614, "size": 3.232758620689655, "label": "Dejounte Murray"}}, {"key": 1133787, "attributes": {"x": 0.5608935952186584, "y": -0.4985770881175995, "size": 1.6163793103448274, "label": "Jalen Johnson"}}, {"key": 989020, "attributes": {"x": 0.5702375173568726, "y": -0.22878648340702057, "size": 2.9094827586206895, "label": "Garrison Mathews"}}, {"key": 817022, "attributes": {"x": 0.3327409625053406, "y": -0.2446092814207077, "size": 2.7801724137931036, "label": "Clint Capela"}}, {"key": 1181091, "attributes": {"x": 0.9246018528938293, "y": 0.4430268406867981, "size": 1.0991379310344827, "label": "Kenneth Lofton"}}, {"key": 1133988, "attributes": {"x": 0.673745334148407, "y": 0.3092673718929291, "size": 1.5517241379310345, "label": "Santi Aldama"}}, {"key": 885254, "attributes": {"x": 0.4446209669113159, "y": 0.23638825118541718, "size": 2.521551724137931, "label": "Dillon Brooks"}}, {"key": 885256, "attributes": {"x": 0.19261609017848969, "y": 0.2471686154603958, "size": 3.3620689655172415, "label": "Luke Kennard"}}, {"key": 1092873, "attributes": {"x": 0.5901365876197815, "y": 0.13571561872959137, "size": 2.1982758620689653, "label": "Xavier Tillman"}}, {"key": 816938, "attributes": {"x": 0.26015934348106384, "y": 0.06080907955765724, "size": 3.8793103448275863, "label": "Steven Adams"}}, {"key": 988875, "attributes": {"x": 0.9511032700538635, "y": 0.4004100561141968, "size": 1.0991379310344827, "label": "John Konchar"}}, {"key": 1178858, "attributes": {"x": 0.8846991062164307, "y": 0.451058954000473, "size": 1.0991379310344827, "label": "Vince Williams"}}, {"key": 1134024, "attributes": {"x": 0.6470245718955994, "y": 0.35075461864471436, "size": 1.5517241379310345, "label": "Ziaire Williams"}}, {"key": 1092872, "attributes": {"x": 0.5828853249549866, "y": 0.26181530952453613, "size": 2.3275862068965516, "label": "Desmond Bane"}}, {"key": 1179536, "attributes": {"x": 0.8768492937088013, "y": 0.495877206325531, "size": 1.0991379310344827, "label": "Jake Laravia"}}, {"key": 940785, "attributes": {"x": 0.4968321919441223, "y": 0.24734744429588318, "size": 2.2629310344827585, "label": "Jaren Jackson Jr."}}, {"key": 1178033, "attributes": {"x": 0.9558475613594055, "y": 0.34147730469703674, "size": 1.0991379310344827, "label": "David Roddy"}}, {"key": 1180179, "attributes": {"x": 0.9153862595558167, "y": 0.3791605234146118, "size": 1.0991379310344827, "label": "Kennedy Chandler"}}, {"key": 817204, "attributes": {"x": 0.4257569909095764, "y": 0.1192518100142479, "size": 2.8448275862068964, "label": "Tyus Jones"}}, {"key": 987102, "attributes": {"x": 0.5501728057861328, "y": 0.21309442818164825, "size": 2.1336206896551726, "label": "Ja Morant"}}, {"key": 987933, "attributes": {"x": 0.42507243156433105, "y": -0.01216739322990179, "size": 3.103448275862069, "label": "Jarrett Culver"}}, {"key": 987934, "attributes": {"x": 0.568604588508606, "y": 0.18541987240314484, "size": 2.1336206896551726, "label": "Brandon Clarke"}}, {"key": 1133825, "attributes": {"x": -0.4414042532444, "y": -0.612596333026886, "size": 2.004310344827586, "label": "Jeremiah Robinson-Earl"}}, {"key": 972550, "attributes": {"x": -0.19935443997383118, "y": -0.5049291253089905, "size": 3.103448275862069, "label": "Aleksej Poku\u0161evski"}}, {"key": 988301, "attributes": {"x": -0.2719804048538208, "y": -0.5020282864570618, "size": 2.8448275862068964, "label": "TY Jerome"}}, {"key": 1133847, "attributes": {"x": -0.41671648621559143, "y": -0.6340819597244263, "size": 2.004310344827586, "label": "Tre Mann"}}, {"key": 957474, "attributes": {"x": -0.3289914131164551, "y": -0.5729718804359436, "size": 2.392241379310345, "label": "Kenrich Williams"}}, {"key": 940841, "attributes": {"x": -0.2658463716506958, "y": -0.4431198835372925, "size": 3.232758620689655, "label": "Deonte Burton"}}, {"key": 817091, "attributes": {"x": -0.20771296322345734, "y": -0.4269099235534668, "size": 4.008620689655172, "label": "Derrick Favors"}}, {"key": 1092943, "attributes": {"x": -0.40530553460121155, "y": -0.39624038338661194, "size": 3.168103448275862, "label": "Isaiah Joe"}}, {"key": 1178575, "attributes": {"x": -0.35937342047691345, "y": -0.9319302439689636, "size": 1.3577586206896552, "label": "Jaylin Williams"}}, {"key": 1181394, "attributes": {"x": -0.30361491441726685, "y": -0.7794804573059082, "size": 1.810344827586207, "label": "Chet Holmgren"}}, {"key": 1092950, "attributes": {"x": -0.29921287298202515, "y": -0.5956404805183411, "size": 2.392241379310345, "label": "Vit Krejci"}}, {"key": 1191132, "attributes": {"x": -0.4443295896053314, "y": -0.9058603048324585, "size": 1.3577586206896552, "label": "Ousmane Dieng"}}, {"key": 989021, "attributes": {"x": -0.4843805432319641, "y": -0.8832033276557922, "size": 1.3577586206896552, "label": "Luguentz Dort"}}, {"key": 846947, "attributes": {"x": -0.12327534705400467, "y": -0.3940669000148773, "size": 4.267241379310345, "label": "Dario \u0160ari\u0107"}}, {"key": 1133924, "attributes": {"x": -0.3909219205379486, "y": -0.7521781921386719, "size": 1.810344827586207, "label": "Eugene Omoruyi"}}, {"key": 1178085, "attributes": {"x": -0.4038769006729126, "y": -0.9207525849342346, "size": 1.3577586206896552, "label": "Jalen Williams"}}, {"key": 989030, "attributes": {"x": -0.07914745807647705, "y": -0.32602518796920776, "size": 4.719827586206897, "label": "Isaiah Roby"}}, {"key": 1133812, "attributes": {"x": -0.3870946168899536, "y": -0.6501778364181519, "size": 2.004310344827586, "label": "Josh Giddey"}}, {"key": 1133815, "attributes": {"x": -0.34966692328453064, "y": -0.6667881608009338, "size": 2.004310344827586, "label": "Aaron Wiggins"}}, {"key": 940794, "attributes": {"x": -0.25836074352264404, "y": -0.29378581047058105, "size": 4.073275862068966, "label": "Shai Gilgeous-Alexander"}}, {"key": 885243, "attributes": {"x": -0.031974468380212784, "y": -0.3453185260295868, "size": 6.594827586206897, "label": "Justin Jackson"}}, {"key": 1182205, "attributes": {"x": -0.3460130989551544, "y": -0.7678881287574768, "size": 1.810344827586207, "label": "Lindy Waters III"}}, {"key": 1178370, "attributes": {"x": -0.8245007991790771, "y": -0.29234468936920166, "size": 1.1637931034482758, "label": "Jaden Ivey"}}, {"key": 940811, "attributes": {"x": -0.04950888827443123, "y": -0.29032307863235474, "size": 2.8448275862068964, "label": "Marvin Bagley III"}}, {"key": 817296, "attributes": {"x": -0.21464961767196655, "y": -0.26985403895378113, "size": 5.818965517241379, "label": "Nerlens Noel"}}, {"key": 1092884, "attributes": {"x": -0.2549714744091034, "y": 0.20291340351104736, "size": 2.3275862068965516, "label": "James Wiseman"}}, {"key": 1133845, "attributes": {"x": -0.5711655616760254, "y": -0.3478184640407562, "size": 1.6163793103448274, "label": "Isaiah Livers"}}, {"key": 1133854, "attributes": {"x": -0.5891672372817993, "y": -0.3047589957714081, "size": 1.6163793103448274, "label": "Cade Cunningham"}}, {"key": 1092901, "attributes": {"x": -0.47171175479888916, "y": -0.2680545151233673, "size": 2.004310344827586, "label": "Isaiah Stewart"}}, {"key": 1179430, "attributes": {"x": -0.8207041621208191, "y": -0.23220154643058777, "size": 1.1637931034482758, "label": "Jared Rhoden"}}, {"key": 1178536, "attributes": {"x": -0.7322707772254944, "y": -0.3517903685569763, "size": 1.228448275862069, "label": "Buddy Boeheim"}}, {"key": 817206, "attributes": {"x": -0.11477331072092056, "y": -0.07602594047784805, "size": 4.267241379310345, "label": "Cory Joseph"}}, {"key": 1179838, "attributes": {"x": -0.806591272354126, "y": -0.35126328468322754, "size": 1.1637931034482758, "label": "Jalen Duren"}}, {"key": 1178570, "attributes": {"x": -0.7224767208099365, "y": -0.40819475054740906, "size": 1.293103448275862, "label": "Stanley Umude"}}, {"key": 846928, "attributes": {"x": -0.3564702868461609, "y": 0.025135068222880363, "size": 4.137931034482759, "label": "Rodney McGruder"}}, {"key": 885206, "attributes": {"x": -0.3000068962574005, "y": -0.19991746544837952, "size": 4.073275862068966, "label": "Frank Jackson"}}, {"key": 816997, "attributes": {"x": -0.24732157588005066, "y": -0.1775849610567093, "size": 4.073275862068966, "label": "Bojan Bogdanovi\u0107"}}, {"key": 1132139, "attributes": {"x": -0.5754464864730835, "y": -0.4141111969947815, "size": 1.4870689655172415, "label": "Micah Potter"}}, {"key": 998636, "attributes": {"x": -0.42876771092414856, "y": -0.2213030904531479, "size": 2.1982758620689653, "label": "Killian Hayes"}}, {"key": 817014, "attributes": {"x": -0.14860257506370544, "y": -0.170693501830101, "size": 5.883620689655172, "label": "Alec Burks"}}, {"key": 940798, "attributes": {"x": -0.2977384030818939, "y": -0.1677691787481308, "size": 4.202586206896552, "label": "Hamidou Diallo"}}, {"key": 885248, "attributes": {"x": 0.4932734966278076, "y": 0.0010474359150975943, "size": 2.9094827586206895, "label": "Derrick White"}}, {"key": 1391265, "attributes": {"x": 0.7659834623336792, "y": -0.19722400605678558, "size": 1.0344827586206897, "label": "Mfiondu Kabengele"}}, {"key": 1133791, "attributes": {"x": 0.8087314963340759, "y": -0.0782712772488594, "size": 1.0344827586206897, "label": "Sam Hauser"}}, {"key": 817287, "attributes": {"x": 0.01634729839861393, "y": -0.2007167786359787, "size": 6.012931034482759, "label": "Mike Muscala"}}, {"key": 817127, "attributes": {"x": 0.023780828341841698, "y": -0.05878283828496933, "size": 4.525862068965517, "label": "Blake Griffin"}}, {"key": 905898, "attributes": {"x": 0.21683254837989807, "y": -0.05784609168767929, "size": 4.59051724137931, "label": "Luke Kornet"}}, {"key": 817165, "attributes": {"x": 0.12903018295764923, "y": -0.169137105345726, "size": 4.59051724137931, "label": "Al Horford"}}, {"key": 817101, "attributes": {"x": 0.14907047152519226, "y": -0.04349660500884056, "size": 5.625, "label": "Danilo Gallinari"}}, {"key": 1092911, "attributes": {"x": 0.5176862478256226, "y": -0.06939223408699036, "size": 2.1336206896551726, "label": "Payton Pritchard"}}, {"key": 1133778, "attributes": {"x": 0.7860344648361206, "y": -0.12313791364431381, "size": 1.0344827586206897, "label": "Justin Champagnie"}}, {"key": 846931, "attributes": {"x": 0.3761003911495209, "y": -0.2261262834072113, "size": 3.168103448275862, "label": "Malcolm Brogdon"}}, {"key": 940756, "attributes": {"x": 0.41090166568756104, "y": 0.04408631473779678, "size": 2.521551724137931, "label": "Robert Williams III"}}, {"key": 846898, "attributes": {"x": 0.389678031206131, "y": 0.019371334463357925, "size": 2.650862068965517, "label": "Jaylen Brown"}}, {"key": 885203, "attributes": {"x": 0.40632164478302, "y": -0.04474348947405815, "size": 2.650862068965517, "label": "Jayson Tatum"}}, {"key": 989079, "attributes": {"x": 0.42369765043258667, "y": 0.01700729690492153, "size": 2.521551724137931, "label": "Grant Williams"}}, {"key": 1179998, "attributes": {"x": 0.8189168572425842, "y": -0.14474807679653168, "size": 1.0344827586206897, "label": "JD Davison"}}, {"key": 817375, "attributes": {"x": 0.37036454677581787, "y": -0.024530956521630287, "size": 2.7801724137931036, "label": "Marcus Smart"}}, {"key": 940807, "attributes": {"x": -0.254686176776886, "y": -0.2302752286195755, "size": 3.232758620689655, "label": "Mikal Bridges"}}, {"key": 817422, "attributes": {"x": -0.18626859784126282, "y": 0.0007873661234043539, "size": 5.818965517241379, "label": "Noah Vonleh"}}, {"key": 988302, "attributes": {"x": -0.21587838232517242, "y": -0.21757802367210388, "size": 3.2974137931034484, "label": "Cameron Johnson"}}, {"key": 1179538, "attributes": {"x": -0.748724102973938, "y": -0.11771342903375626, "size": 1.228448275862069, "label": "Alondes Williams"}}, {"key": 817049, "attributes": {"x": -0.23333622515201569, "y": -0.08520850539207458, "size": 5.689655172413793, "label": "Seth Curry"}}, {"key": 817191, "attributes": {"x": -0.09456733614206314, "y": -0.021929746493697166, "size": 6.271551724137931, "label": "James Johnson"}}, {"key": 817065, "attributes": {"x": -0.3032744526863098, "y": -0.03453735634684563, "size": 4.655172413793103, "label": "Spencer Dinwiddie"}}, {"key": 1133995, "attributes": {"x": -0.551751971244812, "y": -0.08851553499698639, "size": 2.0689655172413794, "label": "Kessler Edwards"}}, {"key": 996152, "attributes": {"x": -0.14970067143440247, "y": -0.2588028013706207, "size": 5.172413793103448, "label": "Moses Brown"}}, {"key": 846909, "attributes": {"x": -0.28400716185569763, "y": -0.34083715081214905, "size": 2.974137931034483, "label": "Dorian Finney-Smith"}}, {"key": 1412285, "attributes": {"x": -0.7422650456428528, "y": -0.15848234295845032, "size": 1.228448275862069, "label": "Dru Smith"}}, {"key": 905919, "attributes": {"x": -0.31705179810523987, "y": -0.23494186997413635, "size": 3.2974137931034484, "label": "Royce O'Neale"}}, {"key": 1134015, "attributes": {"x": -0.5534942150115967, "y": -0.04556872323155403, "size": 2.0689655172413794, "label": "Day'Ron Sharpe"}}, {"key": 1134019, "attributes": {"x": -0.5363770127296448, "y": -0.013365407474339008, "size": 2.0689655172413794, "label": "Cam Thomas"}}, {"key": 989006, "attributes": {"x": -0.48126620054244995, "y": -0.11312897503376007, "size": 2.456896551724138, "label": "Nicolas Claxton"}}, {"key": 1183963, "attributes": {"x": -0.722718358039856, "y": -0.19835945963859558, "size": 1.228448275862069, "label": "David Duke"}}, {"key": 846949, "attributes": {"x": -0.34422340989112854, "y": -0.09865839779376984, "size": 3.8146551724137927, "label": "Ben Simmons"}}, {"key": 885229, "attributes": {"x": -0.16988888382911682, "y": -0.196829155087471, "size": 3.5560344827586206, "label": "Edmond Sumner"}}, {"key": 817140, "attributes": {"x": -0.4222780168056488, "y": -0.07954653352499008, "size": 2.974137931034483, "label": "Joe Harris"}}, {"key": 817270, "attributes": {"x": -0.09218870103359222, "y": 0.011834357865154743, "size": 3.75, "label": "Patty Mills"}}, {"key": 940804, "attributes": {"x": -0.09855788946151733, "y": 0.3914831876754761, "size": 3.9439655172413794, "label": "Troy Brown Jr."}}, {"key": 846918, "attributes": {"x": -0.04454817250370979, "y": 0.06259309500455856, "size": 4.008620689655172, "label": "Malik Beasley"}}, {"key": 1178535, "attributes": {"x": -0.32166144251823425, "y": 0.6241679787635803, "size": 1.0991379310344827, "label": "Cole Swider"}}, {"key": 940810, "attributes": {"x": -0.13600631058216095, "y": 0.5878618955612183, "size": 2.7155172413793105, "label": "Mohamed Bamba"}}, {"key": 816970, "attributes": {"x": 0.06294680386781693, "y": 0.16965749859809875, "size": 5.818965517241379, "label": "D.J. Augustin"}}, {"key": 1132140, "attributes": {"x": -0.23574964702129364, "y": 0.6654056310653687, "size": 1.0991379310344827, "label": "Austin Reaves"}}, {"key": 817357, "attributes": {"x": -0.019416555762290955, "y": 0.09626918286085129, "size": 3.8793103448275863, "label": "D'Angelo Russell"}}, {"key": 817196, "attributes": {"x": -0.048009347170591354, "y": 0.3275374472141266, "size": 5.107758620689655, "label": "Stanley Johnson"}}, {"key": 987343, "attributes": {"x": -0.15357322990894318, "y": 0.41902703046798706, "size": 3.103448275862069, "label": "Talen Horton-Tucker"}}, {"key": 817361, "attributes": {"x": 0.13348282873630524, "y": 0.08037541061639786, "size": 5.625, "label": "Dennis Schroder"}}, {"key": 957469, "attributes": {"x": -0.267082154750824, "y": 0.17832577228546143, "size": 4.59051724137931, "label": "Wenyen Gabriel"}}, {"key": 1386097, "attributes": {"x": -0.2753199338912964, "y": 0.6423407793045044, "size": 1.0991379310344827, "label": "Scotty Pippen Jr."}}, {"key": 988788, "attributes": {"x": -0.2457355260848999, "y": 0.3992098867893219, "size": 3.2974137931034484, "label": "Rui Hachimura"}}, {"key": 940758, "attributes": {"x": 0.1607804298400879, "y": 0.2813872992992401, "size": 3.4913793103448274, "label": "Lonnie Walker IV"}}, {"key": 885239, "attributes": {"x": -0.07394669204950333, "y": 0.17387033998966217, "size": 5.366379310344828, "label": "Davon Reed"}}, {"key": 940760, "attributes": {"x": -0.008190814405679703, "y": 0.12334055453538895, "size": 4.331896551724138, "label": "Jarred Vanderbilt"}}, {"key": 817181, "attributes": {"x": -0.16623598337173462, "y": 0.1905454844236374, "size": 3.8793103448275863, "label": "LeBron James"}}, {"key": 817054, "attributes": {"x": -0.1545681208372116, "y": 0.2240775227546692, "size": 3.2974137931034484, "label": "Anthony Davis"}}, {"key": 987872, "attributes": {"x": 0.31006258726119995, "y": -0.5213350653648376, "size": 1.4224137931034482, "label": "Jaylen Nowell"}}, {"key": 817344, "attributes": {"x": -0.13184931874275208, "y": -0.11941578984260559, "size": 6.271551724137931, "label": "Austin Rivers"}}, {"key": 817410, "attributes": {"x": 0.22389312088489532, "y": -0.3216358423233032, "size": 2.521551724137931, "label": "Karl-Anthony Towns"}}, {"key": 1092930, "attributes": {"x": 0.27538567781448364, "y": -0.5421047806739807, "size": 1.4224137931034482, "label": "Jaden McDaniels"}}, {"key": 988994, "attributes": {"x": -0.009220030158758163, "y": -0.28328466415405273, "size": 4.073275862068966, "label": "Nickeil Alexander-Walker"}}, {"key": 1092929, "attributes": {"x": 0.34397566318511963, "y": -0.49434247612953186, "size": 1.4224137931034482, "label": "Anthony Edwards"}}, {"key": 1000618, "attributes": {"x": 0.2942214608192444, "y": -0.8453012704849243, "size": 0.8405172413793104, "label": "Naz Reid"}}, {"key": 1181226, "attributes": {"x": 0.3491789400577545, "y": -0.8278207778930664, "size": 0.8405172413793104, "label": "Wendell Moore"}}, {"key": 846893, "attributes": {"x": -0.008158765733242035, "y": -0.31564339995384216, "size": 4.137931034482759, "label": "Taurean Prince"}}, {"key": 817038, "attributes": {"x": 0.18405577540397644, "y": -0.2140868604183197, "size": 3.2974137931034484, "label": "Mike Conley"}}, {"key": 951089, "attributes": {"x": 0.2633783221244812, "y": -0.38614869117736816, "size": 1.875, "label": "Jordan McLaughlin"}}, {"key": 1092948, "attributes": {"x": 0.3820537328720093, "y": -0.4209931790828705, "size": 2.1336206896551726, "label": "Nathan Knight"}}, {"key": 817111, "attributes": {"x": 0.03467730060219765, "y": -0.4445457458496094, "size": 2.7155172413793105, "label": "Rudy Gobert"}}, {"key": 816958, "attributes": {"x": 0.34720924496650696, "y": -0.11007389426231384, "size": 3.4267241379310347, "label": "Kyle Anderson"}}, {"key": 1133989, "attributes": {"x": -0.42766308784484863, "y": 0.42408329248428345, "size": 1.4224137931034482, "label": "Brandon Boston Jr."}}, {"key": 817324, "attributes": {"x": -0.24972285330295563, "y": 0.17079545557498932, "size": 5.107758620689655, "label": "Mason Plumlee"}}, {"key": 817229, "attributes": {"x": -0.05200936272740364, "y": 0.2833592891693115, "size": 2.9094827586206895, "label": "Kawhi Leonard"}}, {"key": 989007, "attributes": {"x": -0.4665728807449341, "y": 0.37383052706718445, "size": 1.4224137931034482, "label": "Amir Coffey"}}, {"key": 846927, "attributes": {"x": -0.3532542586326599, "y": 0.16342580318450928, "size": 2.9094827586206895, "label": "Ivica Zubac"}}, {"key": 1133811, "attributes": {"x": -0.5534824728965759, "y": 0.3186550736427307, "size": 2.0689655172413794, "label": "Nah'Shon Hyland"}}, {"key": 817332, "attributes": {"x": -0.19263310730457306, "y": 0.3107878565788269, "size": 3.103448275862069, "label": "Norman Powell"}}, {"key": 817108, "attributes": {"x": -0.2066088765859604, "y": 0.0646069347858429, "size": 2.9094827586206895, "label": "Paul George"}}, {"key": 816981, "attributes": {"x": -0.29455259442329407, "y": 0.3074941337108612, "size": 2.9094827586206895, "label": "Nicolas Batum"}}, {"key": 817044, "attributes": {"x": -0.1686653196811676, "y": 0.037375882267951965, "size": 4.073275862068966, "label": "Robert Covington"}}, {"key": 989017, "attributes": {"x": -0.4579021632671356, "y": 0.20773062109947205, "size": 1.810344827586207, "label": "Terance Mann"}}, {"key": 817115, "attributes": {"x": 0.1126849427819252, "y": 0.14287307858467102, "size": 3.4267241379310347, "label": "Eric Gordon"}}, {"key": 817437, "attributes": {"x": -0.12203105539083481, "y": 0.1165967658162117, "size": 5.366379310344828, "label": "Russell Westbrook"}}, {"key": 817279, "attributes": {"x": -0.0978059321641922, "y": 0.08509533107280731, "size": 4.073275862068966, "label": "Marcus Morris"}}, {"key": 940800, "attributes": {"x": -0.026278022676706314, "y": 0.5525755882263184, "size": 2.456896551724138, "label": "Wendell Carter Jr."}}, {"key": 1092865, "attributes": {"x": -0.04244662821292877, "y": 0.7575120329856873, "size": 1.7456896551724137, "label": "Cole Anthony"}}, {"key": 817025, "attributes": {"x": -0.018536122515797615, "y": 0.27523383498191833, "size": 4.137931034482759, "label": "Michael Carter-Williams"}}, {"key": 1094164, "attributes": {"x": -0.07872378081083298, "y": 0.9402459859848022, "size": 1.1637931034482758, "label": "Kevon Harris"}}, {"key": 1181231, "attributes": {"x": -0.08089509606361389, "y": 0.854520857334137, "size": 1.3577586206896552, "label": "Paolo Banchero"}}, {"key": 958769, "attributes": {"x": 0.1666019856929779, "y": 0.18262682855129242, "size": 3.232758620689655, "label": "Goga Bitadze"}}, {"key": 1134017, "attributes": {"x": -0.020577389746904373, "y": 0.8474856019020081, "size": 1.4224137931034482, "label": "Jalen Suggs"}}, {"key": 817352, "attributes": {"x": -0.0636819377541542, "y": 0.5784134268760681, "size": 2.586206896551724, "label": "Terrence Ross"}}, {"key": 1178446, "attributes": {"x": -0.013791253790259361, "y": 0.9391209483146667, "size": 1.1637931034482758, "label": "Caleb Houstan"}}, {"key": 1092949, "attributes": {"x": -0.21129192411899567, "y": 0.6739000678062439, "size": 2.0689655172413794, "label": "R.J. Hampton"}}, {"key": 940759, "attributes": {"x": 0.010931911878287792, "y": 0.35996463894844055, "size": 4.008620689655172, "label": "Moritz Wagner"}}, {"key": 1132119, "attributes": {"x": 0.11497917771339417, "y": 0.3511695861816406, "size": 3.2974137931034484, "label": "Jeff Dowtin"}}, {"key": 987099, "attributes": {"x": 0.23134735226631165, "y": 0.5258830189704895, "size": 2.0689655172413794, "label": "Bol Bol"}}, {"key": 987103, "attributes": {"x": -0.09255335479974747, "y": 0.7473393678665161, "size": 1.810344827586207, "label": "Chuma Okeke"}}, {"key": 989029, "attributes": {"x": -0.2416197806596756, "y": 0.13494056463241577, "size": 2.974137931034483, "label": "Admiral Schofield"}}, {"key": 905191, "attributes": {"x": -0.13129587471485138, "y": 0.8508546352386475, "size": 1.3577586206896552, "label": "Franz Wagner"}}, {"key": 885228, "attributes": {"x": -0.10437183082103729, "y": 0.6770942807197571, "size": 2.004310344827586, "label": "Jonathan Isaac"}}, {"key": 817139, "attributes": {"x": -0.17752380669116974, "y": 0.46021100878715515, "size": 3.038793103448276, "label": "Gary Harris"}}, {"key": 885237, "attributes": {"x": -0.11128781735897064, "y": 0.4319511950016022, "size": 2.7155172413793105, "label": "Markelle Fultz"}}, {"key": 1133792, "attributes": {"x": -0.145353302359581, "y": -0.6799837946891785, "size": 1.5517241379310345, "label": "Quentin Grimes"}}, {"key": 988995, "attributes": {"x": -0.1210954487323761, "y": -0.5429835915565491, "size": 2.0689655172413794, "label": "RJ Barrett"}}, {"key": 940803, "attributes": {"x": -0.08819586783647537, "y": -0.46605709195137024, "size": 2.9094827586206895, "label": "Jalen Brunson"}}, {"key": 940771, "attributes": {"x": -0.14746619760990143, "y": -0.5056630969047546, "size": 2.2629310344827585, "label": "Mitchell Robinson"}}, {"key": 817094, "attributes": {"x": -0.014375262893736362, "y": -0.019178440794348717, "size": 3.8793103448275863, "label": "Evan Fournier"}}, {"key": 861639, "attributes": {"x": -0.28759029507637024, "y": -0.07981820404529572, "size": 4.461206896551724, "label": "Isaiah Hartenstein"}}, {"key": 1133798, "attributes": {"x": -0.06695109605789185, "y": -0.674984335899353, "size": 1.5517241379310345, "label": "Jericho Sims"}}, {"key": 817351, "attributes": {"x": -0.09688324481248856, "y": -0.21299192309379578, "size": 5.107758620689655, "label": "Derrick Rose"}}, {"key": 987559, "attributes": {"x": 0.17105638980865479, "y": -0.2895899713039398, "size": 2.650862068965517, "label": "Luka \u0160amani\u0107"}}, {"key": 1133771, "attributes": {"x": -0.10397190600633621, "y": -0.6787207722663879, "size": 1.5517241379310345, "label": "Miles McBride"}}, {"key": 1092954, "attributes": {"x": 0.06618420779705048, "y": 0.021570108830928802, "size": 2.2629310344827585, "label": "Jalen Harris"}}, {"key": 1092877, "attributes": {"x": -0.1294279247522354, "y": -0.6302286982536316, "size": 1.6810344827586208, "label": "Obi Toppin"}}, {"key": 1092912, "attributes": {"x": -0.17721351981163025, "y": -0.6267052292823792, "size": 1.6810344827586208, "label": "Immanuel Quickley"}}, {"key": 817109, "attributes": {"x": 0.023826222866773605, "y": -0.303374320268631, "size": 3.4913793103448274, "label": "Taj Gibson"}}, {"key": 817338, "attributes": {"x": -0.18608063459396362, "y": -0.238629549741745, "size": 3.232758620689655, "label": "Julius Randle"}}, {"key": 885214, "attributes": {"x": -0.21282483637332916, "y": -0.16412723064422607, "size": 3.9439655172413794, "label": "Josh Hart"}}, {"key": 817376, "attributes": {"x": -0.2752200663089752, "y": 0.25173768401145935, "size": 5.883620689655172, "label": "Ish Smith"}}, {"key": 885216, "attributes": {"x": -0.31798654794692993, "y": 0.18433260917663574, "size": 4.849137931034483, "label": "Thomas Bryant"}}, {"key": 1178405, "attributes": {"x": -0.8402392268180847, "y": 0.44368281960487366, "size": 1.0344827586206897, "label": "Collin Gillespie"}}, {"key": 846917, "attributes": {"x": -0.4300019145011902, "y": 0.2718523442745209, "size": 2.7155172413793105, "label": "Jamal Murray"}}, {"key": 940773, "attributes": {"x": -0.4757595658302307, "y": 0.29526883363723755, "size": 2.456896551724138, "label": "Michael Porter Jr."}}, {"key": 940805, "attributes": {"x": -0.4430115520954132, "y": 0.09627328813076019, "size": 3.4267241379310347, "label": "Bruce Brown"}}, {"key": 817126, "attributes": {"x": -0.2509565055370331, "y": 0.0832282230257988, "size": 6.012931034482759, "label": "Jeff Green"}}, {"key": 1182729, "attributes": {"x": -0.8560409545898438, "y": 0.40454500913619995, "size": 1.0344827586206897, "label": "Christian Braun"}}, {"key": 817180, "attributes": {"x": -0.3386671245098114, "y": 0.28873199224472046, "size": 4.202586206896552, "label": "Reggie Jackson"}}, {"key": 1178030, "attributes": {"x": -0.8187366127967834, "y": 0.4832897484302521, "size": 1.0344827586206897, "label": "Peyton Watson"}}, {"key": 817199, "attributes": {"x": -0.44042643904685974, "y": 0.24004091322422028, "size": 2.7155172413793105, "label": "Nikola Jokic"}}, {"key": 1184816, "attributes": {"x": -0.8685975074768066, "y": 0.3614988923072815, "size": 1.0344827586206897, "label": "Jackson Thomas White"}}, {"key": 1092914, "attributes": {"x": -0.6236132979393005, "y": 0.40727370977401733, "size": 1.810344827586207, "label": "Zeke Nnaji"}}, {"key": 817205, "attributes": {"x": -0.308285117149353, "y": 0.01351555809378624, "size": 5.560344827586207, "label": "DeAndre Jordan"}}, {"key": 817114, "attributes": {"x": -0.3535822629928589, "y": 0.4270142912864685, "size": 2.8448275862068964, "label": "Aaron Gordon"}}, {"key": 885211, "attributes": {"x": -0.4950961172580719, "y": 0.24051810801029205, "size": 2.521551724137931, "label": "Vlatko \u010can\u010dar"}}, {"key": 817020, "attributes": {"x": -0.3217213451862335, "y": 0.2124309241771698, "size": 4.331896551724138, "label": "Kentavious Caldwell-Pope"}}, {"key": 1092867, "attributes": {"x": 0.20006529986858368, "y": -0.3830857574939728, "size": 1.875, "label": "Udoka Azubuike"}}, {"key": 1182725, "attributes": {"x": 0.6696139574050903, "y": -0.4640257656574249, "size": 0.7112068965517241, "label": "Ochai Agbaji"}}, {"key": 1178022, "attributes": {"x": 0.7261865139007568, "y": -0.3692602515220642, "size": 0.7112068965517241, "label": "Johnny Juzang"}}, {"key": 846919, "attributes": {"x": 0.19153201580047607, "y": 0.03308417648077011, "size": 5.625, "label": "Damian Jones"}}, {"key": 861512, "attributes": {"x": 0.4413047134876251, "y": -0.23628205060958862, "size": 1.293103448275862, "label": "Simone Fontecchio"}}, {"key": 817034, "attributes": {"x": 0.036521367728710175, "y": -0.1592741757631302, "size": 3.4913793103448274, "label": "Jordan Clarkson"}}, {"key": 998860, "attributes": {"x": 0.24090471863746643, "y": 0.2775235176086426, "size": 2.8448275862068964, "label": "Juan Toscano-Anderson"}}, {"key": 1136397, "attributes": {"x": 0.21325059235095978, "y": -0.2599429488182068, "size": 2.0689655172413794, "label": "Jared Butler"}}, {"key": 817106, "attributes": {"x": 0.24960686266422272, "y": -0.07501331716775894, "size": 3.685344827586207, "label": "Rudy Gay"}}, {"key": 885207, "attributes": {"x": 0.04632532224059105, "y": -0.008299735374748707, "size": 4.202586206896552, "label": "Lauri Markkanen"}}, {"key": 817306, "attributes": {"x": 0.11880754679441452, "y": -0.034743621945381165, "size": 4.849137931034483, "label": "Kelly Olynyk"}}, {"key": 1178591, "attributes": {"x": 0.4232955574989319, "y": -0.28529247641563416, "size": 1.293103448275862, "label": "Walker Kessler"}}, {"key": 1133920, "attributes": {"x": 0.405918687582016, "y": -0.5446676015853882, "size": 1.875, "label": "Chris Duarte"}}, {"key": 1092897, "attributes": {"x": 0.24588622152805328, "y": -0.48536643385887146, "size": 2.456896551724138, "label": "Jalen Smith"}}, {"key": 817154, "attributes": {"x": 0.02190505340695381, "y": -0.26130032539367676, "size": 6.271551724137931, "label": "George Hill"}}, {"key": 1181316, "attributes": {"x": 0.5596215128898621, "y": -0.7483934760093689, "size": 1.0991379310344827, "label": "Bennedict Mathurin"}}, {"key": 817414, "attributes": {"x": 0.28498199582099915, "y": -0.4244783818721771, "size": 2.456896551724138, "label": "Myles Turner"}}, {"key": 1181383, "attributes": {"x": 0.5298612117767334, "y": -0.7818949818611145, "size": 1.0991379310344827, "label": "Andrew Nembhard"}}, {"key": 1133928, "attributes": {"x": 0.6083236336708069, "y": -0.7119701504707336, "size": 1.0991379310344827, "label": "Terry Taylor"}}, {"key": 993675, "attributes": {"x": 0.3439273536205292, "y": -0.4308285713195801, "size": 2.456896551724138, "label": "Jordan Nwora"}}, {"key": 989900, "attributes": {"x": 0.372742623090744, "y": -0.5698604583740234, "size": 1.875, "label": "Oshae Brissett"}}, {"key": 1179821, "attributes": {"x": 0.6033110022544861, "y": -0.7558943033218384, "size": 1.0991379310344827, "label": "Kendall Brown"}}, {"key": 861455, "attributes": {"x": 0.338187575340271, "y": -0.05188099667429924, "size": 4.331896551724138, "label": "Daniel Theis"}}, {"key": 1092944, "attributes": {"x": 0.46738314628601074, "y": -0.3768880367279053, "size": 2.456896551724138, "label": "Tyrese Haliburton"}}, {"key": 1092913, "attributes": {"x": 0.45658743381500244, "y": -0.26341015100479126, "size": 2.7801724137931036, "label": "Aaron Nesmith"}}, {"key": 823344, "attributes": {"x": 0.18062761425971985, "y": -0.3254464268684387, "size": 3.2974137931034484, "label": "TJ McConnell"}}, {"key": 817172, "attributes": {"x": 0.12121047079563141, "y": -0.07028427720069885, "size": 4.978448275862069, "label": "Serge Ibaka"}}, {"key": 1189206, "attributes": {"x": 0.6479250192642212, "y": -0.6959326863288879, "size": 1.0991379310344827, "label": "Trevelin Queen"}}, {"key": 846905, "attributes": {"x": 0.3815656006336212, "y": -0.29297420382499695, "size": 3.168103448275862, "label": "Buddy Hield"}}, {"key": 1133916, "attributes": {"x": 0.4298398494720459, "y": -0.5201878547668457, "size": 1.875, "label": "Isaiah Jackson"}}, {"key": 940768, "attributes": {"x": -0.19466519355773926, "y": -0.12260007113218307, "size": 4.008620689655172, "label": "Landry Shamet"}}, {"key": 817315, "attributes": {"x": -0.10660513490438461, "y": -0.2792750895023346, "size": 3.3620689655172415, "label": "Chris Paul"}}, {"key": 988996, "attributes": {"x": -0.09255201369524002, "y": -0.30931854248046875, "size": 4.978448275862069, "label": "Darius Bazley"}}, {"key": 1180100, "attributes": {"x": -0.20545046031475067, "y": -0.665554404258728, "size": 1.0344827586206897, "label": "Adonis Arms"}}, {"key": 954950, "attributes": {"x": 0.22063593566417694, "y": -0.23004677891731262, "size": 2.9094827586206895, "label": "Jock Landale"}}, {"key": 1133767, "attributes": {"x": -0.27329039573669434, "y": -0.6360569596290588, "size": 1.0344827586206897, "label": "Ish Wainright"}}, {"key": 817000, "attributes": {"x": -0.03659644350409508, "y": -0.37222152948379517, "size": 2.650862068965517, "label": "Devin Booker"}}, {"key": 817317, "attributes": {"x": -0.038770440965890884, "y": -0.06280945986509323, "size": 4.202586206896552, "label": "Cameron Payne"}}, {"key": 940774, "attributes": {"x": 0.09960652142763138, "y": -0.30445727705955505, "size": 3.103448275862069, "label": "Josh Okogie"}}, {"key": 851371, "attributes": {"x": 0.07810550183057785, "y": 0.0970839187502861, "size": 2.7801724137931036, "label": "Damion Lee"}}, {"key": 1133932, "attributes": {"x": -0.33743542432785034, "y": -0.5973635911941528, "size": 1.0344827586206897, "label": "Duane Washington Jr."}}, {"key": 940812, "attributes": {"x": -0.012670994736254215, "y": -0.4159247875213623, "size": 2.392241379310345, "label": "Deandre Ayton"}}, {"key": 817074, "attributes": {"x": -0.13166986405849457, "y": -0.006920262239873409, "size": 4.073275862068966, "label": "Kevin Durant"}}, {"key": 817429, "attributes": {"x": -0.02177557535469532, "y": -0.22486166656017303, "size": 4.719827586206897, "label": "TJ Warren"}}, {"key": 905846, "attributes": {"x": -0.00641264021396637, "y": -0.18522703647613525, "size": 4.655172413793103, "label": "Torrey Craig"}}, {"key": 1092952, "attributes": {"x": -0.23549295961856842, "y": -0.3545207381248474, "size": 3.103448275862069, "label": "Saben Lee"}}, {"key": 816990, "attributes": {"x": -0.15634766221046448, "y": 0.14293022453784943, "size": 4.137931034482759, "label": "Bismack Biyombo"}}, {"key": 846946, "attributes": {"x": -0.13725663721561432, "y": -0.022917987778782845, "size": 3.8793103448275863, "label": "Georges Niang"}}, {"key": 817412, "attributes": {"x": -0.011400841176509857, "y": 0.06206320598721504, "size": 5.366379310344828, "label": "PJ Tucker"}}, {"key": 846950, "attributes": {"x": -0.36578962206840515, "y": -0.05062415823340416, "size": 2.650862068965517, "label": "Furkan Korkmaz"}}, {"key": 846983, "attributes": {"x": -0.004484713543206453, "y": -0.14194585382938385, "size": 5.043103448275862, "label": "Danuel House"}}, {"key": 1133927, "attributes": {"x": -0.6172159910202026, "y": -0.0002114831149810925, "size": 1.5517241379310345, "label": "Jaden Springer"}}, {"key": 940777, "attributes": {"x": -0.2441471964120865, "y": -0.12984897196292877, "size": 3.168103448275862, "label": "Shake Milton"}}, {"key": 1092906, "attributes": {"x": -0.5995033383369446, "y": 0.04015666991472244, "size": 1.6163793103448274, "label": "Paul Reed"}}, {"key": 940779, "attributes": {"x": 0.026456573978066444, "y": 0.031305745244026184, "size": 3.685344827586207, "label": "De'Anthony Melton"}}, {"key": 817133, "attributes": {"x": -0.23935256898403168, "y": 0.03879208117723465, "size": 3.75, "label": "James Harden"}}, {"key": 989009, "attributes": {"x": -0.41167932748794556, "y": 0.3729228377342224, "size": 2.392241379310345, "label": "Jalen McDaniels"}}, {"key": 1133907, "attributes": {"x": -0.5981171131134033, "y": 0.09871391206979752, "size": 1.5517241379310345, "label": "Charles Bassey"}}, {"key": 817141, "attributes": {"x": -0.2904427647590637, "y": 0.08611097931861877, "size": 3.2974137931034484, "label": "Tobias Harris"}}, {"key": 1132153, "attributes": {"x": -0.229383185505867, "y": 0.35053619742393494, "size": 3.4267241379310347, "label": "Mac McClung"}}, {"key": 1178394, "attributes": {"x": -0.7311107516288757, "y": 0.07035663723945618, "size": 1.0991379310344827, "label": "Julian Champagnie"}}, {"key": 817081, "attributes": {"x": -0.35129842162132263, "y": -0.011278804391622543, "size": 2.7801724137931036, "label": "Joel Embiid"}}, {"key": 1092926, "attributes": {"x": -0.5774126052856445, "y": 0.07022177428007126, "size": 1.6163793103448274, "label": "Tyrese Maxey"}}, {"key": 1092868, "attributes": {"x": -0.4197245240211487, "y": 0.6515687108039856, "size": 1.5517241379310345, "label": "LaMelo Ball"}}, {"key": 1180196, "attributes": {"x": -0.49498462677001953, "y": 0.9159363508224487, "size": 0.8405172413793104, "label": "Bryce McGowens"}}, {"key": 1134020, "attributes": {"x": -0.3723645508289337, "y": 0.7144376635551453, "size": 1.4870689655172415, "label": "JT Thor"}}, {"key": 817147, "attributes": {"x": -0.07859287410974503, "y": 0.24560357630252838, "size": 3.4913793103448274, "label": "Gordon Hayward"}}, {"key": 817353, "attributes": {"x": -0.06333039700984955, "y": 0.4461013078689575, "size": 2.456896551724138, "label": "Terry Rozier"}}, {"key": 1092907, "attributes": {"x": -0.4559338092803955, "y": 0.658997654914856, "size": 1.4870689655172415, "label": "Nick Richards"}}, {"key": 903020, "attributes": {"x": -0.4225549101829529, "y": -0.013392836786806583, "size": 3.038793103448276, "label": "Theo Maledon"}}, {"key": 1181229, "attributes": {"x": -0.5551680326461792, "y": 0.8809542655944824, "size": 0.8405172413793104, "label": "Mark Williams"}}, {"key": 817136, "attributes": {"x": -0.2520335614681244, "y": 0.32095661759376526, "size": 4.202586206896552, "label": "Montrezl Harrell"}}, {"key": 1133782, "attributes": {"x": -0.3346496522426605, "y": 0.7365558743476868, "size": 1.4870689655172415, "label": "James Bouknight"}}, {"key": 989016, "attributes": {"x": -0.3152064383029938, "y": 0.6724182963371277, "size": 1.6163793103448274, "label": "Cody Martin"}}, {"key": 1133786, "attributes": {"x": -0.4065287709236145, "y": 0.6969591379165649, "size": 1.4870689655172415, "label": "Kai Jones"}}, {"key": 817307, "attributes": {"x": -0.11965133994817734, "y": 0.22727082669734955, "size": 4.461206896551724, "label": "Kelly Oubre Jr."}}, {"key": 987613, "attributes": {"x": -0.2705477774143219, "y": 0.6984929442405701, "size": 1.6163793103448274, "label": "P.J. Washington"}}, {"key": 1391264, "attributes": {"x": 0.09561192244291306, "y": -0.18063819408416748, "size": 4.59051724137931, "label": "KZ Okpala"}}, {"key": 1132132, "attributes": {"x": 0.6390617489814758, "y": -0.10055743902921677, "size": 1.6163793103448274, "label": "Davion Mitchell"}}, {"key": 1412282, "attributes": {"x": 0.8095629215240479, "y": -0.17630308866500854, "size": 1.0344827586206897, "label": "PJ Dozier"}}, {"key": 940778, "attributes": {"x": 0.4873257279396057, "y": -0.050015512853860855, "size": 2.586206896551724, "label": "Chimezie Metu"}}, {"key": 817163, "attributes": {"x": 0.2301633656024933, "y": -0.13562431931495667, "size": 3.4913793103448274, "label": "Richaun Holmes"}}, {"key": 885258, "attributes": {"x": 0.10640271753072739, "y": 0.2485564649105072, "size": 3.3620689655172415, "label": "Malik Monk"}}, {"key": 989005, "attributes": {"x": 0.2596164047718048, "y": 0.15509501099586487, "size": 3.232758620689655, "label": "Terence Davis"}}, {"key": 1132138, "attributes": {"x": 0.6269741654396057, "y": -0.17947439849376678, "size": 1.6163793103448274, "label": "Neemias Queta"}}, {"key": 817228, "attributes": {"x": 0.13051527738571167, "y": 0.10417728871107101, "size": 5.107758620689655, "label": "Alex Len"}}, {"key": 816977, "attributes": {"x": 0.28913113474845886, "y": -0.13946981728076935, "size": 3.4913793103448274, "label": "Harrison Barnes"}}, {"key": 1000050, "attributes": {"x": 0.6323130130767822, "y": -0.13925080001354218, "size": 1.6163793103448274, "label": "Louis King"}}, {"key": 940788, "attributes": {"x": 0.5087924599647522, "y": -0.23677198588848114, "size": 2.456896551724138, "label": "Kevin Huerter"}}, {"key": 1179991, "attributes": {"x": 0.7601583003997803, "y": -0.25513797998428345, "size": 1.0344827586206897, "label": "Keon Ellis"}}, {"key": 846968, "attributes": {"x": 0.3092785179615021, "y": -0.19550904631614685, "size": 3.232758620689655, "label": "Domantas Sabonis"}}, {"key": 1180986, "attributes": {"x": 0.7959121465682983, "y": -0.22278061509132385, "size": 1.0344827586206897, "label": "Keegan Murray"}}, {"key": 817240, "attributes": {"x": 0.07881336659193039, "y": -0.06888726353645325, "size": 4.655172413793103, "label": "Trey Lyles"}}, {"key": 885244, "attributes": {"x": 0.49628371000289917, "y": -0.1311810314655304, "size": 2.3275862068965516, "label": "De'Aaron Fox"}}, {"key": 940769, "attributes": {"x": -0.3296221196651459, "y": -0.37815365195274353, "size": 2.1336206896551726, "label": "Collin Sexton"}}, {"key": 817121, "attributes": {"x": 0.017413411289453506, "y": -0.026369038969278336, "size": 6.530172413793103, "label": "Danny Green"}}, {"key": 885252, "attributes": {"x": -0.21932357549667358, "y": -0.19042494893074036, "size": 3.8146551724137927, "label": "Donovan Mitchell"}}, {"key": 1092900, "attributes": {"x": -0.36424803733825684, "y": -0.4849081039428711, "size": 1.6810344827586208, "label": "Lamar Stevens"}}, {"key": 1133830, "attributes": {"x": -0.4830161929130554, "y": -0.5153486132621765, "size": 1.4224137931034482, "label": "Evan Mobley"}}, {"key": 885222, "attributes": {"x": -0.39452412724494934, "y": -0.2615429759025574, "size": 2.7155172413793105, "label": "Jarrett Allen"}}, {"key": 987560, "attributes": {"x": -0.4338033199310303, "y": -0.38806942105293274, "size": 1.7456896551724137, "label": "Dean Wade"}}, {"key": 817354, "attributes": {"x": -0.0027953009121119976, "y": -0.2666512727737427, "size": 5.883620689655172, "label": "Ricky Rubio"}}, {"key": 987564, "attributes": {"x": -0.40267959237098694, "y": -0.33245182037353516, "size": 1.9396551724137931, "label": "Dylan Windler"}}, {"key": 817293, "attributes": {"x": -0.32534176111221313, "y": -0.039623014628887177, "size": 4.719827586206897, "label": "Raul Neto"}}, {"key": 1092915, "attributes": {"x": -0.39980703592300415, "y": -0.4666435420513153, "size": 1.6810344827586208, "label": "Isaac Okoro"}}, {"key": 905877, "attributes": {"x": -0.17799288034439087, "y": -0.2851702868938446, "size": 2.9094827586206895, "label": "Cedi Osman"}}, {"key": 1178134, "attributes": {"x": -0.565825879573822, "y": -0.6183846592903137, "size": 1.0991379310344827, "label": "Isaiah Mobley"}}, {"key": 1396473, "attributes": {"x": -0.6038349270820618, "y": -0.5803144574165344, "size": 1.0991379310344827, "label": "Sam Merrill"}}, {"key": 846936, "attributes": {"x": -0.07503088563680649, "y": -0.2639722228050232, "size": 3.8146551724137927, "label": "Caris LeVert"}}, {"key": 987161, "attributes": {"x": -0.36902719736099243, "y": -0.36640051007270813, "size": 1.9396551724137931, "label": "Darius Garland"}}, {"key": 817237, "attributes": {"x": -0.18015868961811066, "y": 0.11622568964958191, "size": 5.818965517241379, "label": "Robin Lopez"}}, {"key": 1409308, "attributes": {"x": -0.1896352767944336, "y": -0.46896666288375854, "size": 3.685344827586207, "label": "Mamadi Diakite"}}, {"key": 1121280, "attributes": {"x": 0.4795061945915222, "y": 0.6425706148147583, "size": 1.1637931034482758, "label": "\u00d6mer Yurtseven"}}, {"key": 972549, "attributes": {"x": -0.00727496761828661, "y": 0.21955832839012146, "size": 3.038793103448276, "label": "Haywood Highsmith"}}, {"key": 1084054, "attributes": {"x": 0.45137840509414673, "y": 0.5431429147720337, "size": 1.3577586206896552, "label": "Nikola Jovi\u0107"}}, {"key": 817305, "attributes": {"x": 0.2025841623544693, "y": 0.14498910307884216, "size": 4.267241379310345, "label": "Victor Oladipo"}}, {"key": 990763, "attributes": {"x": 0.04117502272129059, "y": 0.5620054602622986, "size": 2.650862068965517, "label": "Caleb Martin"}}, {"key": 958896, "attributes": {"x": 0.33019617199897766, "y": 0.3957120478153229, "size": 2.1336206896551726, "label": "Gabe Vincent"}}, {"key": 990002, "attributes": {"x": 0.2535715401172638, "y": 0.3962975740432739, "size": 2.586206896551724, "label": "Max Strus"}}, {"key": 817464, "attributes": {"x": -0.045383669435977936, "y": 0.22072167694568634, "size": 4.655172413793103, "label": "Cody Zeller"}}, {"key": 1178047, "attributes": {"x": 0.44179844856262207, "y": 0.6679043173789978, "size": 1.1637931034482758, "label": "Jamaree Bouyea"}}, {"key": 945092, "attributes": {"x": 0.29420313239097595, "y": 0.35864514112472534, "size": 2.1982758620689653, "label": "Duncan Robinson"}}, {"key": 817238, "attributes": {"x": 0.008794155903160572, "y": 0.05120734125375748, "size": 3.685344827586207, "label": "Kevin Love"}}, {"key": 817239, "attributes": {"x": 0.17807556688785553, "y": 0.39032942056655884, "size": 3.4267241379310347, "label": "Kyle Lowry"}}, {"key": 885218, "attributes": {"x": 0.2776917815208435, "y": 0.38422921299934387, "size": 2.1982758620689653, "label": "Bam Adebayo"}}, {"key": 988643, "attributes": {"x": 0.38349446654319763, "y": 0.09011641144752502, "size": 3.168103448275862, "label": "Chris Silva"}}, {"key": 1132146, "attributes": {"x": -0.004188004415482283, "y": 0.3137624263763428, "size": 2.3275862068965516, "label": "Dru Smith"}}, {"key": 988789, "attributes": {"x": 0.3527129888534546, "y": 0.3651741147041321, "size": 2.1336206896551726, "label": "Tyler Herro"}}, {"key": 1180021, "attributes": {"x": 0.5131723284721375, "y": 0.6098838448524475, "size": 1.1637931034482758, "label": "Jamal Cain"}}, {"key": 817144, "attributes": {"x": 0.2174249291419983, "y": 0.38275548815727234, "size": 2.2629310344827585, "label": "Udonis Haslem"}}, {"key": 817017, "attributes": {"x": 0.15818263590335846, "y": 0.15984977781772614, "size": 4.008620689655172, "label": "Jimmy Butler"}}, {"key": 988678, "attributes": {"x": -0.5526400804519653, "y": -0.1339809000492096, "size": 2.3275862068965516, "label": "Nassir Little"}}, {"key": 1485076, "attributes": {"x": -0.7761428356170654, "y": -0.24135369062423706, "size": 1.4870689655172415, "label": "Jeenathan Williams"}}, {"key": 817300, "attributes": {"x": -0.4373008608818054, "y": -0.10208067297935486, "size": 3.103448275862069, "label": "Jusuf Nurki\u0107"}}, {"key": 987931, "attributes": {"x": -0.4578254520893097, "y": -0.4278464913368225, "size": 2.586206896551724, "label": "Cam Reddish"}}, {"key": 989085, "attributes": {"x": -0.3372737765312195, "y": -0.13514700531959534, "size": 3.8793103448275863, "label": "Matisse Thybulle"}}, {"key": 1183277, "attributes": {"x": -0.7035292983055115, "y": -0.34640854597091675, "size": 1.4870689655172415, "label": "Jabari Walker"}}, {"key": 817453, "attributes": {"x": -0.13488587737083435, "y": 0.03029055707156658, "size": 4.59051724137931, "label": "Justise Winslow"}}, {"key": 1134001, "attributes": {"x": -0.5149946212768555, "y": -0.04968355968594551, "size": 2.7155172413793105, "label": "Keon Johnson"}}, {"key": 1178822, "attributes": {"x": -0.7261786460876465, "y": -0.37498924136161804, "size": 1.4870689655172415, "label": "Shaedon Sharpe"}}, {"key": 1183180, "attributes": {"x": -0.7518501877784729, "y": -0.29719093441963196, "size": 1.4870689655172415, "label": "Justin Minaya"}}, {"key": 817232, "attributes": {"x": -0.4772101044654846, "y": -0.1413770169019699, "size": 2.8448275862068964, "label": "Damian Lillard"}}, {"key": 846933, "attributes": {"x": 0.013109500519931316, "y": -0.08438968658447266, "size": 5.431034482758621, "label": "Kris Dunn"}}, {"key": 1133781, "attributes": {"x": -0.5891076922416687, "y": -0.17282187938690186, "size": 2.0689655172413794, "label": "Greg Brown III"}}, {"key": 1003734, "attributes": {"x": -0.6867882609367371, "y": -0.4371766448020935, "size": 1.4870689655172415, "label": "Ibou Dianko Badji"}}, {"key": 885208, "attributes": {"x": -0.29315072298049927, "y": -0.2708820104598999, "size": 4.978448275862069, "label": "Dennis Smith Jr."}}, {"key": 940767, "attributes": {"x": -0.5176184177398682, "y": -0.17597658932209015, "size": 2.392241379310345, "label": "Anfernee Simons"}}, {"key": 817119, "attributes": {"x": -0.2864004075527191, "y": -0.10036756843328476, "size": 5.754310344827586, "label": "Jerami Grant"}}, {"key": 1180127, "attributes": {"x": -0.7816687226295471, "y": -0.283443421125412, "size": 1.4870689655172415, "label": "John Butler"}}, {"key": 1133158, "attributes": {"x": -0.4991120994091034, "y": -0.4541701674461365, "size": 3.038793103448276, "label": "Olivier Sarr"}}, {"key": 1133800, "attributes": {"x": -0.7663091421127319, "y": -0.4042331874370575, "size": 1.4870689655172415, "label": "Trendon Watford"}}, {"key": 940782, "attributes": {"x": -0.1657027304172516, "y": -0.37207603454589844, "size": 4.202586206896552, "label": "Kevin Knox"}}, {"key": 846963, "attributes": {"x": -0.10186126828193665, "y": -0.0869092047214508, "size": 5.948275862068966, "label": "Ryan Arcidiacono"}}, {"key": 1178996, "attributes": {"x": -0.7249767780303955, "y": -0.4386204481124878, "size": 1.4870689655172415, "label": "Jeenathan Williams"}}, {"key": 957172, "attributes": {"x": -0.3904891312122345, "y": 0.12093238532543182, "size": 2.586206896551724, "label": "Drew Eubanks"}}, {"key": 885250, "attributes": {"x": 0.09916644543409348, "y": 0.5322185754776001, "size": 2.1982758620689653, "label": "OG Anunoby"}}, {"key": 846915, "attributes": {"x": 0.18729425966739655, "y": 0.09436129778623581, "size": 6.65948275862069, "label": "Juancho Hernangomez"}}, {"key": 1181314, "attributes": {"x": 0.25859659910202026, "y": 0.8748602867126465, "size": 1.0344827586206897, "label": "Christian Koloko"}}, {"key": 1133795, "attributes": {"x": 0.1378476917743683, "y": 0.7444990277290344, "size": 1.4224137931034482, "label": "Dalano Banton"}}, {"key": 940776, "attributes": {"x": -0.11888931691646576, "y": 0.059984587132930756, "size": 4.849137931034483, "label": "Sviatoslav Mykhailiuk"}}, {"key": 1092937, "attributes": {"x": 0.20555461943149567, "y": 0.6618518829345703, "size": 1.6163793103448274, "label": "Malachi Flynn"}}, {"key": 942986, "attributes": {"x": 0.15328924357891083, "y": 0.672320544719696, "size": 1.6163793103448274, "label": "Yuta Watanabe"}}, {"key": 1179581, "attributes": {"x": 0.31236183643341064, "y": 0.8438597321510315, "size": 1.0991379310344827, "label": "Ron Harper"}}, {"key": 817328, "attributes": {"x": 0.05803191289305687, "y": 0.4735935926437378, "size": 4.267241379310345, "label": "Otto Porter Jr."}}, {"key": 905844, "attributes": {"x": 0.12993291020393372, "y": 0.47132888436317444, "size": 2.521551724137931, "label": "Chris Boucher"}}, {"key": 817463, "attributes": {"x": 0.12598611414432526, "y": 0.20625807344913483, "size": 5.107758620689655, "label": "Thaddeus Young"}}, {"key": 1133784, "attributes": {"x": 0.18936003744602203, "y": 0.7317598462104797, "size": 1.4224137931034482, "label": "Scottie Barnes"}}, {"key": 940761, "attributes": {"x": 0.046140383929014206, "y": 0.314353346824646, "size": 2.521551724137931, "label": "Gary Trent Jr."}}, {"key": 846971, "attributes": {"x": 0.15551139414310455, "y": 0.5201736092567444, "size": 2.1982758620689653, "label": "Pascal Siakam"}}, {"key": 846972, "attributes": {"x": 0.12146715074777603, "y": 0.5138566493988037, "size": 2.2629310344827585, "label": "Fred VanVleet"}}, {"key": 846973, "attributes": {"x": 0.303606241941452, "y": 0.28048449754714966, "size": 3.2974137931034484, "label": "Jakob P\u00f6ltl"}}, {"key": 1092863, "attributes": {"x": 0.2005455195903778, "y": 0.48882097005844116, "size": 2.521551724137931, "label": "Precious Achiuwa"}}, {"key": 1184917, "attributes": {"x": -0.7221384048461914, "y": 0.6374258995056152, "size": 1.1637931034482758, "label": "Vernon Carey"}}, {"key": 1134112, "attributes": {"x": -0.6440773010253906, "y": 0.38718312978744507, "size": 1.7456896551724137, "label": "Jordan Goodwin"}}, {"key": 1134115, "attributes": {"x": -0.53022700548172, "y": 0.4548620283603668, "size": 1.9396551724137931, "label": "Corey Kispert"}}, {"key": 1134118, "attributes": {"x": -0.573371946811676, "y": 0.45081764459609985, "size": 1.810344827586207, "label": "Isaiah Todd"}}, {"key": 1178665, "attributes": {"x": -0.6934400200843811, "y": 0.6663505434989929, "size": 1.1637931034482758, "label": "Johnny Davis"}}, {"key": 817330, "attributes": {"x": -0.3150036931037903, "y": 0.04947087913751602, "size": 3.232758620689655, "label": "Kristaps Porzingis"}}, {"key": 817458, "attributes": {"x": 0.01269642822444439, "y": 0.07474888861179352, "size": 6.594827586206897, "label": "Delon Wright"}}, {"key": 1092921, "attributes": {"x": -0.2502596378326416, "y": 0.47648119926452637, "size": 2.974137931034483, "label": "Devon Dotson"}}, {"key": 1415757, "attributes": {"x": -0.3180675506591797, "y": 0.4690497815608978, "size": 2.7155172413793105, "label": "Jay Huff"}}, {"key": 905681, "attributes": {"x": -0.47599053382873535, "y": 0.4664666950702667, "size": 2.1336206896551726, "label": "Anthony Gill"}}, {"key": 816979, "attributes": {"x": -0.3831840753555298, "y": 0.28151246905326843, "size": 3.685344827586207, "label": "Will Barton"}}, {"key": 885209, "attributes": {"x": -0.3906216323375702, "y": 0.33173778653144836, "size": 3.232758620689655, "label": "Monte Morris"}}, {"key": 816985, "attributes": {"x": -0.37896043062210083, "y": 0.39256125688552856, "size": 2.650862068965517, "label": "Bradley Beal"}}, {"key": 913627, "attributes": {"x": -0.42553070187568665, "y": 0.48221057653427124, "size": 2.1982758620689653, "label": "Deni Avdija"}}, {"key": 885215, "attributes": {"x": -0.35783201456069946, "y": 0.2198576033115387, "size": 3.620689655172414, "label": "Kyle Kuzma"}}, {"key": 989026, "attributes": {"x": -0.53994220495224, "y": 0.4030575752258301, "size": 2.004310344827586, "label": "Daniel Gafford"}}, {"key": 956516, "attributes": {"x": -0.17576268315315247, "y": 0.3887377977371216, "size": 3.685344827586207, "label": "Kendrick Nunn"}}, {"key": 1132141, "attributes": {"x": -0.6603564023971558, "y": 0.6958791613578796, "size": 1.1637931034482758, "label": "Jordan Schakel"}}, {"key": 1180783, "attributes": {"x": -0.7444949150085449, "y": 0.600529134273529, "size": 1.1637931034482758, "label": "Xavier Cooks"}}, {"key": 987552, "attributes": {"x": 0.46067550778388977, "y": 0.1730785220861435, "size": 1.9396551724137931, "label": "Keldon Johnson"}}, {"key": 817058, "attributes": {"x": 0.1512690782546997, "y": 0.050615403801202774, "size": 6.336206896551724, "label": "Dewayne Dedmon"}}, {"key": 817063, "attributes": {"x": 0.3051444888114929, "y": -0.06057005003094673, "size": 4.525862068965517, "label": "Gorgui Dieng"}}, {"key": 817256, "attributes": {"x": 0.18024730682373047, "y": -0.13704538345336914, "size": 4.59051724137931, "label": "Doug McDermott"}}, {"key": 940809, "attributes": {"x": 0.10845830291509628, "y": 0.08558085560798645, "size": 3.3620689655172415, "label": "Keita Bates-Diop"}}, {"key": 905900, "attributes": {"x": 0.15914370119571686, "y": 0.44951218366622925, "size": 3.232758620689655, "label": "Khem Birch"}}, {"key": 1133165, "attributes": {"x": 0.5156232714653015, "y": 0.08706583082675934, "size": 1.810344827586207, "label": "Joe Wieskamp"}}, {"key": 1179822, "attributes": {"x": 0.6496286392211914, "y": 0.08555736392736435, "size": 1.1637931034482758, "label": "Jeremy Sochan"}}, {"key": 1092880, "attributes": {"x": 0.49897468090057373, "y": 0.15804745256900787, "size": 1.810344827586207, "label": "Devin Vassell"}}, {"key": 1092947, "attributes": {"x": 0.5106235146522522, "y": 0.12056193500757217, "size": 1.810344827586207, "label": "Tre Jones"}}, {"key": 940793, "attributes": {"x": 0.04275386035442352, "y": 0.2889455556869507, "size": 2.7801724137931036, "label": "Devonte' Graham"}}, {"key": 885242, "attributes": {"x": 0.12560409307479858, "y": 0.024081217125058174, "size": 2.9094827586206895, "label": "Zach Collins"}}, {"key": 987101, "attributes": {"x": 0.3328360915184021, "y": 0.08255251497030258, "size": 3.232758620689655, "label": "Romeo Langford"}}, {"key": 816960, "attributes": {"x": 0.24757467210292816, "y": -0.3110179305076599, "size": 2.1336206896551726, "label": "Giannis Antetokounmpo"}}, {"key": 816961, "attributes": {"x": 0.04300175607204437, "y": -0.38517430424690247, "size": 2.7801724137931036, "label": "Thanasis Antetokounmpo"}}, {"key": 817249, "attributes": {"x": -0.03768841549754143, "y": -0.11110387742519379, "size": 4.978448275862069, "label": "Wesley Matthews"}}, {"key": 940801, "attributes": {"x": -0.003180772066116333, "y": -0.1194251999258995, "size": 4.267241379310345, "label": "Jevon Carter"}}, {"key": 817159, "attributes": {"x": 0.10629585385322571, "y": -0.21538406610488892, "size": 2.974137931034483, "label": "Jrue Holiday"}}, {"key": 817068, "attributes": {"x": 0.03704202175140381, "y": 0.14171890914440155, "size": 6.530172413793103, "label": "Goran Dragi\u0107"}}, {"key": 817230, "attributes": {"x": -0.11813003569841385, "y": -0.17552277445793152, "size": 4.849137931034483, "label": "Meyers Leonard"}}, {"key": 817039, "attributes": {"x": 0.049632634967565536, "y": -0.32707634568214417, "size": 2.521551724137931, "label": "Pat Connaughton"}}, {"key": 940814, "attributes": {"x": 0.20211021602153778, "y": -0.1805671900510788, "size": 3.4913793103448274, "label": "Grayson Allen"}}, {"key": 817329, "attributes": {"x": 0.03580351546406746, "y": -0.11430623382329941, "size": 3.685344827586207, "label": "Bobby Portis"}}, {"key": 817265, "attributes": {"x": 0.13470780849456787, "y": -0.28675365447998047, "size": 2.2629310344827585, "label": "Khris Middleton"}}, {"key": 1134004, "attributes": {"x": 0.1780727654695511, "y": -0.5111510157585144, "size": 1.6163793103448274, "label": "Sandro Mamukelashvili"}}, {"key": 817236, "attributes": {"x": -0.06983225047588348, "y": -0.149688720703125, "size": 3.4913793103448274, "label": "Brook Lopez"}}, {"key": 1179862, "attributes": {"x": 0.16143816709518433, "y": -0.683988630771637, "size": 1.0344827586206897, "label": "AJ Green"}}, {"key": 817047, "attributes": {"x": 0.11709229648113251, "y": -0.08942046016454697, "size": 5.495689655172414, "label": "Jae Crowder"}}, {"key": 817175, "attributes": {"x": -0.14642435312271118, "y": -0.33016735315322876, "size": 3.620689655172414, "label": "Joe Ingles"}}, {"key": 1206073, "attributes": {"x": 0.10886478424072266, "y": -0.6919515132904053, "size": 1.0344827586206897, "label": "MarJon Beauchamp"}}, {"key": 989024, "attributes": {"x": 0.27957069873809814, "y": 0.6063283681869507, "size": 1.5517241379310345, "label": "Jordan Poole"}}, {"key": 817442, "attributes": {"x": 0.26678231358528137, "y": 0.24071313440799713, "size": 2.7801724137931036, "label": "Andrew Wiggins"}}, {"key": 817122, "attributes": {"x": 0.2716217041015625, "y": 0.49153682589530945, "size": 1.9396551724137931, "label": "Draymond Green"}}, {"key": 817125, "attributes": {"x": -0.05328861251473427, "y": 0.3595946431159973, "size": 3.9439655172413794, "label": "JaMychal Green"}}, {"key": 1132134, "attributes": {"x": 0.29314330220222473, "y": 0.753223717212677, "size": 1.293103448275862, "label": "Moses Moody"}}, {"key": 1132126, "attributes": {"x": 0.3365095257759094, "y": 0.7271072864532471, "size": 1.293103448275862, "label": "Jonathan Kuminga"}}, {"key": 855982, "attributes": {"x": -0.08097510784864426, "y": 0.2634425163269043, "size": 4.525862068965517, "label": "Gary Payton II"}}, {"key": 1180496, "attributes": {"x": 0.3954581320285797, "y": 0.7593857049942017, "size": 1.1637931034482758, "label": "Patrick Baldwin Jr"}}, {"key": 817235, "attributes": {"x": 0.33356112241744995, "y": 0.5116485953330994, "size": 1.7456896551724137, "label": "Kevon Looney"}}, {"key": 817173, "attributes": {"x": 0.2719457745552063, "y": 0.30904462933540344, "size": 3.8793103448275863, "label": "Andre Iguodala"}}, {"key": 1389948, "attributes": {"x": 0.480714350938797, "y": 0.8683988451957703, "size": 0.9051724137931035, "label": "Pat Spencer"}}, {"key": 817050, "attributes": {"x": 0.33664146065711975, "y": 0.45364129543304443, "size": 1.9396551724137931, "label": "Stephen Curry"}}, {"key": 817404, "attributes": {"x": 0.3008214235305786, "y": 0.47170475125312805, "size": 1.9396551724137931, "label": "Klay Thompson"}}, {"key": 1178910, "attributes": {"x": 0.5335372090339661, "y": 0.8309218883514404, "size": 0.9051724137931035, "label": "Ryan Rollins"}}, {"key": 940799, "attributes": {"x": 0.31646528840065, "y": 0.13008378446102142, "size": 3.3620689655172415, "label": "Donte DiVincenzo"}}, {"key": 1178819, "attributes": {"x": 0.9746137261390686, "y": 0.10475479066371918, "size": 0.9698275862068966, "label": "Tyty Washington"}}, {"key": 1178691, "attributes": {"x": 1.0, "y": 0.069560207426548, "size": 0.9698275862068966, "label": "Darius Days"}}, {"key": 987558, "attributes": {"x": 0.3022347092628479, "y": -0.12232602387666702, "size": 3.4913793103448274, "label": "Kevin Porter Jr."}}, {"key": 1178599, "attributes": {"x": 0.9626325368881226, "y": 0.184665247797966, "size": 0.9698275862068966, "label": "Jabari Smith Jr."}}, {"key": 1178696, "attributes": {"x": 0.9932652115821838, "y": 0.021984120830893517, "size": 0.9698275862068966, "label": "Tari Eason"}}, {"key": 1385033, "attributes": {"x": 0.988422155380249, "y": 0.1463502198457718, "size": 0.9698275862068966, "label": "Trevor Hudgins"}}, {"key": 1133822, "attributes": {"x": 0.6916018128395081, "y": 0.11631745100021362, "size": 1.6810344827586208, "label": "Alperen Sengun"}}, {"key": 1133934, "attributes": {"x": 0.7305829524993896, "y": 0.05418030545115471, "size": 1.6163793103448274, "label": "Daishen Nix"}}, {"key": 905364, "attributes": {"x": 0.6970014572143555, "y": 0.07329294085502625, "size": 1.6810344827586208, "label": "Usman Garuba"}}, {"key": 817428, "attributes": {"x": 0.21780946850776672, "y": 0.18527616560459137, "size": 3.9439655172413794, "label": "John Wall"}}, {"key": 1092924, "attributes": {"x": 0.5926687717437744, "y": 0.050038181245326996, "size": 1.9396551724137931, "label": "Kenyon Martin Jr."}}, {"key": 1092887, "attributes": {"x": 0.6005342602729797, "y": 0.008502521552145481, "size": 1.9396551724137931, "label": "Jae'Sean Tate"}}, {"key": 817208, "attributes": {"x": 0.2602480351924896, "y": 0.014921720139682293, "size": 4.073275862068966, "label": "Frank Kaminsky"}}, {"key": 817244, "attributes": {"x": 0.22333624958992004, "y": -0.02443714812397957, "size": 4.267241379310345, "label": "Boban Marjanovic"}}, {"key": 1133853, "attributes": {"x": 0.6998365521430969, "y": 0.012621267698705196, "size": 1.6810344827586208, "label": "Josh Christopher"}}, {"key": 1092951, "attributes": {"x": 0.3326013684272766, "y": -0.0076428744941949844, "size": 3.75, "label": "Anthony Lamb"}}, {"key": 817280, "attributes": {"x": 0.05595289170742035, "y": 0.05349387973546982, "size": 5.366379310344828, "label": "Markieff Morris"}}, {"key": 957958, "attributes": {"x": 0.15088693797588348, "y": -0.37885549664497375, "size": 3.4913793103448274, "label": "Theo Pinson"}}, {"key": 817160, "attributes": {"x": 0.2617120146751404, "y": -0.10361620038747787, "size": 7.306034482758621, "label": "Justin Holiday"}}, {"key": 1134025, "attributes": {"x": 0.524540364742279, "y": -0.4203297197818756, "size": 1.0344827586206897, "label": "McKinley Wright IV"}}, {"key": 861608, "attributes": {"x": 0.10353279858827591, "y": -0.36842674016952515, "size": 2.650862068965517, "label": "Luka Don\u010di\u0107"}}, {"key": 885224, "attributes": {"x": -0.012665376998484135, "y": -0.4769321382045746, "size": 2.974137931034483, "label": "Frank Ntilikina"}}, {"key": 1092940, "attributes": {"x": 0.1448344737291336, "y": -0.5651342272758484, "size": 1.4870689655172415, "label": "Josh Green"}}, {"key": 817132, "attributes": {"x": 0.14068692922592163, "y": -0.42037761211395264, "size": 2.586206896551724, "label": "Tim Hardaway Jr."}}, {"key": 817258, "attributes": {"x": -0.08871728926897049, "y": -0.04674694687128067, "size": 6.400862068965517, "label": "JaVale McGee"}}, {"key": 817455, "attributes": {"x": 0.15233096480369568, "y": -0.13047099113464355, "size": 4.202586206896552, "label": "Christian Wood"}}, {"key": 1392408, "attributes": {"x": 0.4029041528701782, "y": -0.6130764484405518, "size": 1.0344827586206897, "label": "A.J. Lawson"}}, {"key": 817331, "attributes": {"x": 0.0711233913898468, "y": -0.41108760237693787, "size": 2.521551724137931, "label": "Dwight Powell"}}, {"key": 817012, "attributes": {"x": -0.06995745748281479, "y": -0.198329895734787, "size": 4.461206896551724, "label": "Reggie Bullock"}}, {"key": 846965, "attributes": {"x": -0.02896406129002571, "y": 0.03418769687414169, "size": 3.8146551724137927, "label": "Davis Bertans"}}, {"key": 861655, "attributes": {"x": 0.0401516817510128, "y": -0.49410751461982727, "size": 2.2629310344827585, "label": "Maximilian Kleber"}}, {"key": 1206072, "attributes": {"x": 0.47688964009284973, "y": -0.4985691010951996, "size": 1.0344827586206897, "label": "Jaden Hardy"}}, {"key": 817177, "attributes": {"x": -0.03808004781603813, "y": -0.1673462688922882, "size": 4.137931034482759, "label": "Kyrie Irving"}}, {"key": 905866, "attributes": {"x": -0.18529373407363892, "y": 0.2687341868877411, "size": 2.392241379310345, "label": "Kobi Simmons"}}, {"key": 987611, "attributes": {"x": 0.09807923436164856, "y": -0.4670795798301697, "size": 1.810344827586207, "label": "Jarrell Brantley"}}, {"key": 817060, "attributes": {"x": -0.1908099353313446, "y": -0.34028393030166626, "size": 2.0689655172413794, "label": "Matthew Dellavedova"}}]}
},{}],2:[function(require,module,exports){
const Graph = require("graphology")
const { Sigma } = require("sigma")
const data = require("./data.json")

const container = document.getElementById("sigma-container")
container.style.height = "100vh"
container.style.width = "100vw"

const graph = new Graph()
graph.import(data)

const renderer = new Sigma(graph, container, {
  minEdgeSize: 0.2,
  maxEdgeSize: 0.5
});

const inputs = ["player-a", "player-b"]

inputs.forEach(input_id => {
  document.getElementById(input_id).addEventListener("input", (event) => {
    console.log(event.target.value)
  })
})



},{"./data.json":1,"graphology":5,"sigma":12}],3:[function(require,module,exports){
/**
 * Extend function
 * ================
 *
 * Function used to push a bunch of values into an array at once.
 *
 * Its strategy is to mutate target array's length then setting the new indices
 * to be the values to add.
 *
 * A benchmark proved that it is faster than the following strategies:
 *   1) `array.push.apply(array, values)`.
 *   2) A loop of pushes.
 *   3) `array = array.concat(values)`, obviously.
 *
 * Intuitively, this is correct because when adding a lot of elements, the
 * chosen strategies does not need to handle the `arguments` object to
 * execute #.apply's variadicity and because the array know its final length
 * at the beginning, avoiding potential multiple reallocations of the underlying
 * contiguous array. Some engines may be able to optimize the loop of push
 * operations but empirically they don't seem to do so.
 */

/**
 * Extends the target array with the given values.
 *
 * @param  {array} array  - Target array.
 * @param  {array} values - Values to add.
 */
module.exports = function extend(array, values) {
  var l2 = values.length;

  if (l2 === 0)
    return;

  var l1 = array.length;

  array.length += l2;

  for (var i = 0; i < l2; i++)
    array[l1 + i] = values[i];
};

},{}],4:[function(require,module,exports){
/**
 * Graphology isGraph
 * ===================
 *
 * Very simple function aiming at ensuring the given variable is a
 * graphology instance.
 */

/**
 * Checking the value is a graphology instance.
 *
 * @param  {any}     value - Target value.
 * @return {boolean}
 */
module.exports = function isGraph(value) {
  return (
    value !== null &&
    typeof value === 'object' &&
    typeof value.addUndirectedEdgeWithKey === 'function' &&
    typeof value.dropNode === 'function' &&
    typeof value.multi === 'boolean'
  );
};

},{}],5:[function(require,module,exports){
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).graphology=e()}(this,(function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,r(t,e)}function n(t){return n=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},n(t)}function r(t,e){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},r(t,e)}function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function o(t,e,n){return o=i()?Reflect.construct.bind():function(t,e,n){var i=[null];i.push.apply(i,e);var o=new(Function.bind.apply(t,i));return n&&r(o,n.prototype),o},o.apply(null,arguments)}function a(t){var e="function"==typeof Map?new Map:void 0;return a=function(t){if(null===t||(i=t,-1===Function.toString.call(i).indexOf("[native code]")))return t;var i;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,a)}function a(){return o(t,arguments,n(this).constructor)}return a.prototype=Object.create(t.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),r(a,t)},a(t)}function c(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var u=function(){for(var t=arguments[0],e=1,n=arguments.length;e<n;e++)if(arguments[e])for(var r in arguments[e])t[r]=arguments[e][r];return t};function d(t,e,n,r){var i=t._nodes.get(e),o=null;return i?o="mixed"===r?i.out&&i.out[n]||i.undirected&&i.undirected[n]:"directed"===r?i.out&&i.out[n]:i.undirected&&i.undirected[n]:o}function s(e){return"object"===t(e)&&null!==e&&e.constructor===Object}function h(t){var e;for(e in t)return!1;return!0}function p(t,e,n){Object.defineProperty(t,e,{enumerable:!1,configurable:!1,writable:!0,value:n})}function f(t,e,n){var r={enumerable:!0,configurable:!0};"function"==typeof n?r.get=n:(r.value=n,r.writable=!1),Object.defineProperty(t,e,r)}function l(t){return!!s(t)&&!(t.attributes&&!Array.isArray(t.attributes))}"function"==typeof Object.assign&&(u=Object.assign);var g,y={exports:{}},w="object"==typeof Reflect?Reflect:null,v=w&&"function"==typeof w.apply?w.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};g=w&&"function"==typeof w.ownKeys?w.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var b=Number.isNaN||function(t){return t!=t};function m(){m.init.call(this)}y.exports=m,y.exports.once=function(t,e){return new Promise((function(n,r){function i(n){t.removeListener(e,o),r(n)}function o(){"function"==typeof t.removeListener&&t.removeListener("error",i),n([].slice.call(arguments))}U(t,e,o,{once:!0}),"error"!==e&&function(t,e,n){"function"==typeof t.on&&U(t,"error",e,n)}(t,i,{once:!0})}))},m.EventEmitter=m,m.prototype._events=void 0,m.prototype._eventsCount=0,m.prototype._maxListeners=void 0;var k=10;function _(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function G(t){return void 0===t._maxListeners?m.defaultMaxListeners:t._maxListeners}function x(t,e,n,r){var i,o,a,c;if(_(n),void 0===(o=t._events)?(o=t._events=Object.create(null),t._eventsCount=0):(void 0!==o.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),o=t._events),a=o[e]),void 0===a)a=o[e]=n,++t._eventsCount;else if("function"==typeof a?a=o[e]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(i=G(t))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=t,u.type=e,u.count=a.length,c=u,console&&console.warn&&console.warn(c)}return t}function E(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function A(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},i=E.bind(r);return i.listener=n,r.wrapFn=i,i}function L(t,e,n){var r=t._events;if(void 0===r)return[];var i=r[e];return void 0===i?[]:"function"==typeof i?n?[i.listener||i]:[i]:n?function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(i):D(i,i.length)}function S(t){var e=this._events;if(void 0!==e){var n=e[t];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function D(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t[r];return n}function U(t,e,n,r){if("function"==typeof t.on)r.once?t.once(e,n):t.on(e,n);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function i(o){r.once&&t.removeEventListener(e,i),n(o)}))}}function N(t){if("function"!=typeof t)throw new Error("obliterator/iterator: expecting a function!");this.next=t}Object.defineProperty(m,"defaultMaxListeners",{enumerable:!0,get:function(){return k},set:function(t){if("number"!=typeof t||t<0||b(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");k=t}}),m.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},m.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||b(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},m.prototype.getMaxListeners=function(){return G(this)},m.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var r="error"===t,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var c=i[t];if(void 0===c)return!1;if("function"==typeof c)v(c,this,e);else{var u=c.length,d=D(c,u);for(n=0;n<u;++n)v(d[n],this,e)}return!0},m.prototype.addListener=function(t,e){return x(this,t,e,!1)},m.prototype.on=m.prototype.addListener,m.prototype.prependListener=function(t,e){return x(this,t,e,!0)},m.prototype.once=function(t,e){return _(e),this.on(t,A(this,t,e)),this},m.prototype.prependOnceListener=function(t,e){return _(e),this.prependListener(t,A(this,t,e)),this},m.prototype.removeListener=function(t,e){var n,r,i,o,a;if(_(e),void 0===(r=this._events))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===e||n[o].listener===e){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(n,i),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",t,a||e)}return this},m.prototype.off=m.prototype.removeListener,m.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)"removeListener"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},m.prototype.listeners=function(t){return L(this,t,!0)},m.prototype.rawListeners=function(t){return L(this,t,!1)},m.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):S.call(t,e)},m.prototype.listenerCount=S,m.prototype.eventNames=function(){return this._eventsCount>0?g(this._events):[]},"undefined"!=typeof Symbol&&(N.prototype[Symbol.iterator]=function(){return this}),N.of=function(){var t=arguments,e=t.length,n=0;return new N((function(){return n>=e?{done:!0}:{done:!1,value:t[n++]}}))},N.empty=function(){return new N((function(){return{done:!0}}))},N.fromSequence=function(t){var e=0,n=t.length;return new N((function(){return e>=n?{done:!0}:{done:!1,value:t[e++]}}))},N.is=function(t){return t instanceof N||"object"==typeof t&&null!==t&&"function"==typeof t.next};var O=N,j={};j.ARRAY_BUFFER_SUPPORT="undefined"!=typeof ArrayBuffer,j.SYMBOL_SUPPORT="undefined"!=typeof Symbol;var C=O,M=j,z=M.ARRAY_BUFFER_SUPPORT,W=M.SYMBOL_SUPPORT;var P=function(t){var e=function(t){return"string"==typeof t||Array.isArray(t)||z&&ArrayBuffer.isView(t)?C.fromSequence(t):"object"!=typeof t||null===t?null:W&&"function"==typeof t[Symbol.iterator]?t[Symbol.iterator]():"function"==typeof t.next?t:null}(t);if(!e)throw new Error("obliterator: target is not iterable nor a valid iterator.");return e},R=P,K=function(t,e){for(var n,r=arguments.length>1?e:1/0,i=r!==1/0?new Array(r):[],o=0,a=R(t);;){if(o===r)return i;if((n=a.next()).done)return o!==e&&(i.length=o),i;i[o++]=n.value}},T=function(t){function n(e){var n;return(n=t.call(this)||this).name="GraphError",n.message=e,n}return e(n,t),n}(a(Error)),B=function(t){function n(e){var r;return(r=t.call(this,e)||this).name="InvalidArgumentsGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T),F=function(t){function n(e){var r;return(r=t.call(this,e)||this).name="NotFoundGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T),I=function(t){function n(e){var r;return(r=t.call(this,e)||this).name="UsageGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T);function Y(t,e){this.key=t,this.attributes=e,this.clear()}function q(t,e){this.key=t,this.attributes=e,this.clear()}function J(t,e){this.key=t,this.attributes=e,this.clear()}function V(t,e,n,r,i){this.key=e,this.attributes=i,this.undirected=t,this.source=n,this.target=r}Y.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.undirectedLoops=0,this.directedLoops=0,this.in={},this.out={},this.undirected={}},q.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.directedLoops=0,this.in={},this.out={}},J.prototype.clear=function(){this.undirectedDegree=0,this.undirectedLoops=0,this.undirected={}},V.prototype.attach=function(){var t="out",e="in";this.undirected&&(t=e="undirected");var n=this.source.key,r=this.target.key;this.source[t][r]=this,this.undirected&&n===r||(this.target[e][n]=this)},V.prototype.attachMulti=function(){var t="out",e="in",n=this.source.key,r=this.target.key;this.undirected&&(t=e="undirected");var i=this.source[t],o=i[r];if(void 0===o)return i[r]=this,void(this.undirected&&n===r||(this.target[e][n]=this));o.previous=this,this.next=o,i[r]=this,this.target[e][n]=this},V.prototype.detach=function(){var t=this.source.key,e=this.target.key,n="out",r="in";this.undirected&&(n=r="undirected"),delete this.source[n][e],delete this.target[r][t]},V.prototype.detachMulti=function(){var t=this.source.key,e=this.target.key,n="out",r="in";this.undirected&&(n=r="undirected"),void 0===this.previous?void 0===this.next?(delete this.source[n][e],delete this.target[r][t]):(this.next.previous=void 0,this.source[n][e]=this.next,this.target[r][t]=this.next):(this.previous.next=this.next,void 0!==this.next&&(this.next.previous=this.previous))};function H(t,e,n,r,i,o,a){var c,u,d,s;if(r=""+r,0===n){if(!(c=t._nodes.get(r)))throw new F("Graph.".concat(e,': could not find the "').concat(r,'" node in the graph.'));d=i,s=o}else if(3===n){if(i=""+i,!(u=t._edges.get(i)))throw new F("Graph.".concat(e,': could not find the "').concat(i,'" edge in the graph.'));var h=u.source.key,p=u.target.key;if(r===h)c=u.target;else{if(r!==p)throw new F("Graph.".concat(e,': the "').concat(r,'" node is not attached to the "').concat(i,'" edge (').concat(h,", ").concat(p,")."));c=u.source}d=o,s=a}else{if(!(u=t._edges.get(r)))throw new F("Graph.".concat(e,': could not find the "').concat(r,'" edge in the graph.'));c=1===n?u.source:u.target,d=i,s=o}return[c,d,s]}var Q=[{name:function(t){return"get".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return a.attributes[c]}}},{name:function(t){return"get".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r){return H(this,e,n,t,r)[0].attributes}}},{name:function(t){return"has".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return a.attributes.hasOwnProperty(c)}}},{name:function(t){return"set".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i,o){var a=H(this,e,n,t,r,i,o),c=a[0],u=a[1],d=a[2];return c.attributes[u]=d,this.emit("nodeAttributesUpdated",{key:c.key,type:"set",attributes:c.attributes,name:u}),this}}},{name:function(t){return"update".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i,o){var a=H(this,e,n,t,r,i,o),c=a[0],u=a[1],d=a[2];if("function"!=typeof d)throw new B("Graph.".concat(e,": updater should be a function."));var s=c.attributes,h=d(s[u]);return s[u]=h,this.emit("nodeAttributesUpdated",{key:c.key,type:"set",attributes:c.attributes,name:u}),this}}},{name:function(t){return"remove".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return delete a.attributes[c],this.emit("nodeAttributesUpdated",{key:a.key,type:"remove",attributes:a.attributes,name:c}),this}}},{name:function(t){return"replace".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(!s(c))throw new B("Graph.".concat(e,": provided attributes are not a plain object."));return a.attributes=c,this.emit("nodeAttributesUpdated",{key:a.key,type:"replace",attributes:a.attributes}),this}}},{name:function(t){return"merge".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(!s(c))throw new B("Graph.".concat(e,": provided attributes are not a plain object."));return u(a.attributes,c),this.emit("nodeAttributesUpdated",{key:a.key,type:"merge",attributes:a.attributes,data:c}),this}}},{name:function(t){return"update".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if("function"!=typeof c)throw new B("Graph.".concat(e,": provided updater is not a function."));return a.attributes=c(a.attributes),this.emit("nodeAttributesUpdated",{key:a.key,type:"update",attributes:a.attributes}),this}}}];var X=[{name:function(t){return"get".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(i=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}return i.attributes[r]}}},{name:function(t){return"get".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t){var r;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>1){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,o=""+arguments[1];if(!(r=d(this,i,o,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(i,'" - "').concat(o,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(r=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}return r.attributes}}},{name:function(t){return"has".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(i=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}return i.attributes.hasOwnProperty(r)}}},{name:function(t){return"set".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>3){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var a=""+t,c=""+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,c,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(a,'" - "').concat(c,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(o=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}return o.attributes[r]=i,this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}},{name:function(t){return"update".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>3){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var a=""+t,c=""+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,c,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(a,'" - "').concat(c,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(o=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}if("function"!=typeof i)throw new B("Graph.".concat(e,": updater should be a function."));return o.attributes[r]=i(o.attributes[r]),this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}},{name:function(t){return"remove".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(i=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}return delete i.attributes[r],this.emit("edgeAttributesUpdated",{key:i.key,type:"remove",attributes:i.attributes,name:r}),this}}},{name:function(t){return"replace".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(i=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}if(!s(r))throw new B("Graph.".concat(e,": provided attributes are not a plain object."));return i.attributes=r,this.emit("edgeAttributesUpdated",{key:i.key,type:"replace",attributes:i.attributes}),this}}},{name:function(t){return"merge".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(i=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}if(!s(r))throw new B("Graph.".concat(e,": provided attributes are not a plain object."));return u(i.attributes,r),this.emit("edgeAttributesUpdated",{key:i.key,type:"merge",attributes:i.attributes,data:r}),this}}},{name:function(t){return"update".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new I("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new I("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else{if("mixed"!==n)throw new I("Graph.".concat(e,": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type."));if(t=""+t,!(i=this._edges.get(t)))throw new F("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'))}if("function"!=typeof r)throw new B("Graph.".concat(e,": provided updater is not a function."));return i.attributes=r(i.attributes),this.emit("edgeAttributesUpdated",{key:i.key,type:"update",attributes:i.attributes}),this}}}];var Z=O,$=P,tt=function(){var t=arguments,e=null,n=-1;return new Z((function(){for(var r=null;;){if(null===e){if(++n>=t.length)return{done:!0};e=$(t[n])}if(!0!==(r=e.next()).done)break;e=null}return r}))},et=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}];function nt(t,e,n,r){var i=!1;for(var o in e)if(o!==r){var a=e[o];if(i=n(a.key,a.attributes,a.source.key,a.target.key,a.source.attributes,a.target.attributes,a.undirected),t&&i)return a.key}}function rt(t,e,n,r){var i,o,a,c=!1;for(var u in e)if(u!==r){i=e[u];do{if(o=i.source,a=i.target,c=n(i.key,i.attributes,o.key,a.key,o.attributes,a.attributes,i.undirected),t&&c)return i.key;i=i.next}while(void 0!==i)}}function it(t,e){var n,r=Object.keys(t),i=r.length,o=0;return new O((function(){do{if(n)n=n.next;else{if(o>=i)return{done:!0};var a=r[o++];if(a===e){n=void 0;continue}n=t[a]}}while(!n);return{done:!1,value:{edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected}}}))}function ot(t,e,n,r){var i=e[n];if(i){var o=i.source,a=i.target;return r(i.key,i.attributes,o.key,a.key,o.attributes,a.attributes,i.undirected)&&t?i.key:void 0}}function at(t,e,n,r){var i=e[n];if(i){var o=!1;do{if(o=r(i.key,i.attributes,i.source.key,i.target.key,i.source.attributes,i.target.attributes,i.undirected),t&&o)return i.key;i=i.next}while(void 0!==i)}}function ct(t,e){var n=t[e];return void 0!==n.next?new O((function(){if(!n)return{done:!0};var t={edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected};return n=n.next,{done:!1,value:t}})):O.of({edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected})}function ut(t,e){if(0===t.size)return[];if("mixed"===e||e===t.type)return"function"==typeof Array.from?Array.from(t._edges.keys()):K(t._edges.keys(),t._edges.size);for(var n,r,i="undirected"===e?t.undirectedSize:t.directedSize,o=new Array(i),a="undirected"===e,c=t._edges.values(),u=0;!0!==(n=c.next()).done;)(r=n.value).undirected===a&&(o[u++]=r.key);return o}function dt(t,e,n,r){if(0!==e.size)for(var i,o,a="mixed"!==n&&n!==e.type,c="undirected"===n,u=!1,d=e._edges.values();!0!==(i=d.next()).done;)if(o=i.value,!a||o.undirected===c){var s=o,h=s.key,p=s.attributes,f=s.source,l=s.target;if(u=r(h,p,f.key,l.key,f.attributes,l.attributes,o.undirected),t&&u)return h}}function st(t,e){if(0===t.size)return O.empty();var n="mixed"!==e&&e!==t.type,r="undirected"===e,i=t._edges.values();return new O((function(){for(var t,e;;){if((t=i.next()).done)return t;if(e=t.value,!n||e.undirected===r)break}return{value:{edge:e.key,attributes:e.attributes,source:e.source.key,target:e.target.key,sourceAttributes:e.source.attributes,targetAttributes:e.target.attributes,undirected:e.undirected},done:!1}}))}function ht(t,e,n,r,i,o){var a,c=e?rt:nt;if("undirected"!==n){if("out"!==r&&(a=c(t,i.in,o),t&&a))return a;if("in"!==r&&(a=c(t,i.out,o,r?void 0:i.key),t&&a))return a}if("directed"!==n&&(a=c(t,i.undirected,o),t&&a))return a}function pt(t,e,n,r){var i=[];return ht(!1,t,e,n,r,(function(t){i.push(t)})),i}function ft(t,e,n){var r=O.empty();return"undirected"!==t&&("out"!==e&&void 0!==n.in&&(r=tt(r,it(n.in))),"in"!==e&&void 0!==n.out&&(r=tt(r,it(n.out,e?void 0:n.key)))),"directed"!==t&&void 0!==n.undirected&&(r=tt(r,it(n.undirected))),r}function lt(t,e,n,r,i,o,a){var c,u=n?at:ot;if("undirected"!==e){if(void 0!==i.in&&"out"!==r&&(c=u(t,i.in,o,a),t&&c))return c;if(void 0!==i.out&&"in"!==r&&(r||i.key!==o)&&(c=u(t,i.out,o,a),t&&c))return c}if("directed"!==e&&void 0!==i.undirected&&(c=u(t,i.undirected,o,a),t&&c))return c}function gt(t,e,n,r,i){var o=[];return lt(!1,t,e,n,r,i,(function(t){o.push(t)})),o}function yt(t,e,n,r){var i=O.empty();return"undirected"!==t&&(void 0!==n.in&&"out"!==e&&r in n.in&&(i=tt(i,ct(n.in,r))),void 0!==n.out&&"in"!==e&&r in n.out&&(e||n.key!==r)&&(i=tt(i,ct(n.out,r)))),"directed"!==t&&void 0!==n.undirected&&r in n.undirected&&(i=tt(i,ct(n.undirected,r))),i}var wt=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}];function vt(){this.A=null,this.B=null}function bt(t,e,n,r,i){for(var o in r){var a=r[o],c=a.source,u=a.target,d=c===n?u:c;if(!e||!e.has(d.key)){var s=i(d.key,d.attributes);if(t&&s)return d.key}}}function mt(t,e,n,r,i){if("mixed"!==e){if("undirected"===e)return bt(t,null,r,r.undirected,i);if("string"==typeof n)return bt(t,null,r,r[n],i)}var o,a=new vt;if("undirected"!==e){if("out"!==n){if(o=bt(t,null,r,r.in,i),t&&o)return o;a.wrap(r.in)}if("in"!==n){if(o=bt(t,a,r,r.out,i),t&&o)return o;a.wrap(r.out)}}if("directed"!==e&&(o=bt(t,a,r,r.undirected,i),t&&o))return o}function kt(t,e,n){var r=Object.keys(n),i=r.length,o=0;return new O((function(){var a=null;do{if(o>=i)return t&&t.wrap(n),{done:!0};var c=n[r[o++]],u=c.source,d=c.target;a=u===e?d:u,t&&t.has(a.key)&&(a=null)}while(null===a);return{done:!1,value:{neighbor:a.key,attributes:a.attributes}}}))}function _t(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return[];t=""+t;var e=this._nodes.get(t);if(void 0===e)throw new F("Graph.".concat(n,': could not find the "').concat(t,'" node in the graph.'));return function(t,e,n){if("mixed"!==t){if("undirected"===t)return Object.keys(n.undirected);if("string"==typeof e)return Object.keys(n[e])}var r=[];return mt(!1,t,e,n,(function(t){r.push(t)})),r}("mixed"===r?this.type:r,i,e)}}function Gt(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+"Entries";t.prototype[o]=function(t){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return O.empty();t=""+t;var e=this._nodes.get(t);if(void 0===e)throw new F("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return function(t,e,n){if("mixed"!==t){if("undirected"===t)return kt(null,n,n.undirected);if("string"==typeof e)return kt(null,n,n[e])}var r=O.empty(),i=new vt;return"undirected"!==t&&("out"!==e&&(r=tt(r,kt(i,n,n.in))),"in"!==e&&(r=tt(r,kt(i,n,n.out)))),"directed"!==t&&(r=tt(r,kt(i,n,n.undirected))),r}("mixed"===r?this.type:r,i,e)}}function xt(t,e,n,r,i){for(var o,a,c,u,d,s,h,p=r._nodes.values(),f=r.type;!0!==(o=p.next()).done;){var l=!1;if(a=o.value,"undirected"!==f)for(c in u=a.out){d=u[c];do{if(s=d.target,l=!0,h=i(a.key,s.key,a.attributes,s.attributes,d.key,d.attributes,d.undirected),t&&h)return d;d=d.next}while(d)}if("directed"!==f)for(c in u=a.undirected)if(!(e&&a.key>c)){d=u[c];do{if((s=d.target).key!==c&&(s=d.source),l=!0,h=i(a.key,s.key,a.attributes,s.attributes,d.key,d.attributes,d.undirected),t&&h)return d;d=d.next}while(d)}if(n&&!l&&(h=i(a.key,null,a.attributes,null,null,null,null),t&&h))return null}}function Et(t){if(!s(t))throw new B('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if(!("key"in t))throw new B("Graph.import: serialized node is missing its key.");if("attributes"in t&&(!s(t.attributes)||null===t.attributes))throw new B("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.")}function At(t){if(!s(t))throw new B('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if(!("source"in t))throw new B("Graph.import: serialized edge is missing its source.");if(!("target"in t))throw new B("Graph.import: serialized edge is missing its target.");if("attributes"in t&&(!s(t.attributes)||null===t.attributes))throw new B("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");if("undirected"in t&&"boolean"!=typeof t.undirected)throw new B("Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.")}vt.prototype.wrap=function(t){null===this.A?this.A=t:null===this.B&&(this.B=t)},vt.prototype.has=function(t){return null!==this.A&&t in this.A||null!==this.B&&t in this.B};var Lt,St=(Lt=255&Math.floor(256*Math.random()),function(){return Lt++}),Dt=new Set(["directed","undirected","mixed"]),Ut=new Set(["domain","_events","_eventsCount","_maxListeners"]),Nt={allowSelfLoops:!0,multi:!1,type:"mixed"};function Ot(t,e,n){var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit("nodeAdded",{key:e,attributes:n}),r}function jt(t,e,n,r,i,o,a,c){if(!r&&"undirected"===t.type)throw new I("Graph.".concat(e,": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead."));if(r&&"directed"===t.type)throw new I("Graph.".concat(e,": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead."));if(c&&!s(c))throw new B("Graph.".concat(e,': invalid attributes. Expecting an object but got "').concat(c,'"'));if(o=""+o,a=""+a,c=c||{},!t.allowSelfLoops&&o===a)throw new I("Graph.".concat(e,': source & target are the same ("').concat(o,"\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false."));var u=t._nodes.get(o),d=t._nodes.get(a);if(!u)throw new F("Graph.".concat(e,': source node "').concat(o,'" not found.'));if(!d)throw new F("Graph.".concat(e,': target node "').concat(a,'" not found.'));var h={key:null,undirected:r,source:o,target:a,attributes:c};if(n)i=t._edgeKeyGenerator();else if(i=""+i,t._edges.has(i))throw new I("Graph.".concat(e,': the "').concat(i,'" edge already exists in the graph.'));if(!t.multi&&(r?void 0!==u.undirected[a]:void 0!==u.out[a]))throw new I("Graph.".concat(e,': an edge linking "').concat(o,'" to "').concat(a,"\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option."));var p=new V(r,i,u,d,c);t._edges.set(i,p);var f=o===a;return r?(u.undirectedDegree++,d.undirectedDegree++,f&&(u.undirectedLoops++,t._undirectedSelfLoopCount++)):(u.outDegree++,d.inDegree++,f&&(u.directedLoops++,t._directedSelfLoopCount++)),t.multi?p.attachMulti():p.attach(),r?t._undirectedSize++:t._directedSize++,h.key=i,t.emit("edgeAdded",h),i}function Ct(t,e,n,r,i,o,a,c,d){if(!r&&"undirected"===t.type)throw new I("Graph.".concat(e,": you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead."));if(r&&"directed"===t.type)throw new I("Graph.".concat(e,": you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead."));if(c)if(d){if("function"!=typeof c)throw new B("Graph.".concat(e,': invalid updater function. Expecting a function but got "').concat(c,'"'))}else if(!s(c))throw new B("Graph.".concat(e,': invalid attributes. Expecting an object but got "').concat(c,'"'));var h;if(o=""+o,a=""+a,d&&(h=c,c=void 0),!t.allowSelfLoops&&o===a)throw new I("Graph.".concat(e,': source & target are the same ("').concat(o,"\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false."));var p,f,l=t._nodes.get(o),g=t._nodes.get(a);if(!n&&(p=t._edges.get(i))){if(!(p.source.key===o&&p.target.key===a||r&&p.source.key===a&&p.target.key===o))throw new I("Graph.".concat(e,': inconsistency detected when attempting to merge the "').concat(i,'" edge with "').concat(o,'" source & "').concat(a,'" target vs. ("').concat(p.source.key,'", "').concat(p.target.key,'").'));f=p}if(f||t.multi||!l||(f=r?l.undirected[a]:l.out[a]),f){var y=[f.key,!1,!1,!1];if(d?!h:!c)return y;if(d){var w=f.attributes;f.attributes=h(w),t.emit("edgeAttributesUpdated",{type:"replace",key:f.key,attributes:f.attributes})}else u(f.attributes,c),t.emit("edgeAttributesUpdated",{type:"merge",key:f.key,attributes:f.attributes,data:c});return y}c=c||{},d&&h&&(c=h(c));var v={key:null,undirected:r,source:o,target:a,attributes:c};if(n)i=t._edgeKeyGenerator();else if(i=""+i,t._edges.has(i))throw new I("Graph.".concat(e,': the "').concat(i,'" edge already exists in the graph.'));var b=!1,m=!1;l||(l=Ot(t,o,{}),b=!0,o===a&&(g=l,m=!0)),g||(g=Ot(t,a,{}),m=!0),p=new V(r,i,l,g,c),t._edges.set(i,p);var k=o===a;return r?(l.undirectedDegree++,g.undirectedDegree++,k&&(l.undirectedLoops++,t._undirectedSelfLoopCount++)):(l.outDegree++,g.inDegree++,k&&(l.directedLoops++,t._directedSelfLoopCount++)),t.multi?p.attachMulti():p.attach(),r?t._undirectedSize++:t._directedSize++,v.key=i,t.emit("edgeAdded",v),[i,!0,b,m]}function Mt(t,e){t._edges.delete(e.key);var n=e.source,r=e.target,i=e.attributes,o=e.undirected,a=n===r;o?(n.undirectedDegree--,r.undirectedDegree--,a&&(n.undirectedLoops--,t._undirectedSelfLoopCount--)):(n.outDegree--,r.inDegree--,a&&(n.directedLoops--,t._directedSelfLoopCount--)),t.multi?e.detachMulti():e.detach(),o?t._undirectedSize--:t._directedSize--,t.emit("edgeDropped",{key:e.key,attributes:i,source:n.key,target:r.key,undirected:o})}var zt=function(n){function r(t){var e;if(e=n.call(this)||this,"boolean"!=typeof(t=u({},Nt,t)).multi)throw new B("Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"".concat(t.multi,'".'));if(!Dt.has(t.type))throw new B('Graph.constructor: invalid \'type\' option. Should be one of "mixed", "directed" or "undirected" but got "'.concat(t.type,'".'));if("boolean"!=typeof t.allowSelfLoops)throw new B("Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"".concat(t.allowSelfLoops,'".'));var r="mixed"===t.type?Y:"directed"===t.type?q:J;p(c(e),"NodeDataClass",r);var i="geid_"+St()+"_",o=0;return p(c(e),"_attributes",{}),p(c(e),"_nodes",new Map),p(c(e),"_edges",new Map),p(c(e),"_directedSize",0),p(c(e),"_undirectedSize",0),p(c(e),"_directedSelfLoopCount",0),p(c(e),"_undirectedSelfLoopCount",0),p(c(e),"_edgeKeyGenerator",(function(){var t;do{t=i+o++}while(e._edges.has(t));return t})),p(c(e),"_options",t),Ut.forEach((function(t){return p(c(e),t,e[t])})),f(c(e),"order",(function(){return e._nodes.size})),f(c(e),"size",(function(){return e._edges.size})),f(c(e),"directedSize",(function(){return e._directedSize})),f(c(e),"undirectedSize",(function(){return e._undirectedSize})),f(c(e),"selfLoopCount",(function(){return e._directedSelfLoopCount+e._undirectedSelfLoopCount})),f(c(e),"directedSelfLoopCount",(function(){return e._directedSelfLoopCount})),f(c(e),"undirectedSelfLoopCount",(function(){return e._undirectedSelfLoopCount})),f(c(e),"multi",e._options.multi),f(c(e),"type",e._options.type),f(c(e),"allowSelfLoops",e._options.allowSelfLoops),f(c(e),"implementation",(function(){return"graphology"})),e}e(r,n);var i=r.prototype;return i._resetInstanceCounters=function(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0},i.hasNode=function(t){return this._nodes.has(""+t)},i.hasDirectedEdge=function(t,e){if("undirected"===this.type)return!1;if(1===arguments.length){var n=""+t,r=this._edges.get(n);return!!r&&!r.undirected}if(2===arguments.length){t=""+t,e=""+e;var i=this._nodes.get(t);return!!i&&i.out.hasOwnProperty(e)}throw new B("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},i.hasUndirectedEdge=function(t,e){if("directed"===this.type)return!1;if(1===arguments.length){var n=""+t,r=this._edges.get(n);return!!r&&r.undirected}if(2===arguments.length){t=""+t,e=""+e;var i=this._nodes.get(t);return!!i&&i.undirected.hasOwnProperty(e)}throw new B("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},i.hasEdge=function(t,e){if(1===arguments.length){var n=""+t;return this._edges.has(n)}if(2===arguments.length){t=""+t,e=""+e;var r=this._nodes.get(t);return!!r&&(void 0!==r.out&&r.out.hasOwnProperty(e)||void 0!==r.undirected&&r.undirected.hasOwnProperty(e))}throw new B("Graph.hasEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},i.directedEdge=function(t,e){if("undirected"!==this.type){if(t=""+t,e=""+e,this.multi)throw new I("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");var n=this._nodes.get(t);if(!n)throw new F('Graph.directedEdge: could not find the "'.concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.directedEdge: could not find the "'.concat(e,'" target node in the graph.'));var r=n.out&&n.out[e]||void 0;return r?r.key:void 0}},i.undirectedEdge=function(t,e){if("directed"!==this.type){if(t=""+t,e=""+e,this.multi)throw new I("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");var n=this._nodes.get(t);if(!n)throw new F('Graph.undirectedEdge: could not find the "'.concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.undirectedEdge: could not find the "'.concat(e,'" target node in the graph.'));var r=n.undirected&&n.undirected[e]||void 0;return r?r.key:void 0}},i.edge=function(t,e){if(this.multi)throw new I("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.edge: could not find the "'.concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.edge: could not find the "'.concat(e,'" target node in the graph.'));var r=n.out&&n.out[e]||n.undirected&&n.undirected[e]||void 0;if(r)return r.key},i.areDirectedNeighbors=function(t,e){t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areDirectedNeighbors: could not find the "'.concat(t,'" node in the graph.'));return"undirected"!==this.type&&(e in n.in||e in n.out)},i.areOutNeighbors=function(t,e){t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areOutNeighbors: could not find the "'.concat(t,'" node in the graph.'));return"undirected"!==this.type&&e in n.out},i.areInNeighbors=function(t,e){t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areInNeighbors: could not find the "'.concat(t,'" node in the graph.'));return"undirected"!==this.type&&e in n.in},i.areUndirectedNeighbors=function(t,e){t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areUndirectedNeighbors: could not find the "'.concat(t,'" node in the graph.'));return"directed"!==this.type&&e in n.undirected},i.areNeighbors=function(t,e){t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areNeighbors: could not find the "'.concat(t,'" node in the graph.'));return"undirected"!==this.type&&(e in n.in||e in n.out)||"directed"!==this.type&&e in n.undirected},i.areInboundNeighbors=function(t,e){t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areInboundNeighbors: could not find the "'.concat(t,'" node in the graph.'));return"undirected"!==this.type&&e in n.in||"directed"!==this.type&&e in n.undirected},i.areOutboundNeighbors=function(t,e){t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areOutboundNeighbors: could not find the "'.concat(t,'" node in the graph.'));return"undirected"!==this.type&&e in n.out||"directed"!==this.type&&e in n.undirected},i.inDegree=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inDegree: could not find the "'.concat(t,'" node in the graph.'));return"undirected"===this.type?0:e.inDegree},i.outDegree=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outDegree: could not find the "'.concat(t,'" node in the graph.'));return"undirected"===this.type?0:e.outDegree},i.directedDegree=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.directedDegree: could not find the "'.concat(t,'" node in the graph.'));return"undirected"===this.type?0:e.inDegree+e.outDegree},i.undirectedDegree=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.undirectedDegree: could not find the "'.concat(t,'" node in the graph.'));return"directed"===this.type?0:e.undirectedDegree},i.inboundDegree=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inboundDegree: could not find the "'.concat(t,'" node in the graph.'));var n=0;return"directed"!==this.type&&(n+=e.undirectedDegree),"undirected"!==this.type&&(n+=e.inDegree),n},i.outboundDegree=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outboundDegree: could not find the "'.concat(t,'" node in the graph.'));var n=0;return"directed"!==this.type&&(n+=e.undirectedDegree),"undirected"!==this.type&&(n+=e.outDegree),n},i.degree=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.degree: could not find the "'.concat(t,'" node in the graph.'));var n=0;return"directed"!==this.type&&(n+=e.undirectedDegree),"undirected"!==this.type&&(n+=e.inDegree+e.outDegree),n},i.inDegreeWithoutSelfLoops=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'));return"undirected"===this.type?0:e.inDegree-e.directedLoops},i.outDegreeWithoutSelfLoops=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'));return"undirected"===this.type?0:e.outDegree-e.directedLoops},i.directedDegreeWithoutSelfLoops=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.directedDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'));return"undirected"===this.type?0:e.inDegree+e.outDegree-2*e.directedLoops},i.undirectedDegreeWithoutSelfLoops=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.undirectedDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'));return"directed"===this.type?0:e.undirectedDegree-2*e.undirectedLoops},i.inboundDegreeWithoutSelfLoops=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inboundDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'));var n=0,r=0;return"directed"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),"undirected"!==this.type&&(n+=e.inDegree,r+=e.directedLoops),n-r},i.outboundDegreeWithoutSelfLoops=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outboundDegreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'));var n=0,r=0;return"directed"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),"undirected"!==this.type&&(n+=e.outDegree,r+=e.directedLoops),n-r},i.degreeWithoutSelfLoops=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.degreeWithoutSelfLoops: could not find the "'.concat(t,'" node in the graph.'));var n=0,r=0;return"directed"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),"undirected"!==this.type&&(n+=e.inDegree+e.outDegree,r+=2*e.directedLoops),n-r},i.source=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new F('Graph.source: could not find the "'.concat(t,'" edge in the graph.'));return e.source.key},i.target=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new F('Graph.target: could not find the "'.concat(t,'" edge in the graph.'));return e.target.key},i.extremities=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new F('Graph.extremities: could not find the "'.concat(t,'" edge in the graph.'));return[e.source.key,e.target.key]},i.opposite=function(t,e){t=""+t,e=""+e;var n=this._edges.get(e);if(!n)throw new F('Graph.opposite: could not find the "'.concat(e,'" edge in the graph.'));var r=n.source.key,i=n.target.key;if(t===r)return i;if(t===i)return r;throw new F('Graph.opposite: the "'.concat(t,'" node is not attached to the "').concat(e,'" edge (').concat(r,", ").concat(i,")."))},i.hasExtremity=function(t,e){t=""+t,e=""+e;var n=this._edges.get(t);if(!n)throw new F('Graph.hasExtremity: could not find the "'.concat(t,'" edge in the graph.'));return n.source.key===e||n.target.key===e},i.isUndirected=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isUndirected: could not find the "'.concat(t,'" edge in the graph.'));return e.undirected},i.isDirected=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isDirected: could not find the "'.concat(t,'" edge in the graph.'));return!e.undirected},i.isSelfLoop=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isSelfLoop: could not find the "'.concat(t,'" edge in the graph.'));return e.source===e.target},i.addNode=function(t,e){var n=function(t,e,n){if(n&&!s(n))throw new B('Graph.addNode: invalid attributes. Expecting an object but got "'.concat(n,'"'));if(e=""+e,n=n||{},t._nodes.has(e))throw new I('Graph.addNode: the "'.concat(e,'" node already exist in the graph.'));var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit("nodeAdded",{key:e,attributes:n}),r}(this,t,e);return n.key},i.mergeNode=function(t,e){if(e&&!s(e))throw new B('Graph.mergeNode: invalid attributes. Expecting an object but got "'.concat(e,'"'));t=""+t,e=e||{};var n=this._nodes.get(t);return n?(e&&(u(n.attributes,e),this.emit("nodeAttributesUpdated",{type:"merge",key:t,attributes:n.attributes,data:e})),[t,!1]):(n=new this.NodeDataClass(t,e),this._nodes.set(t,n),this.emit("nodeAdded",{key:t,attributes:e}),[t,!0])},i.updateNode=function(t,e){if(e&&"function"!=typeof e)throw new B('Graph.updateNode: invalid updater function. Expecting a function but got "'.concat(e,'"'));t=""+t;var n=this._nodes.get(t);if(n){if(e){var r=n.attributes;n.attributes=e(r),this.emit("nodeAttributesUpdated",{type:"replace",key:t,attributes:n.attributes})}return[t,!1]}var i=e?e({}):{};return n=new this.NodeDataClass(t,i),this._nodes.set(t,n),this.emit("nodeAdded",{key:t,attributes:i}),[t,!0]},i.dropNode=function(t){t=""+t;var e,n=this._nodes.get(t);if(!n)throw new F('Graph.dropNode: could not find the "'.concat(t,'" node in the graph.'));if("undirected"!==this.type){for(var r in n.out){e=n.out[r];do{Mt(this,e),e=e.next}while(e)}for(var i in n.in){e=n.in[i];do{Mt(this,e),e=e.next}while(e)}}if("directed"!==this.type)for(var o in n.undirected){e=n.undirected[o];do{Mt(this,e),e=e.next}while(e)}this._nodes.delete(t),this.emit("nodeDropped",{key:t,attributes:n.attributes})},i.dropEdge=function(t){var e;if(arguments.length>1){var n=""+arguments[0],r=""+arguments[1];if(!(e=d(this,n,r,this.type)))throw new F('Graph.dropEdge: could not find the "'.concat(n,'" -> "').concat(r,'" edge in the graph.'))}else if(t=""+t,!(e=this._edges.get(t)))throw new F('Graph.dropEdge: could not find the "'.concat(t,'" edge in the graph.'));return Mt(this,e),this},i.dropDirectedEdge=function(t,e){if(arguments.length<2)throw new I("Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new I("Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");var n=d(this,t=""+t,e=""+e,"directed");if(!n)throw new F('Graph.dropDirectedEdge: could not find a "'.concat(t,'" -> "').concat(e,'" edge in the graph.'));return Mt(this,n),this},i.dropUndirectedEdge=function(t,e){if(arguments.length<2)throw new I("Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new I("Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");var n=d(this,t,e,"undirected");if(!n)throw new F('Graph.dropUndirectedEdge: could not find a "'.concat(t,'" -> "').concat(e,'" edge in the graph.'));return Mt(this,n),this},i.clear=function(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit("cleared")},i.clearEdges=function(){for(var t,e=this._nodes.values();!0!==(t=e.next()).done;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit("edgesCleared")},i.getAttribute=function(t){return this._attributes[t]},i.getAttributes=function(){return this._attributes},i.hasAttribute=function(t){return this._attributes.hasOwnProperty(t)},i.setAttribute=function(t,e){return this._attributes[t]=e,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:t}),this},i.updateAttribute=function(t,e){if("function"!=typeof e)throw new B("Graph.updateAttribute: updater should be a function.");var n=this._attributes[t];return this._attributes[t]=e(n),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:t}),this},i.removeAttribute=function(t){return delete this._attributes[t],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:t}),this},i.replaceAttributes=function(t){if(!s(t))throw new B("Graph.replaceAttributes: provided attributes are not a plain object.");return this._attributes=t,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this},i.mergeAttributes=function(t){if(!s(t))throw new B("Graph.mergeAttributes: provided attributes are not a plain object.");return u(this._attributes,t),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:t}),this},i.updateAttributes=function(t){if("function"!=typeof t)throw new B("Graph.updateAttributes: provided updater is not a function.");return this._attributes=t(this._attributes),this.emit("attributesUpdated",{type:"update",attributes:this._attributes}),this},i.updateEachNodeAttributes=function(t,e){if("function"!=typeof t)throw new B("Graph.updateEachNodeAttributes: expecting an updater function.");if(e&&!l(e))throw new B("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");for(var n,r,i=this._nodes.values();!0!==(n=i.next()).done;)(r=n.value).attributes=t(r.key,r.attributes);this.emit("eachNodeAttributesUpdated",{hints:e||null})},i.updateEachEdgeAttributes=function(t,e){if("function"!=typeof t)throw new B("Graph.updateEachEdgeAttributes: expecting an updater function.");if(e&&!l(e))throw new B("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");for(var n,r,i,o,a=this._edges.values();!0!==(n=a.next()).done;)i=(r=n.value).source,o=r.target,r.attributes=t(r.key,r.attributes,i.key,o.key,i.attributes,o.attributes,r.undirected);this.emit("eachEdgeAttributesUpdated",{hints:e||null})},i.forEachAdjacencyEntry=function(t){if("function"!=typeof t)throw new B("Graph.forEachAdjacencyEntry: expecting a callback.");xt(!1,!1,!1,this,t)},i.forEachAdjacencyEntryWithOrphans=function(t){if("function"!=typeof t)throw new B("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");xt(!1,!1,!0,this,t)},i.forEachAssymetricAdjacencyEntry=function(t){if("function"!=typeof t)throw new B("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");xt(!1,!0,!1,this,t)},i.forEachAssymetricAdjacencyEntryWithOrphans=function(t){if("function"!=typeof t)throw new B("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");xt(!1,!0,!0,this,t)},i.nodes=function(){return"function"==typeof Array.from?Array.from(this._nodes.keys()):K(this._nodes.keys(),this._nodes.size)},i.forEachNode=function(t){if("function"!=typeof t)throw new B("Graph.forEachNode: expecting a callback.");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)t((n=e.value).key,n.attributes)},i.findNode=function(t){if("function"!=typeof t)throw new B("Graph.findNode: expecting a callback.");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(t((n=e.value).key,n.attributes))return n.key},i.mapNodes=function(t){if("function"!=typeof t)throw new B("Graph.mapNode: expecting a callback.");for(var e,n,r=this._nodes.values(),i=new Array(this.order),o=0;!0!==(e=r.next()).done;)n=e.value,i[o++]=t(n.key,n.attributes);return i},i.someNode=function(t){if("function"!=typeof t)throw new B("Graph.someNode: expecting a callback.");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(t((n=e.value).key,n.attributes))return!0;return!1},i.everyNode=function(t){if("function"!=typeof t)throw new B("Graph.everyNode: expecting a callback.");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(!t((n=e.value).key,n.attributes))return!1;return!0},i.filterNodes=function(t){if("function"!=typeof t)throw new B("Graph.filterNodes: expecting a callback.");for(var e,n,r=this._nodes.values(),i=[];!0!==(e=r.next()).done;)t((n=e.value).key,n.attributes)&&i.push(n.key);return i},i.reduceNodes=function(t,e){if("function"!=typeof t)throw new B("Graph.reduceNodes: expecting a callback.");if(arguments.length<2)throw new B("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");for(var n,r,i=e,o=this._nodes.values();!0!==(n=o.next()).done;)i=t(i,(r=n.value).key,r.attributes);return i},i.nodeEntries=function(){var t=this._nodes.values();return new O((function(){var e=t.next();if(e.done)return e;var n=e.value;return{value:{node:n.key,attributes:n.attributes},done:!1}}))},i.export=function(){var t=this,e=new Array(this._nodes.size),n=0;this._nodes.forEach((function(t,r){e[n++]=function(t,e){var n={key:t};return h(e.attributes)||(n.attributes=u({},e.attributes)),n}(r,t)}));var r=new Array(this._edges.size);return n=0,this._edges.forEach((function(e,i){r[n++]=function(t,e,n){var r={key:e,source:n.source.key,target:n.target.key};return h(n.attributes)||(r.attributes=u({},n.attributes)),"mixed"===t&&n.undirected&&(r.undirected=!0),r}(t.type,i,e)})),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:r}},i.import=function(t){var e,n,i,o,a,c=this,u=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(t instanceof r)return t.forEachNode((function(t,e){u?c.mergeNode(t,e):c.addNode(t,e)})),t.forEachEdge((function(t,e,n,r,i,o,a){u?a?c.mergeUndirectedEdgeWithKey(t,n,r,e):c.mergeDirectedEdgeWithKey(t,n,r,e):a?c.addUndirectedEdgeWithKey(t,n,r,e):c.addDirectedEdgeWithKey(t,n,r,e)})),this;if(!s(t))throw new B("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(t.attributes){if(!s(t.attributes))throw new B("Graph.import: invalid attributes. Expecting a plain object.");u?this.mergeAttributes(t.attributes):this.replaceAttributes(t.attributes)}if(t.nodes){if(i=t.nodes,!Array.isArray(i))throw new B("Graph.import: invalid nodes. Expecting an array.");for(e=0,n=i.length;e<n;e++){Et(o=i[e]);var d=o,h=d.key,p=d.attributes;u?this.mergeNode(h,p):this.addNode(h,p)}}if(t.edges){var f=!1;if("undirected"===this.type&&(f=!0),i=t.edges,!Array.isArray(i))throw new B("Graph.import: invalid edges. Expecting an array.");for(e=0,n=i.length;e<n;e++){At(a=i[e]);var l=a,g=l.source,y=l.target,w=l.attributes,v=l.undirected,b=void 0===v?f:v;"key"in a?(u?b?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:b?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey).call(this,a.key,g,y,w):(u?b?this.mergeUndirectedEdge:this.mergeDirectedEdge:b?this.addUndirectedEdge:this.addDirectedEdge).call(this,g,y,w)}}return this},i.nullCopy=function(t){var e=new r(u({},this._options,t));return e.replaceAttributes(u({},this.getAttributes())),e},i.emptyCopy=function(t){var e=this.nullCopy(t);return this._nodes.forEach((function(t,n){var r=u({},t.attributes);t=new e.NodeDataClass(n,r),e._nodes.set(n,t)})),e},i.copy=function(t){if("string"==typeof(t=t||{}).type&&t.type!==this.type&&"mixed"!==t.type)throw new I('Graph.copy: cannot create an incompatible copy from "'.concat(this.type,'" type to "').concat(t.type,'" because this would mean losing information about the current graph.'));if("boolean"==typeof t.multi&&t.multi!==this.multi&&!0!==t.multi)throw new I("Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.");if("boolean"==typeof t.allowSelfLoops&&t.allowSelfLoops!==this.allowSelfLoops&&!0!==t.allowSelfLoops)throw new I("Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.");for(var e,n,r=this.emptyCopy(t),i=this._edges.values();!0!==(e=i.next()).done;)jt(r,"copy",!1,(n=e.value).undirected,n.key,n.source.key,n.target.key,u({},n.attributes));return r},i.toJSON=function(){return this.export()},i.toString=function(){return"[object Graph]"},i.inspect=function(){var e=this,n={};this._nodes.forEach((function(t,e){n[e]=t.attributes}));var r={},i={};this._edges.forEach((function(t,n){var o,a=t.undirected?"--":"->",c="",u=t.source.key,d=t.target.key;t.undirected&&u>d&&(o=u,u=d,d=o);var s="(".concat(u,")").concat(a,"(").concat(d,")");n.startsWith("geid_")?e.multi&&(void 0===i[s]?i[s]=0:i[s]++,c+="".concat(i[s],". ")):c+="[".concat(n,"]: "),r[c+=s]=t.attributes}));var o={};for(var a in this)this.hasOwnProperty(a)&&!Ut.has(a)&&"function"!=typeof this[a]&&"symbol"!==t(a)&&(o[a]=this[a]);return o.attributes=this._attributes,o.nodes=n,o.edges=r,p(o,"constructor",this.constructor),o},r}(y.exports.EventEmitter);"undefined"!=typeof Symbol&&(zt.prototype[Symbol.for("nodejs.util.inspect.custom")]=zt.prototype.inspect),[{name:function(t){return"".concat(t,"Edge")},generateKey:!0},{name:function(t){return"".concat(t,"DirectedEdge")},generateKey:!0,type:"directed"},{name:function(t){return"".concat(t,"UndirectedEdge")},generateKey:!0,type:"undirected"},{name:function(t){return"".concat(t,"EdgeWithKey")}},{name:function(t){return"".concat(t,"DirectedEdgeWithKey")},type:"directed"},{name:function(t){return"".concat(t,"UndirectedEdgeWithKey")},type:"undirected"}].forEach((function(t){["add","merge","update"].forEach((function(e){var n=t.name(e),r="add"===e?jt:Ct;t.generateKey?zt.prototype[n]=function(i,o,a){return r(this,n,!0,"undirected"===(t.type||this.type),null,i,o,a,"update"===e)}:zt.prototype[n]=function(i,o,a,c){return r(this,n,!1,"undirected"===(t.type||this.type),i,o,a,c,"update"===e)}}))})),function(t){Q.forEach((function(e){var n=e.name,r=e.attacher;r(t,n("Node"),0),r(t,n("Source"),1),r(t,n("Target"),2),r(t,n("Opposite"),3)}))}(zt),function(t){X.forEach((function(e){var n=e.name,r=e.attacher;r(t,n("Edge"),"mixed"),r(t,n("DirectedEdge"),"directed"),r(t,n("UndirectedEdge"),"undirected")}))}(zt),function(t){et.forEach((function(e){!function(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t,e){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return[];if(!arguments.length)return ut(this,r);if(1===arguments.length){t=""+t;var o=this._nodes.get(t);if(void 0===o)throw new F("Graph.".concat(n,': could not find the "').concat(t,'" node in the graph.'));return pt(this.multi,"mixed"===r?this.type:r,i,o)}if(2===arguments.length){t=""+t,e=""+e;var a=this._nodes.get(t);if(!a)throw new F("Graph.".concat(n,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new F("Graph.".concat(n,':  could not find the "').concat(e,'" target node in the graph.'));return gt(r,this.multi,i,a,e)}throw new B("Graph.".concat(n,": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length,")."))}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o="forEach"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e,n){if("mixed"===r||"mixed"===this.type||r===this.type){if(1===arguments.length)return dt(!1,this,r,n=t);if(2===arguments.length){t=""+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new F("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return ht(!1,this.multi,"mixed"===r?this.type:r,i,a,n)}if(3===arguments.length){t=""+t,e=""+e;var c=this._nodes.get(t);if(!c)throw new F("Graph.".concat(o,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new F("Graph.".concat(o,':  could not find the "').concat(e,'" target node in the graph.'));return lt(!1,r,this.multi,i,c,e,n)}throw new B("Graph.".concat(o,": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length,")."))}};var a="map"+n[0].toUpperCase()+n.slice(1);t.prototype[a]=function(){var t,e=Array.prototype.slice.call(arguments),n=e.pop();if(0===e.length){var i=0;"directed"!==r&&(i+=this.undirectedSize),"undirected"!==r&&(i+=this.directedSize),t=new Array(i);var a=0;e.push((function(e,r,i,o,c,u,d){t[a++]=n(e,r,i,o,c,u,d)}))}else t=[],e.push((function(e,r,i,o,a,c,u){t.push(n(e,r,i,o,a,c,u))}));return this[o].apply(this,e),t};var c="filter"+n[0].toUpperCase()+n.slice(1);t.prototype[c]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop(),n=[];return t.push((function(t,r,i,o,a,c,u){e(t,r,i,o,a,c,u)&&n.push(t)})),this[o].apply(this,t),n};var u="reduce"+n[0].toUpperCase()+n.slice(1);t.prototype[u]=function(){var t,e,n=Array.prototype.slice.call(arguments);if(n.length<2||n.length>4)throw new B("Graph.".concat(u,": invalid number of arguments (expecting 2, 3 or 4 and got ").concat(n.length,")."));if("function"==typeof n[n.length-1]&&"function"!=typeof n[n.length-2])throw new B("Graph.".concat(u,": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array."));2===n.length?(t=n[0],e=n[1],n=[]):3===n.length?(t=n[1],e=n[2],n=[n[0]]):4===n.length&&(t=n[2],e=n[3],n=[n[0],n[1]]);var r=e;return n.push((function(e,n,i,o,a,c,u){r=t(r,e,n,i,o,a,c,u)})),this[o].apply(this,n),r}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o="find"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e,n){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return!1;if(1===arguments.length)return dt(!0,this,r,n=t);if(2===arguments.length){t=""+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new F("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return ht(!0,this.multi,"mixed"===r?this.type:r,i,a,n)}if(3===arguments.length){t=""+t,e=""+e;var c=this._nodes.get(t);if(!c)throw new F("Graph.".concat(o,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new F("Graph.".concat(o,':  could not find the "').concat(e,'" target node in the graph.'));return lt(!0,r,this.multi,i,c,e,n)}throw new B("Graph.".concat(o,": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length,")."))};var a="some"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[a]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop();return t.push((function(t,n,r,i,o,a,c){return e(t,n,r,i,o,a,c)})),!!this[o].apply(this,t)};var c="every"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[c]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop();return t.push((function(t,n,r,i,o,a,c){return!e(t,n,r,i,o,a,c)})),!this[o].apply(this,t)}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+"Entries";t.prototype[o]=function(t,e){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return O.empty();if(!arguments.length)return st(this,r);if(1===arguments.length){t=""+t;var n=this._nodes.get(t);if(!n)throw new F("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return ft(r,i,n)}if(2===arguments.length){t=""+t,e=""+e;var a=this._nodes.get(t);if(!a)throw new F("Graph.".concat(o,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new F("Graph.".concat(o,':  could not find the "').concat(e,'" target node in the graph.'));return yt(r,i,a,e)}throw new B("Graph.".concat(o,": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length,")."))}}(t,e)}))}(zt),function(t){wt.forEach((function(e){_t(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o="forEach"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e){if("mixed"===r||"mixed"===this.type||r===this.type){t=""+t;var n=this._nodes.get(t);if(void 0===n)throw new F("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));mt(!1,"mixed"===r?this.type:r,i,n,e)}};var a="map"+n[0].toUpperCase()+n.slice(1);t.prototype[a]=function(t,e){var n=[];return this[o](t,(function(t,r){n.push(e(t,r))})),n};var c="filter"+n[0].toUpperCase()+n.slice(1);t.prototype[c]=function(t,e){var n=[];return this[o](t,(function(t,r){e(t,r)&&n.push(t)})),n};var u="reduce"+n[0].toUpperCase()+n.slice(1);t.prototype[u]=function(t,e,n){if(arguments.length<3)throw new B("Graph.".concat(u,": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array."));var r=n;return this[o](t,(function(t,n){r=e(r,t,n)})),r}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n[0].toUpperCase()+n.slice(1,-1),a="find"+o;t.prototype[a]=function(t,e){if("mixed"===r||"mixed"===this.type||r===this.type){t=""+t;var n=this._nodes.get(t);if(void 0===n)throw new F("Graph.".concat(a,': could not find the "').concat(t,'" node in the graph.'));return mt(!0,"mixed"===r?this.type:r,i,n,e)}};var c="some"+o;t.prototype[c]=function(t,e){return!!this[a](t,e)};var u="every"+o;t.prototype[u]=function(t,e){return!this[a](t,(function(t,n){return!e(t,n)}))}}(t,e),Gt(t,e)}))}(zt);var Wt=function(t){function n(e){var n=u({type:"directed"},e);if("multi"in n&&!1!==n.multi)throw new B("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if("directed"!==n.type)throw new B('DirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Pt=function(t){function n(e){var n=u({type:"undirected"},e);if("multi"in n&&!1!==n.multi)throw new B("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if("undirected"!==n.type)throw new B('UndirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Rt=function(t){function n(e){var n=u({multi:!0},e);if("multi"in n&&!0!==n.multi)throw new B("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");return t.call(this,n)||this}return e(n,t),n}(zt),Kt=function(t){function n(e){var n=u({type:"directed",multi:!0},e);if("multi"in n&&!0!==n.multi)throw new B("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if("directed"!==n.type)throw new B('MultiDirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Tt=function(t){function n(e){var n=u({type:"undirected",multi:!0},e);if("multi"in n&&!0!==n.multi)throw new B("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if("undirected"!==n.type)throw new B('MultiUndirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt);function Bt(t){t.from=function(e,n){var r=u({},e.options,n),i=new t(r);return i.import(e),i}}return Bt(zt),Bt(Wt),Bt(Pt),Bt(Rt),Bt(Kt),Bt(Tt),zt.Graph=zt,zt.DirectedGraph=Wt,zt.UndirectedGraph=Pt,zt.MultiGraph=Rt,zt.MultiDirectedGraph=Kt,zt.MultiUndirectedGraph=Tt,zt.InvalidArgumentsGraphError=B,zt.NotFoundGraphError=F,zt.UsageGraphError=I,zt}));


},{}],6:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Sigma.js Camera Class
 * ======================
 *
 * Class designed to store camera information & used to update it.
 * @module
 */
var animate_1 = require("../utils/animate");
var easings_1 = __importDefault(require("../utils/easings"));
var utils_1 = require("../utils");
var types_1 = require("../types");
/**
 * Defaults.
 */
var DEFAULT_ZOOMING_RATIO = 1.5;
/**
 * Camera class
 *
 * @constructor
 */
var Camera = /** @class */ (function (_super) {
    __extends(Camera, _super);
    function Camera() {
        var _this = _super.call(this) || this;
        _this.x = 0.5;
        _this.y = 0.5;
        _this.angle = 0;
        _this.ratio = 1;
        _this.minRatio = null;
        _this.maxRatio = null;
        _this.nextFrame = null;
        _this.previousState = null;
        _this.enabled = true;
        // State
        _this.previousState = _this.getState();
        return _this;
    }
    /**
     * Static method used to create a Camera object with a given state.
     *
     * @param state
     * @return {Camera}
     */
    Camera.from = function (state) {
        var camera = new Camera();
        return camera.setState(state);
    };
    /**
     * Method used to enable the camera.
     *
     * @return {Camera}
     */
    Camera.prototype.enable = function () {
        this.enabled = true;
        return this;
    };
    /**
     * Method used to disable the camera.
     *
     * @return {Camera}
     */
    Camera.prototype.disable = function () {
        this.enabled = false;
        return this;
    };
    /**
     * Method used to retrieve the camera's current state.
     *
     * @return {object}
     */
    Camera.prototype.getState = function () {
        return {
            x: this.x,
            y: this.y,
            angle: this.angle,
            ratio: this.ratio,
        };
    };
    /**
     * Method used to check whether the camera has the given state.
     *
     * @return {object}
     */
    Camera.prototype.hasState = function (state) {
        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;
    };
    /**
     * Method used to retrieve the camera's previous state.
     *
     * @return {object}
     */
    Camera.prototype.getPreviousState = function () {
        var state = this.previousState;
        if (!state)
            return null;
        return {
            x: state.x,
            y: state.y,
            angle: state.angle,
            ratio: state.ratio,
        };
    };
    /**
     * Method used to check minRatio and maxRatio values.
     *
     * @param ratio
     * @return {number}
     */
    Camera.prototype.getBoundedRatio = function (ratio) {
        var r = ratio;
        if (typeof this.minRatio === "number")
            r = Math.max(r, this.minRatio);
        if (typeof this.maxRatio === "number")
            r = Math.min(r, this.maxRatio);
        return r;
    };
    /**
     * Method used to check various things to return a legit state candidate.
     *
     * @param state
     * @return {object}
     */
    Camera.prototype.validateState = function (state) {
        var validatedState = {};
        if (typeof state.x === "number")
            validatedState.x = state.x;
        if (typeof state.y === "number")
            validatedState.y = state.y;
        if (typeof state.angle === "number")
            validatedState.angle = state.angle;
        if (typeof state.ratio === "number")
            validatedState.ratio = this.getBoundedRatio(state.ratio);
        return validatedState;
    };
    /**
     * Method used to check whether the camera is currently being animated.
     *
     * @return {boolean}
     */
    Camera.prototype.isAnimated = function () {
        return !!this.nextFrame;
    };
    /**
     * Method used to set the camera's state.
     *
     * @param  {object} state - New state.
     * @return {Camera}
     */
    Camera.prototype.setState = function (state) {
        if (!this.enabled)
            return this;
        // TODO: update by function
        // Keeping track of last state
        this.previousState = this.getState();
        var validState = this.validateState(state);
        if (typeof validState.x === "number")
            this.x = validState.x;
        if (typeof validState.y === "number")
            this.y = validState.y;
        if (typeof validState.angle === "number")
            this.angle = validState.angle;
        if (typeof validState.ratio === "number")
            this.ratio = validState.ratio;
        // Emitting
        if (!this.hasState(this.previousState))
            this.emit("updated", this.getState());
        return this;
    };
    /**
     * Method used to update the camera's state using a function.
     *
     * @param  {function} updater - Updated function taking current state and
     *                              returning next state.
     * @return {Camera}
     */
    Camera.prototype.updateState = function (updater) {
        this.setState(updater(this.getState()));
        return this;
    };
    /**
     * Method used to animate the camera.
     *
     * @param  {object}                    state      - State to reach eventually.
     * @param  {object}                    opts       - Options:
     * @param  {number}                      duration - Duration of the animation.
     * @param  {string | number => number}   easing   - Easing function or name of an existing one
     * @param  {function}                  callback   - Callback
     */
    Camera.prototype.animate = function (state, opts, callback) {
        var _this = this;
        if (!this.enabled)
            return;
        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);
        var validState = this.validateState(state);
        var easing = typeof options.easing === "function" ? options.easing : easings_1.default[options.easing];
        // State
        var start = Date.now(), initialState = this.getState();
        // Function performing the animation
        var fn = function () {
            var t = (Date.now() - start) / options.duration;
            // The animation is over:
            if (t >= 1) {
                _this.nextFrame = null;
                _this.setState(validState);
                if (_this.animationCallback) {
                    _this.animationCallback.call(null);
                    _this.animationCallback = undefined;
                }
                return;
            }
            var coefficient = easing(t);
            var newState = {};
            if (typeof validState.x === "number")
                newState.x = initialState.x + (validState.x - initialState.x) * coefficient;
            if (typeof validState.y === "number")
                newState.y = initialState.y + (validState.y - initialState.y) * coefficient;
            if (typeof validState.angle === "number")
                newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;
            if (typeof validState.ratio === "number")
                newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;
            _this.setState(newState);
            _this.nextFrame = (0, utils_1.requestFrame)(fn);
        };
        if (this.nextFrame) {
            (0, utils_1.cancelFrame)(this.nextFrame);
            if (this.animationCallback)
                this.animationCallback.call(null);
            this.nextFrame = (0, utils_1.requestFrame)(fn);
        }
        else {
            fn();
        }
        this.animationCallback = callback;
    };
    /**
     * Method used to zoom the camera.
     *
     * @param  {number|object} factorOrOptions - Factor or options.
     * @return {function}
     */
    Camera.prototype.animatedZoom = function (factorOrOptions) {
        if (!factorOrOptions) {
            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });
        }
        else {
            if (typeof factorOrOptions === "number")
                return this.animate({ ratio: this.ratio / factorOrOptions });
            else
                this.animate({
                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),
                }, factorOrOptions);
        }
    };
    /**
     * Method used to unzoom the camera.
     *
     * @param  {number|object} factorOrOptions - Factor or options.
     */
    Camera.prototype.animatedUnzoom = function (factorOrOptions) {
        if (!factorOrOptions) {
            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });
        }
        else {
            if (typeof factorOrOptions === "number")
                return this.animate({ ratio: this.ratio * factorOrOptions });
            else
                this.animate({
                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),
                }, factorOrOptions);
        }
    };
    /**
     * Method used to reset the camera.
     *
     * @param  {object} options - Options.
     */
    Camera.prototype.animatedReset = function (options) {
        this.animate({
            x: 0.5,
            y: 0.5,
            ratio: 1,
            angle: 0,
        }, options);
    };
    /**
     * Returns a new Camera instance, with the same state as the current camera.
     *
     * @return {Camera}
     */
    Camera.prototype.copy = function () {
        return Camera.from(this.getState());
    };
    return Camera;
}(types_1.TypedEventEmitter));
exports.default = Camera;

},{"../types":34,"../utils":39,"../utils/animate":35,"../utils/easings":37}],7:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;
/**
 * Sigma.js Captor Class
 * ======================
 * @module
 */
var types_1 = require("../../types");
/**
 * Captor utils functions
 * ======================
 */
/**
 * Extract the local X and Y coordinates from a mouse event or touch object. If
 * a DOM element is given, it uses this element's offset to compute the position
 * (this allows using events that are not bound to the container itself and
 * still have a proper position).
 *
 * @param  {event}       e - A mouse event or touch object.
 * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.
 * @return {number}      The local Y value of the mouse.
 */
function getPosition(e, dom) {
    var bbox = dom.getBoundingClientRect();
    return {
        x: e.clientX - bbox.left,
        y: e.clientY - bbox.top,
    };
}
exports.getPosition = getPosition;
/**
 * Convert mouse coords to sigma coords.
 *
 * @param  {event}       e   - A mouse event or touch object.
 * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.
 * @return {object}
 */
function getMouseCoords(e, dom) {
    var res = __assign(__assign({}, getPosition(e, dom)), { sigmaDefaultPrevented: false, preventSigmaDefault: function () {
            res.sigmaDefaultPrevented = true;
        }, original: e });
    return res;
}
exports.getMouseCoords = getMouseCoords;
/**
 * Convert mouse wheel event coords to sigma coords.
 *
 * @param  {event}       e   - A wheel mouse event.
 * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.
 * @return {object}
 */
function getWheelCoords(e, dom) {
    return __assign(__assign({}, getMouseCoords(e, dom)), { delta: getWheelDelta(e) });
}
exports.getWheelCoords = getWheelCoords;
var MAX_TOUCHES = 2;
function getTouchesArray(touches) {
    var arr = [];
    for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)
        arr.push(touches[i]);
    return arr;
}
exports.getTouchesArray = getTouchesArray;
/**
 * Convert touch coords to sigma coords.
 *
 * @param  {event}       e   - A touch event.
 * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.
 * @return {object}
 */
function getTouchCoords(e, dom) {
    return {
        touches: getTouchesArray(e.touches).map(function (touch) { return getPosition(touch, dom); }),
        original: e,
    };
}
exports.getTouchCoords = getTouchCoords;
/**
 * Extract the wheel delta from a mouse event or touch object.
 *
 * @param  {event}  e - A mouse event or touch object.
 * @return {number}     The wheel delta of the mouse.
 */
function getWheelDelta(e) {
    // TODO: check those ratios again to ensure a clean Chrome/Firefox compat
    if (typeof e.deltaY !== "undefined")
        return (e.deltaY * -3) / 360;
    if (typeof e.detail !== "undefined")
        return e.detail / -9;
    throw new Error("Captor: could not extract delta from event.");
}
exports.getWheelDelta = getWheelDelta;
/**
 * Abstract class representing a captor like the user's mouse or touch controls.
 */
var Captor = /** @class */ (function (_super) {
    __extends(Captor, _super);
    function Captor(container, renderer) {
        var _this = _super.call(this) || this;
        // Properties
        _this.container = container;
        _this.renderer = renderer;
        return _this;
    }
    return Captor;
}(types_1.TypedEventEmitter));
exports.default = Captor;

},{"../../types":34}],8:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var captor_1 = __importStar(require("./captor"));
/**
 * Constants.
 */
var DRAG_TIMEOUT = 100;
var DRAGGED_EVENTS_TOLERANCE = 3;
var MOUSE_INERTIA_DURATION = 200;
var MOUSE_INERTIA_RATIO = 3;
var MOUSE_ZOOM_DURATION = 250;
var ZOOMING_RATIO = 1.7;
var DOUBLE_CLICK_TIMEOUT = 300;
var DOUBLE_CLICK_ZOOMING_RATIO = 2.2;
var DOUBLE_CLICK_ZOOMING_DURATION = 200;
/**
 * Mouse captor class.
 *
 * @constructor
 */
var MouseCaptor = /** @class */ (function (_super) {
    __extends(MouseCaptor, _super);
    function MouseCaptor(container, renderer) {
        var _this = _super.call(this, container, renderer) || this;
        // State
        _this.enabled = true;
        _this.draggedEvents = 0;
        _this.downStartTime = null;
        _this.lastMouseX = null;
        _this.lastMouseY = null;
        _this.isMouseDown = false;
        _this.isMoving = false;
        _this.movingTimeout = null;
        _this.startCameraState = null;
        _this.clicks = 0;
        _this.doubleClickTimeout = null;
        _this.currentWheelDirection = 0;
        // Binding methods
        _this.handleClick = _this.handleClick.bind(_this);
        _this.handleRightClick = _this.handleRightClick.bind(_this);
        _this.handleDown = _this.handleDown.bind(_this);
        _this.handleUp = _this.handleUp.bind(_this);
        _this.handleMove = _this.handleMove.bind(_this);
        _this.handleWheel = _this.handleWheel.bind(_this);
        _this.handleOut = _this.handleOut.bind(_this);
        // Binding events
        container.addEventListener("click", _this.handleClick, false);
        container.addEventListener("contextmenu", _this.handleRightClick, false);
        container.addEventListener("mousedown", _this.handleDown, false);
        container.addEventListener("wheel", _this.handleWheel, false);
        container.addEventListener("mouseout", _this.handleOut, false);
        document.addEventListener("mousemove", _this.handleMove, false);
        document.addEventListener("mouseup", _this.handleUp, false);
        return _this;
    }
    MouseCaptor.prototype.kill = function () {
        var container = this.container;
        container.removeEventListener("click", this.handleClick);
        container.removeEventListener("contextmenu", this.handleRightClick);
        container.removeEventListener("mousedown", this.handleDown);
        container.removeEventListener("wheel", this.handleWheel);
        container.removeEventListener("mouseout", this.handleOut);
        document.removeEventListener("mousemove", this.handleMove);
        document.removeEventListener("mouseup", this.handleUp);
    };
    MouseCaptor.prototype.handleClick = function (e) {
        var _this = this;
        if (!this.enabled)
            return;
        this.clicks++;
        if (this.clicks === 2) {
            this.clicks = 0;
            if (typeof this.doubleClickTimeout === "number") {
                clearTimeout(this.doubleClickTimeout);
                this.doubleClickTimeout = null;
            }
            return this.handleDoubleClick(e);
        }
        setTimeout(function () {
            _this.clicks = 0;
            _this.doubleClickTimeout = null;
        }, DOUBLE_CLICK_TIMEOUT);
        // NOTE: this is here to prevent click events on drag
        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)
            this.emit("click", (0, captor_1.getMouseCoords)(e, this.container));
    };
    MouseCaptor.prototype.handleRightClick = function (e) {
        if (!this.enabled)
            return;
        this.emit("rightClick", (0, captor_1.getMouseCoords)(e, this.container));
    };
    MouseCaptor.prototype.handleDoubleClick = function (e) {
        if (!this.enabled)
            return;
        e.preventDefault();
        e.stopPropagation();
        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);
        this.emit("doubleClick", mouseCoords);
        if (mouseCoords.sigmaDefaultPrevented)
            return;
        // default behavior
        var camera = this.renderer.getCamera();
        var newRatio = camera.getBoundedRatio(camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO);
        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {
            easing: "quadraticInOut",
            duration: DOUBLE_CLICK_ZOOMING_DURATION,
        });
    };
    MouseCaptor.prototype.handleDown = function (e) {
        if (!this.enabled)
            return;
        // We only start dragging on left button
        if (e.button === 0) {
            this.startCameraState = this.renderer.getCamera().getState();
            var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;
            this.lastMouseX = x;
            this.lastMouseY = y;
            this.draggedEvents = 0;
            this.downStartTime = Date.now();
            this.isMouseDown = true;
        }
        this.emit("mousedown", (0, captor_1.getMouseCoords)(e, this.container));
    };
    MouseCaptor.prototype.handleUp = function (e) {
        var _this = this;
        if (!this.enabled || !this.isMouseDown)
            return;
        var camera = this.renderer.getCamera();
        this.isMouseDown = false;
        if (typeof this.movingTimeout === "number") {
            clearTimeout(this.movingTimeout);
            this.movingTimeout = null;
        }
        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;
        var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };
        if (this.isMoving) {
            camera.animate({
                x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),
                y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y),
            }, {
                duration: MOUSE_INERTIA_DURATION,
                easing: "quadraticOut",
            });
        }
        else if (this.lastMouseX !== x || this.lastMouseY !== y) {
            camera.setState({
                x: cameraState.x,
                y: cameraState.y,
            });
        }
        this.isMoving = false;
        setTimeout(function () {
            _this.draggedEvents = 0;
            // NOTE: this refresh is here to make sure `hideEdgesOnMove` can work
            // when someone releases camera pan drag after having stopped moving.
            // See commit: https://github.com/jacomyal/sigma.js/commit/cfd9197f70319109db6b675dd7c82be493ca95a2
            // See also issue: https://github.com/jacomyal/sigma.js/issues/1290
            // It could be possible to render instead of scheduling a refresh but for
            // now it seems good enough.
            _this.renderer.refresh();
        }, 0);
        this.emit("mouseup", (0, captor_1.getMouseCoords)(e, this.container));
    };
    MouseCaptor.prototype.handleMove = function (e) {
        var _this = this;
        if (!this.enabled)
            return;
        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);
        // Always trigger a "mousemovebody" event, so that it is possible to develop
        // a drag-and-drop effect that works even when the mouse is out of the
        // container:
        this.emit("mousemovebody", mouseCoords);
        // Only trigger the "mousemove" event when the mouse is actually hovering
        // the container, to avoid weirdly hovering nodes and/or edges when the
        // mouse is not hover the container:
        if (e.target === this.container) {
            this.emit("mousemove", mouseCoords);
        }
        if (mouseCoords.sigmaDefaultPrevented)
            return;
        // Handle the case when "isMouseDown" all the time, to allow dragging the
        // stage while the mouse is not hover the container:
        if (this.isMouseDown) {
            this.isMoving = true;
            this.draggedEvents++;
            if (typeof this.movingTimeout === "number") {
                clearTimeout(this.movingTimeout);
            }
            this.movingTimeout = window.setTimeout(function () {
                _this.movingTimeout = null;
                _this.isMoving = false;
            }, DRAG_TIMEOUT);
            var camera = this.renderer.getCamera();
            var _a = (0, captor_1.getPosition)(e, this.container), eX = _a.x, eY = _a.y;
            var lastMouse = this.renderer.viewportToFramedGraph({
                x: this.lastMouseX,
                y: this.lastMouseY,
            });
            var mouse = this.renderer.viewportToFramedGraph({ x: eX, y: eY });
            var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;
            var cameraState = camera.getState();
            var x = cameraState.x + offsetX, y = cameraState.y + offsetY;
            camera.setState({ x: x, y: y });
            this.lastMouseX = eX;
            this.lastMouseY = eY;
            e.preventDefault();
            e.stopPropagation();
        }
    };
    MouseCaptor.prototype.handleWheel = function (e) {
        var _this = this;
        if (!this.enabled)
            return;
        e.preventDefault();
        e.stopPropagation();
        var delta = (0, captor_1.getWheelDelta)(e);
        if (!delta)
            return;
        var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);
        this.emit("wheel", wheelCoords);
        if (wheelCoords.sigmaDefaultPrevented)
            return;
        // Default behavior
        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;
        var camera = this.renderer.getCamera();
        var newRatio = camera.getBoundedRatio(camera.getState().ratio * ratioDiff);
        var wheelDirection = delta > 0 ? 1 : -1;
        var now = Date.now();
        // Cancel events that are too close too each other and in the same direction:
        if (this.currentWheelDirection === wheelDirection &&
            this.lastWheelTriggerTime &&
            now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {
            return;
        }
        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {
            easing: "quadraticOut",
            duration: MOUSE_ZOOM_DURATION,
        }, function () {
            _this.currentWheelDirection = 0;
        });
        this.currentWheelDirection = wheelDirection;
        this.lastWheelTriggerTime = now;
    };
    MouseCaptor.prototype.handleOut = function () {
        // TODO: dispatch event
    };
    return MouseCaptor;
}(captor_1.default));
exports.default = MouseCaptor;

},{"./captor":7}],9:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var captor_1 = __importStar(require("./captor"));
var DRAG_TIMEOUT = 200;
var TOUCH_INERTIA_RATIO = 3;
var TOUCH_INERTIA_DURATION = 200;
/**
 * Touch captor class.
 *
 * @constructor
 */
var TouchCaptor = /** @class */ (function (_super) {
    __extends(TouchCaptor, _super);
    function TouchCaptor(container, renderer) {
        var _this = _super.call(this, container, renderer) || this;
        _this.enabled = true;
        _this.isMoving = false;
        _this.hasMoved = false;
        _this.touchMode = 0; // number of touches down
        _this.startTouchesPositions = [];
        // Binding methods:
        _this.handleStart = _this.handleStart.bind(_this);
        _this.handleLeave = _this.handleLeave.bind(_this);
        _this.handleMove = _this.handleMove.bind(_this);
        // Binding events
        container.addEventListener("touchstart", _this.handleStart, false);
        container.addEventListener("touchend", _this.handleLeave, false);
        container.addEventListener("touchcancel", _this.handleLeave, false);
        container.addEventListener("touchmove", _this.handleMove, false);
        return _this;
    }
    TouchCaptor.prototype.kill = function () {
        var container = this.container;
        container.removeEventListener("touchstart", this.handleStart);
        container.removeEventListener("touchend", this.handleLeave);
        container.removeEventListener("touchcancel", this.handleLeave);
        container.removeEventListener("touchmove", this.handleMove);
    };
    TouchCaptor.prototype.getDimensions = function () {
        return {
            width: this.container.offsetWidth,
            height: this.container.offsetHeight,
        };
    };
    TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, touch, emitter) {
        var mousePosition = touch || e.touches[0];
        var mouseEvent = new MouseEvent(type, {
            clientX: mousePosition.clientX,
            clientY: mousePosition.clientY,
            altKey: e.altKey,
            ctrlKey: e.ctrlKey,
        });
        mouseEvent.isFakeSigmaMouseEvent = true;
        (emitter || this.container).dispatchEvent(mouseEvent);
    };
    TouchCaptor.prototype.handleStart = function (e) {
        var _this = this;
        if (!this.enabled)
            return;
        // Prevent default to avoid default browser behaviors...
        e.preventDefault();
        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:
        if (e.touches.length === 1)
            this.dispatchRelatedMouseEvent("mousedown", e);
        var touches = (0, captor_1.getTouchesArray)(e.touches);
        this.touchMode = touches.length;
        this.startCameraState = this.renderer.getCamera().getState();
        this.startTouchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });
        this.lastTouches = touches;
        this.lastTouchesPositions = this.startTouchesPositions;
        // When there are two touches down, let's record distance and angle as well:
        if (this.touchMode === 2) {
            var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;
            this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);
            this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));
        }
        this.emit("touchdown", (0, captor_1.getTouchCoords)(e, this.container));
    };
    TouchCaptor.prototype.handleLeave = function (e) {
        if (!this.enabled)
            return;
        // Prevent default to avoid default browser behaviors...
        e.preventDefault();
        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:
        if (e.touches.length === 0 && this.lastTouches && this.lastTouches.length) {
            this.dispatchRelatedMouseEvent("mouseup", e, this.lastTouches[0], document);
            // ... and only click if no move was made
            if (!this.hasMoved) {
                this.dispatchRelatedMouseEvent("click", e, this.lastTouches[0]);
            }
        }
        if (this.movingTimeout) {
            this.isMoving = false;
            clearTimeout(this.movingTimeout);
        }
        switch (this.touchMode) {
            case 2:
                if (e.touches.length === 1) {
                    this.handleStart(e);
                    e.preventDefault();
                    break;
                }
            /* falls through */
            case 1:
                // TODO
                // Dispatch event
                if (this.isMoving) {
                    var camera = this.renderer.getCamera();
                    var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };
                    camera.animate({
                        x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),
                        y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y),
                    }, {
                        duration: TOUCH_INERTIA_DURATION,
                        easing: "quadraticOut",
                    });
                }
                this.hasMoved = false;
                this.isMoving = false;
                this.touchMode = 0;
                break;
        }
        this.emit("touchup", (0, captor_1.getTouchCoords)(e, this.container));
    };
    TouchCaptor.prototype.handleMove = function (e) {
        var _a;
        var _this = this;
        if (!this.enabled)
            return;
        // Prevent default to avoid default browser behaviors...
        e.preventDefault();
        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:
        if (e.touches.length === 1)
            this.dispatchRelatedMouseEvent("mousemove", e);
        var touches = (0, captor_1.getTouchesArray)(e.touches);
        var touchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });
        this.lastTouches = touches;
        this.lastTouchesPositions = touchesPositions;
        // If a move was initiated at some point and we get back to startpoint,
        // we should still consider that we did move (which also happens after a
        // multiple touch when only one touch remains in which case handleStart
        // is recalled within handleLeave).
        // Now, some mobile browsers report zero-distance moves so we also check that
        // one of the touches did actually move from the origin position.
        this.hasMoved || (this.hasMoved = touchesPositions.some(function (position, idx) {
            var startPosition = _this.startTouchesPositions[idx];
            return position.x !== startPosition.x || position.y !== startPosition.y;
        }));
        // If there was no move, do not trigger touch moves behavior
        if (!this.hasMoved) {
            return;
        }
        this.isMoving = true;
        if (this.movingTimeout)
            clearTimeout(this.movingTimeout);
        this.movingTimeout = window.setTimeout(function () {
            _this.isMoving = false;
        }, DRAG_TIMEOUT);
        var camera = this.renderer.getCamera();
        var startCameraState = this.startCameraState;
        switch (this.touchMode) {
            case 1: {
                var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;
                var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]), x = _c.x, y = _c.y;
                camera.setState({
                    x: startCameraState.x + xStart - x,
                    y: startCameraState.y + yStart - y,
                });
                break;
            }
            case 2: {
                /**
                 * Here is the thinking here:
                 *
                 * 1. We can find the new angle and ratio, by comparing the vector from "touch one" to "touch two" at the start
                 *    of the d'n'd and now
                 *
                 * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph
                 *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport
                 *    position of this same touch now
                 */
                var newCameraState = {};
                var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;
                var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;
                var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;
                var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;
                // 1.
                var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);
                newCameraState.ratio = newRatio;
                newCameraState.angle = startCameraState.angle + angleDiff;
                // 2.
                var dimensions = this.getDimensions();
                var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], { cameraState: startCameraState });
                var smallestDimension = Math.min(dimensions.width, dimensions.height);
                var dx = smallestDimension / dimensions.width;
                var dy = smallestDimension / dimensions.height;
                var ratio = newRatio / smallestDimension;
                // Align with center of the graph:
                var x = x0 - smallestDimension / 2 / dx;
                var y = y0 - smallestDimension / 2 / dy;
                // Rotate:
                _a = __read([
                    x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),
                    y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle),
                ], 2), x = _a[0], y = _a[1];
                newCameraState.x = touchGraphPosition.x - x * ratio;
                newCameraState.y = touchGraphPosition.y + y * ratio;
                camera.setState(newCameraState);
                break;
            }
        }
        this.emit("touchmove", (0, captor_1.getTouchCoords)(e, this.container));
    };
    return TouchCaptor;
}(captor_1.default));
exports.default = TouchCaptor;

},{"./captor":7}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;
/**
 * Class representing a single candidate for the label grid selection.
 *
 * It also describes a deterministic way to compare two candidates to assess
 * which one is better.
 */
var LabelCandidate = /** @class */ (function () {
    function LabelCandidate(key, size) {
        this.key = key;
        this.size = size;
    }
    LabelCandidate.compare = function (first, second) {
        // First we compare by size
        if (first.size > second.size)
            return -1;
        if (first.size < second.size)
            return 1;
        // Then since no two nodes can have the same key, we use it to
        // deterministically tie-break by key
        if (first.key > second.key)
            return 1;
        // NOTE: this comparator cannot return 0
        return -1;
    };
    return LabelCandidate;
}());
/**
 * Class representing a 2D spatial grid divided into constant-size cells.
 */
var LabelGrid = /** @class */ (function () {
    function LabelGrid() {
        this.width = 0;
        this.height = 0;
        this.cellSize = 0;
        this.columns = 0;
        this.rows = 0;
        this.cells = {};
    }
    LabelGrid.prototype.resizeAndClear = function (dimensions, cellSize) {
        this.width = dimensions.width;
        this.height = dimensions.height;
        this.cellSize = cellSize;
        this.columns = Math.ceil(dimensions.width / cellSize);
        this.rows = Math.ceil(dimensions.height / cellSize);
        this.cells = {};
    };
    LabelGrid.prototype.getIndex = function (pos) {
        var xIndex = Math.floor(pos.x / this.cellSize);
        var yIndex = Math.floor(pos.y / this.cellSize);
        return yIndex * this.columns + xIndex;
    };
    LabelGrid.prototype.add = function (key, size, pos) {
        var candidate = new LabelCandidate(key, size);
        var index = this.getIndex(pos);
        var cell = this.cells[index];
        if (!cell) {
            cell = [];
            this.cells[index] = cell;
        }
        cell.push(candidate);
    };
    LabelGrid.prototype.organize = function () {
        for (var k in this.cells) {
            var cell = this.cells[k];
            cell.sort(LabelCandidate.compare);
        }
    };
    LabelGrid.prototype.getLabelsToDisplay = function (ratio, density) {
        // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?
        // TODO: adjust threshold lower, but increase cells a bit?
        // TODO: hunt for geom issue in disguise
        // TODO: memoize while ratio does not move. method to force recompute
        var cellArea = this.cellSize * this.cellSize;
        var scaledCellArea = cellArea / ratio / ratio;
        var scaledDensity = (scaledCellArea * density) / cellArea;
        var labelsToDisplayPerCell = Math.ceil(scaledDensity);
        var labels = [];
        for (var k in this.cells) {
            var cell = this.cells[k];
            for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {
                labels.push(cell[i].key);
            }
        }
        return labels;
    };
    return LabelGrid;
}());
exports.LabelGrid = LabelGrid;
/**
 * Label heuristic selecting edge labels to display, based on displayed node
 * labels
 *
 * @param  {object} params                 - Parameters:
 * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.
 * @param  {Set}      highlightedNodes     - Highlighted nodes.
 * @param  {Graph}    graph                - The rendered graph.
 * @param  {string}   hoveredNode          - Hovered node (optional)
 * @return {Array}                         - The selected labels.
 */
function edgeLabelsToDisplayFromNodes(params) {
    var graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;
    var worthyEdges = [];
    // TODO: the code below can be optimized using #.forEach and batching the code per adj
    // We should display an edge's label if:
    //   - Any of its extremities is highlighted or hovered
    //   - Both of its extremities has its label shown
    graph.forEachEdge(function (edge, _, source, target) {
        if (source === hoveredNode ||
            target === hoveredNode ||
            highlightedNodes.has(source) ||
            highlightedNodes.has(target) ||
            (displayedNodeLabels.has(source) && displayedNodeLabels.has(target))) {
            worthyEdges.push(edge);
        }
    });
    return worthyEdges;
}
exports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;

},{}],11:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;
/**
 * Sigma.js Quad Tree Class
 * =========================
 *
 * Class implementing the quad tree data structure used to solve hovers and
 * determine which elements are currently in the scope of the camera so that
 * we don't waste time rendering things the user cannot see anyway.
 * @module
 */
/* eslint no-nested-ternary: 0 */
/* eslint no-constant-condition: 0 */
var extend_1 = __importDefault(require("@yomguithereal/helpers/extend"));
/**
 * Notes:
 *
 *   - a square can be represented as topleft + width, saying for the quad blocks,
 *     to reduce overall memory usage (which is already pretty low).
 *   - this implementation of a quadtree is often called a MX-CIF quadtree.
 *   - we could explore spatial hashing (hilbert quadtrees, notably).
 */
/**
 * Constants.
 *
 * Note that since we are representing a static 4-ary tree, the indices of the
 * quadrants are the following:
 *   - TOP_LEFT:     4i + b
 *   - TOP_RIGHT:    4i + 2b
 *   - BOTTOM_LEFT:  4i + 3b
 *   - BOTTOM_RIGHT: 4i + 4b
 */
var BLOCKS = 4;
var MAX_LEVEL = 5;
// Outside block is max block index + 1, i.e.:
// BLOCKS * ((4 * (4 ** MAX_LEVEL) - 1) / 3)
var OUTSIDE_BLOCK = 5460;
var X_OFFSET = 0;
var Y_OFFSET = 1;
var WIDTH_OFFSET = 2;
var HEIGHT_OFFSET = 3;
var TOP_LEFT = 1;
var TOP_RIGHT = 2;
var BOTTOM_LEFT = 3;
var BOTTOM_RIGHT = 4;
var hasWarnedTooMuchOutside = false;
/**
 * Geometry helpers.
 */
/**
 * Function returning whether the given rectangle is axis-aligned.
 *
 * @param  {Rectangle} rect
 * @return {boolean}
 */
function isRectangleAligned(rect) {
    return rect.x1 === rect.x2 || rect.y1 === rect.y2;
}
exports.isRectangleAligned = isRectangleAligned;
/**
 * Function returning the smallest rectangle that contains the given rectangle, and that is aligned with the axis.
 *
 * @param {Rectangle} rect
 * @return {Rectangle}
 */
function getCircumscribedAlignedRectangle(rect) {
    var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));
    var heightVector = {
        x: ((rect.y1 - rect.y2) * rect.height) / width,
        y: ((rect.x2 - rect.x1) * rect.height) / width,
    };
    // Compute all corners:
    var tl = { x: rect.x1, y: rect.y1 };
    var tr = { x: rect.x2, y: rect.y2 };
    var bl = {
        x: rect.x1 + heightVector.x,
        y: rect.y1 + heightVector.y,
    };
    var br = {
        x: rect.x2 + heightVector.x,
        y: rect.y2 + heightVector.y,
    };
    var xL = Math.min(tl.x, tr.x, bl.x, br.x);
    var xR = Math.max(tl.x, tr.x, bl.x, br.x);
    var yT = Math.min(tl.y, tr.y, bl.y, br.y);
    var yB = Math.max(tl.y, tr.y, bl.y, br.y);
    return {
        x1: xL,
        y1: yT,
        x2: xR,
        y2: yT,
        height: yB - yT,
    };
}
exports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;
/**
 *
 * @param x1
 * @param y1
 * @param w
 * @param qx
 * @param qy
 * @param qw
 * @param qh
 */
function squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {
    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;
}
exports.squareCollidesWithQuad = squareCollidesWithQuad;
function rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {
    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;
}
exports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;
function pointIsInQuad(x, y, qx, qy, qw, qh) {
    var xmp = qx + qw / 2, ymp = qy + qh / 2, top = y < ymp, left = x < xmp;
    return top ? (left ? TOP_LEFT : TOP_RIGHT) : left ? BOTTOM_LEFT : BOTTOM_RIGHT;
}
/**
 * Helper functions that are not bound to the class so an external user
 * cannot mess with them.
 */
function buildQuadrants(maxLevel, data) {
    // [block, level]
    var stack = [0, 0];
    while (stack.length) {
        var level = stack.pop(), block = stack.pop();
        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;
        var x = data[block + X_OFFSET], y = data[block + Y_OFFSET], width = data[block + WIDTH_OFFSET], height = data[block + HEIGHT_OFFSET], hw = width / 2, hh = height / 2;
        data[topLeftBlock + X_OFFSET] = x;
        data[topLeftBlock + Y_OFFSET] = y;
        data[topLeftBlock + WIDTH_OFFSET] = hw;
        data[topLeftBlock + HEIGHT_OFFSET] = hh;
        data[topRightBlock + X_OFFSET] = x + hw;
        data[topRightBlock + Y_OFFSET] = y;
        data[topRightBlock + WIDTH_OFFSET] = hw;
        data[topRightBlock + HEIGHT_OFFSET] = hh;
        data[bottomLeftBlock + X_OFFSET] = x;
        data[bottomLeftBlock + Y_OFFSET] = y + hh;
        data[bottomLeftBlock + WIDTH_OFFSET] = hw;
        data[bottomLeftBlock + HEIGHT_OFFSET] = hh;
        data[bottomRightBlock + X_OFFSET] = x + hw;
        data[bottomRightBlock + Y_OFFSET] = y + hh;
        data[bottomRightBlock + WIDTH_OFFSET] = hw;
        data[bottomRightBlock + HEIGHT_OFFSET] = hh;
        if (level < maxLevel - 1) {
            stack.push(bottomRightBlock, level + 1);
            stack.push(bottomLeftBlock, level + 1);
            stack.push(topRightBlock, level + 1);
            stack.push(topLeftBlock, level + 1);
        }
    }
}
function insertNode(maxLevel, data, containers, key, x, y, size) {
    var x1 = x - size, y1 = y - size, w = size * 2;
    var level = 0, block = 0;
    while (true) {
        // If we reached max level
        if (level >= maxLevel) {
            containers[block] = containers[block] || [];
            containers[block].push(key);
            return;
        }
        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;
        var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);
        var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);
        var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);
        var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);
        var collisions = [
            collidingWithTopLeft,
            collidingWithTopRight,
            collidingWithBottomLeft,
            collidingWithBottomRight,
        ].reduce(function (acc, current) {
            if (current)
                return acc + 1;
            else
                return acc;
        }, 0);
        // If we have no collision at root level, inject node in the outside block
        if (collisions === 0 && level === 0) {
            containers[OUTSIDE_BLOCK].push(key);
            if (!hasWarnedTooMuchOutside && containers[OUTSIDE_BLOCK].length >= 5) {
                hasWarnedTooMuchOutside = true;
                console.warn("sigma/quadtree.insertNode: At least 5 nodes are outside the global quadtree zone. " +
                    "You might have a problem with the normalization function or the custom bounding box.");
            }
            return;
        }
        // If we don't have at least a collision but deeper, there is an issue
        if (collisions === 0)
            throw new Error("sigma/quadtree.insertNode: no collision (level: ".concat(level, ", key: ").concat(key, ", x: ").concat(x, ", y: ").concat(y, ", size: ").concat(size, ")."));
        // If we have 3 collisions, we have a geometry problem obviously
        if (collisions === 3)
            throw new Error("sigma/quadtree.insertNode: 3 impossible collisions (level: ".concat(level, ", key: ").concat(key, ", x: ").concat(x, ", y: ").concat(y, ", size: ").concat(size, ")."));
        // If we have more that one collision, we stop here and store the node
        // in the relevant containers
        if (collisions > 1) {
            containers[block] = containers[block] || [];
            containers[block].push(key);
            return;
        }
        else {
            level++;
        }
        // Else we recurse into the correct quads
        if (collidingWithTopLeft)
            block = topLeftBlock;
        if (collidingWithTopRight)
            block = topRightBlock;
        if (collidingWithBottomLeft)
            block = bottomLeftBlock;
        if (collidingWithBottomRight)
            block = bottomRightBlock;
    }
}
function getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {
    // [block, level]
    var stack = [0, 0];
    var collectedNodes = [];
    var container;
    while (stack.length) {
        var level = stack.pop(), block = stack.pop();
        // Collecting nodes
        container = containers[block];
        if (container)
            (0, extend_1.default)(collectedNodes, container);
        // If we reached max level
        if (level >= maxLevel)
            continue;
        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;
        var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);
        var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);
        var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);
        var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);
        if (collidingWithTopLeft)
            stack.push(topLeftBlock, level + 1);
        if (collidingWithTopRight)
            stack.push(topRightBlock, level + 1);
        if (collidingWithBottomLeft)
            stack.push(bottomLeftBlock, level + 1);
        if (collidingWithBottomRight)
            stack.push(bottomRightBlock, level + 1);
    }
    return collectedNodes;
}
/**
 * QuadTree class.
 *
 * @constructor
 * @param {object} boundaries - The graph boundaries.
 */
var QuadTree = /** @class */ (function () {
    function QuadTree(params) {
        var _a;
        if (params === void 0) { params = {}; }
        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);
        this.cache = null;
        this.lastRectangle = null;
        // Allocating the underlying byte array
        var L = Math.pow(4, MAX_LEVEL);
        this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));
        if (params.boundaries)
            this.resize(params.boundaries);
        else
            this.resize({
                x: 0,
                y: 0,
                width: 1,
                height: 1,
            });
    }
    QuadTree.prototype.add = function (key, x, y, size) {
        insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);
        return this;
    };
    QuadTree.prototype.resize = function (boundaries) {
        this.clear();
        // Building the quadrants
        this.data[X_OFFSET] = boundaries.x;
        this.data[Y_OFFSET] = boundaries.y;
        this.data[WIDTH_OFFSET] = boundaries.width;
        this.data[HEIGHT_OFFSET] = boundaries.height;
        buildQuadrants(MAX_LEVEL, this.data);
    };
    QuadTree.prototype.clear = function () {
        var _a;
        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);
        return this;
    };
    QuadTree.prototype.point = function (x, y) {
        var nodes = this.containers[OUTSIDE_BLOCK].slice();
        var block = 0, level = 0;
        do {
            if (this.containers[block])
                (0, extend_1.default)(nodes, this.containers[block]);
            var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);
            block = 4 * block + quad * BLOCKS;
            level++;
        } while (level <= MAX_LEVEL);
        return nodes;
    };
    QuadTree.prototype.rectangle = function (x1, y1, x2, y2, height) {
        var lr = this.lastRectangle;
        if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {
            return this.cache;
        }
        this.lastRectangle = {
            x1: x1,
            y1: y1,
            x2: x2,
            y2: y2,
            height: height,
        };
        // If the rectangle is shifted, we use the smallest aligned rectangle that contains the shifted one:
        if (!isRectangleAligned(this.lastRectangle))
            this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);
        this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);
        // Add all the nodes in the outside block, since they might be relevant, and since they should be very few:
        (0, extend_1.default)(this.cache, this.containers[OUTSIDE_BLOCK]);
        return this.cache;
    };
    return QuadTree;
}());
exports.default = QuadTree;

},{"@yomguithereal/helpers/extend":3}],12:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sigma = exports.MouseCaptor = exports.QuadTree = exports.Camera = void 0;
/**
 * Sigma.js Library Endpoint
 * =========================
 *
 * The library endpoint.
 * @module
 */
var sigma_1 = __importDefault(require("./sigma"));
exports.Sigma = sigma_1.default;
var camera_1 = __importDefault(require("./core/camera"));
exports.Camera = camera_1.default;
var quadtree_1 = __importDefault(require("./core/quadtree"));
exports.QuadTree = quadtree_1.default;
var mouse_1 = __importDefault(require("./core/captors/mouse"));
exports.MouseCaptor = mouse_1.default;
exports.default = sigma_1.default;

},{"./core/camera":6,"./core/captors/mouse":8,"./core/quadtree":11,"./sigma":33}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {
    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute
        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || "#000"
        : settings.edgeLabelColor.color;
    var label = edgeData.label;
    if (!label)
        return;
    context.fillStyle = color;
    context.font = "".concat(weight, " ").concat(size, "px ").concat(font);
    // Computing positions without considering nodes sizes:
    var sSize = sourceData.size;
    var tSize = targetData.size;
    var sx = sourceData.x;
    var sy = sourceData.y;
    var tx = targetData.x;
    var ty = targetData.y;
    var cx = (sx + tx) / 2;
    var cy = (sy + ty) / 2;
    var dx = tx - sx;
    var dy = ty - sy;
    var d = Math.sqrt(dx * dx + dy * dy);
    if (d < sSize + tSize)
        return;
    // Adding nodes sizes:
    sx += (dx * sSize) / d;
    sy += (dy * sSize) / d;
    tx -= (dx * tSize) / d;
    ty -= (dy * tSize) / d;
    cx = (sx + tx) / 2;
    cy = (sy + ty) / 2;
    dx = tx - sx;
    dy = ty - sy;
    d = Math.sqrt(dx * dx + dy * dy);
    // Handling ellipsis
    var textLength = context.measureText(label).width;
    if (textLength > d) {
        var ellipsis = "…";
        label = label + ellipsis;
        textLength = context.measureText(label).width;
        while (textLength > d && label.length > 1) {
            label = label.slice(0, -2) + ellipsis;
            textLength = context.measureText(label).width;
        }
        if (label.length < 4)
            return;
    }
    var angle;
    if (dx > 0) {
        if (dy > 0)
            angle = Math.acos(dx / d);
        else
            angle = Math.asin(dy / d);
    }
    else {
        if (dy > 0)
            angle = Math.acos(dx / d) + Math.PI;
        else
            angle = Math.asin(dx / d) + Math.PI / 2;
    }
    context.save();
    context.translate(cx, cy);
    context.rotate(angle);
    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);
    context.restore();
}
exports.default = drawEdgeLabel;

},{}],14:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var label_1 = __importDefault(require("./label"));
/**
 * Draw an hovered node.
 * - if there is no label => display a shadow on the node
 * - if the label box is bigger than node size => display a label box that contains the node with a shadow
 * - else node with shadow and the label box
 */
function drawHover(context, data, settings) {
    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;
    context.font = "".concat(weight, " ").concat(size, "px ").concat(font);
    // Then we draw the label background
    context.fillStyle = "#FFF";
    context.shadowOffsetX = 0;
    context.shadowOffsetY = 0;
    context.shadowBlur = 8;
    context.shadowColor = "#000";
    var PADDING = 2;
    if (typeof data.label === "string") {
        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;
        var angleRadian = Math.asin(boxHeight / 2 / radius);
        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));
        context.beginPath();
        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);
        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);
        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);
        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);
        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);
        context.closePath();
        context.fill();
    }
    else {
        context.beginPath();
        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);
        context.closePath();
        context.fill();
    }
    context.shadowOffsetX = 0;
    context.shadowOffsetY = 0;
    context.shadowBlur = 0;
    // And finally we draw the label
    (0, label_1.default)(context, data, settings);
}
exports.default = drawHover;

},{"./label":15}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function drawLabel(context, data, settings) {
    if (!data.label)
        return;
    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute
        ? data[settings.labelColor.attribute] || settings.labelColor.color || "#000"
        : settings.labelColor.color;
    context.fillStyle = color;
    context.font = "".concat(weight, " ").concat(size, "px ").concat(font);
    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);
}
exports.default = drawLabel;

},{}],16:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.createEdgeCompoundProgram = exports.EdgeProgram = exports.AbstractEdgeProgram = void 0;
var program_1 = require("./program");
var AbstractEdgeProgram = /** @class */ (function (_super) {
    __extends(AbstractEdgeProgram, _super);
    function AbstractEdgeProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AbstractEdgeProgram;
}(program_1.AbstractProgram));
exports.AbstractEdgeProgram = AbstractEdgeProgram;
var EdgeProgram = /** @class */ (function (_super) {
    __extends(EdgeProgram, _super);
    function EdgeProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EdgeProgram.prototype.process = function (offset, sourceData, targetData, data) {
        var i = offset * this.STRIDE;
        // NOTE: dealing with hidden items automatically
        if (data.hidden || sourceData.hidden || targetData.hidden) {
            for (var l = i + this.STRIDE; i < l; i++) {
                this.array[i] = 0;
            }
            return;
        }
        return this.processVisibleItem(i, sourceData, targetData, data);
    };
    return EdgeProgram;
}(program_1.Program));
exports.EdgeProgram = EdgeProgram;
/**
 * Helper function combining two or more programs into a single compound one.
 * Note that this is more a quick & easy way to combine program than a really
 * performant option. More performant programs can be written entirely.
 *
 * @param  {array}    programClasses - Program classes to combine.
 * @return {function}
 */
function createEdgeCompoundProgram(programClasses) {
    return /** @class */ (function () {
        function EdgeCompoundProgram(gl, renderer) {
            this.programs = programClasses.map(function (Program) {
                return new Program(gl, renderer);
            });
        }
        EdgeCompoundProgram.prototype.reallocate = function (capacity) {
            this.programs.forEach(function (program) { return program.reallocate(capacity); });
        };
        EdgeCompoundProgram.prototype.process = function (offset, sourceData, targetData, data) {
            this.programs.forEach(function (program) { return program.process(offset, sourceData, targetData, data); });
        };
        EdgeCompoundProgram.prototype.render = function (params) {
            this.programs.forEach(function (program) { return program.render(params); });
        };
        return EdgeCompoundProgram;
    }());
}
exports.createEdgeCompoundProgram = createEdgeCompoundProgram;

},{"./program":18}],17:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNodeCompoundProgram = exports.NodeProgram = exports.AbstractNodeProgram = void 0;
var program_1 = require("./program");
var AbstractNodeProgram = /** @class */ (function (_super) {
    __extends(AbstractNodeProgram, _super);
    function AbstractNodeProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AbstractNodeProgram;
}(program_1.AbstractProgram));
exports.AbstractNodeProgram = AbstractNodeProgram;
var NodeProgram = /** @class */ (function (_super) {
    __extends(NodeProgram, _super);
    function NodeProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NodeProgram.prototype.process = function (offset, data) {
        var i = offset * this.STRIDE;
        // NOTE: dealing with hidden items automatically
        if (data.hidden) {
            for (var l = i + this.STRIDE; i < l; i++) {
                this.array[i] = 0;
            }
            return;
        }
        return this.processVisibleItem(i, data);
    };
    return NodeProgram;
}(program_1.Program));
exports.NodeProgram = NodeProgram;
/**
 * Helper function combining two or more programs into a single compound one.
 * Note that this is more a quick & easy way to combine program than a really
 * performant option. More performant programs can be written entirely.
 *
 * @param  {array}    programClasses - Program classes to combine.
 * @return {function}
 */
function createNodeCompoundProgram(programClasses) {
    return /** @class */ (function () {
        function NodeCompoundProgram(gl, renderer) {
            this.programs = programClasses.map(function (Program) {
                return new Program(gl, renderer);
            });
        }
        NodeCompoundProgram.prototype.reallocate = function (capacity) {
            this.programs.forEach(function (program) { return program.reallocate(capacity); });
        };
        NodeCompoundProgram.prototype.process = function (offset, data) {
            this.programs.forEach(function (program) { return program.process(offset, data); });
        };
        NodeCompoundProgram.prototype.render = function (params) {
            this.programs.forEach(function (program) { return program.render(params); });
        };
        return NodeCompoundProgram;
    }());
}
exports.createNodeCompoundProgram = createNodeCompoundProgram;

},{"./program":18}],18:[function(require,module,exports){
"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Program = exports.AbstractProgram = void 0;
var utils_1 = require("../../../../utils");
var utils_2 = require("../../shaders/utils");
var SIZE_FACTOR_PER_ATTRIBUTE_TYPE = (_a = {},
    _a[WebGL2RenderingContext.BOOL] = 1,
    _a[WebGL2RenderingContext.BYTE] = 1,
    _a[WebGL2RenderingContext.UNSIGNED_BYTE] = 1,
    _a[WebGL2RenderingContext.SHORT] = 2,
    _a[WebGL2RenderingContext.UNSIGNED_SHORT] = 2,
    _a[WebGL2RenderingContext.INT] = 4,
    _a[WebGL2RenderingContext.UNSIGNED_INT] = 4,
    _a[WebGL2RenderingContext.FLOAT] = 4,
    _a);
var AbstractProgram = /** @class */ (function () {
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    function AbstractProgram(_gl, _renderer) {
    }
    return AbstractProgram;
}());
exports.AbstractProgram = AbstractProgram;
var Program = /** @class */ (function () {
    function Program(gl, renderer) {
        var _this = this;
        this.array = new Float32Array();
        this.indicesArray = null;
        this.uniformLocations = {};
        this.attributeLocations = {};
        this.capacity = 0;
        this.verticesCount = 0;
        // Reading program definition
        var definition = this.getDefinition();
        this.VERTICES = definition.VERTICES;
        this.ARRAY_ITEMS_PER_VERTEX = definition.ARRAY_ITEMS_PER_VERTEX;
        this.VERTEX_SHADER_SOURCE = definition.VERTEX_SHADER_SOURCE;
        this.FRAGMENT_SHADER_SOURCE = definition.FRAGMENT_SHADER_SOURCE;
        this.UNIFORMS = definition.UNIFORMS;
        this.ATTRIBUTES = definition.ATTRIBUTES;
        // Computing stride
        this.STRIDE = this.VERTICES * this.ARRAY_ITEMS_PER_VERTEX;
        // Members
        this.gl = gl;
        this.renderer = renderer;
        // Webgl buffers
        var buffer = gl.createBuffer();
        if (buffer === null)
            throw new Error("Program: error while creating the webgl buffer.");
        this.buffer = buffer;
        var indicesBuffer = gl.createBuffer();
        if (indicesBuffer === null)
            throw new Error("Program: error while creating the webgl indices buffer.");
        this.indicesBuffer = indicesBuffer;
        // Shaders and program
        this.vertexShader = (0, utils_2.loadVertexShader)(this.gl, this.VERTEX_SHADER_SOURCE);
        this.fragmentShader = (0, utils_2.loadFragmentShader)(this.gl, this.FRAGMENT_SHADER_SOURCE);
        this.program = (0, utils_2.loadProgram)(this.gl, [this.vertexShader, this.fragmentShader]);
        // Indices
        this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(this.gl);
        this.indicesType = this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;
        this.IndicesArray = this.canUse32BitsIndices ? Uint32Array : Uint16Array;
        // Initializing locations
        this.UNIFORMS.forEach(function (uniformName) {
            var location = _this.gl.getUniformLocation(_this.program, uniformName);
            if (location === null)
                throw new Error("Program: error while getting location for uniform \"".concat(uniformName, "\"."));
            _this.uniformLocations[uniformName] = location;
        });
        this.ATTRIBUTES.forEach(function (attr) {
            var location = _this.gl.getAttribLocation(_this.program, attr.name);
            if (location === -1)
                throw new Error("Program: error while getting location for attribute \"".concat(attr.name, "\"."));
            _this.attributeLocations[attr.name] = location;
        });
    }
    Program.prototype.bind = function () {
        var _this = this;
        var gl = this.gl;
        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);
        if (this.indicesArray) {
            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);
        }
        for (var attributeName in this.attributeLocations) {
            gl.enableVertexAttribArray(this.attributeLocations[attributeName]);
        }
        var offset = 0;
        this.ATTRIBUTES.forEach(function (attr) {
            var location = _this.attributeLocations[attr.name];
            gl.vertexAttribPointer(location, attr.size, attr.type, attr.normalized || false, _this.ARRAY_ITEMS_PER_VERTEX * Float32Array.BYTES_PER_ELEMENT, offset);
            var sizeFactor = SIZE_FACTOR_PER_ATTRIBUTE_TYPE[attr.type];
            if (typeof sizeFactor !== "number")
                throw new Error("Program.bind: yet unsupported attribute type \"".concat(attr.type, "\"!"));
            offset += attr.size * sizeFactor;
        });
    };
    Program.prototype.bufferData = function () {
        var gl = this.gl;
        this.gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);
        if (this.indicesArray) {
            this.gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);
        }
    };
    // NOTE: implementing `reallocateIndices` is optional
    Program.prototype.reallocateIndices = function () {
        return;
    };
    Program.prototype.reallocate = function (capacity) {
        // If desired capacity has not changed we do nothing
        // NOTE: it's possible here to implement more subtle reallocation schemes
        // when the number of rendered items increase or decrease
        if (capacity === this.capacity)
            return;
        this.capacity = capacity;
        this.verticesCount = this.VERTICES * capacity;
        this.array = new Float32Array(this.verticesCount * this.ARRAY_ITEMS_PER_VERTEX);
        if (typeof this.reallocateIndices === "function")
            this.reallocateIndices();
    };
    Program.prototype.hasNothingToRender = function () {
        return this.verticesCount === 0;
    };
    Program.prototype.render = function (params) {
        if (this.hasNothingToRender())
            return;
        this.bind();
        this.bufferData();
        this.gl.useProgram(this.program);
        this.draw(params);
    };
    return Program;
}());
exports.Program = Program;

},{"../../../../utils":39,"../../shaders/utils":31}],19:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Sigma.js WebGL Renderer Edge Arrow Program
 * ===========================================
 *
 * Compound program rendering edges as an arrow from the source to the target.
 * @module
 */
var edge_1 = require("./common/edge");
var edge_arrowHead_1 = __importDefault(require("./edge.arrowHead"));
var edge_clamped_1 = __importDefault(require("./edge.clamped"));
var EdgeArrowProgram = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrowHead_1.default]);
exports.default = EdgeArrowProgram;

},{"./common/edge":16,"./edge.arrowHead":20,"./edge.clamped":21}],20:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../../../utils");
var edge_1 = require("./common/edge");
var edge_arrowHead_vert_glsl_1 = __importDefault(require("../shaders/edge.arrowHead.vert.glsl.js"));
var edge_arrowHead_frag_glsl_1 = __importDefault(require("../shaders/edge.arrowHead.frag.glsl.js"));
var UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;
var UNIFORMS = ["u_matrix", "u_sizeRatio", "u_correctionRatio"];
var EdgeArrowHeadProgram = /** @class */ (function (_super) {
    __extends(EdgeArrowHeadProgram, _super);
    function EdgeArrowHeadProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EdgeArrowHeadProgram.prototype.getDefinition = function () {
        return {
            VERTICES: 3,
            ARRAY_ITEMS_PER_VERTEX: 9,
            VERTEX_SHADER_SOURCE: edge_arrowHead_vert_glsl_1.default,
            FRAGMENT_SHADER_SOURCE: edge_arrowHead_frag_glsl_1.default,
            UNIFORMS: UNIFORMS,
            ATTRIBUTES: [
                { name: "a_position", size: 2, type: FLOAT },
                { name: "a_normal", size: 2, type: FLOAT },
                { name: "a_radius", size: 1, type: FLOAT },
                { name: "a_color", size: 4, type: UNSIGNED_BYTE, normalized: true },
                { name: "a_barycentric", size: 3, type: FLOAT },
            ],
        };
    };
    EdgeArrowHeadProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {
        var thickness = data.size || 1;
        var radius = targetData.size || 1;
        var x1 = sourceData.x;
        var y1 = sourceData.y;
        var x2 = targetData.x;
        var y2 = targetData.y;
        var color = (0, utils_1.floatColor)(data.color);
        // Computing normals
        var dx = x2 - x1;
        var dy = y2 - y1;
        var len = dx * dx + dy * dy;
        var n1 = 0;
        var n2 = 0;
        if (len) {
            len = 1 / Math.sqrt(len);
            n1 = -dy * len * thickness;
            n2 = dx * len * thickness;
        }
        var array = this.array;
        // First point
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = radius;
        array[i++] = color;
        array[i++] = 1;
        array[i++] = 0;
        array[i++] = 0;
        // Second point
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = radius;
        array[i++] = color;
        array[i++] = 0;
        array[i++] = 1;
        array[i++] = 0;
        // Third point
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = radius;
        array[i++] = color;
        array[i++] = 0;
        array[i++] = 0;
        array[i] = 1;
    };
    EdgeArrowHeadProgram.prototype.draw = function (params) {
        var gl = this.gl;
        var _a = this.uniformLocations, u_matrix = _a.u_matrix, u_sizeRatio = _a.u_sizeRatio, u_correctionRatio = _a.u_correctionRatio;
        gl.uniformMatrix3fv(u_matrix, false, params.matrix);
        gl.uniform1f(u_sizeRatio, params.sizeRatio);
        gl.uniform1f(u_correctionRatio, params.correctionRatio);
        gl.drawArrays(gl.TRIANGLES, 0, this.verticesCount);
    };
    return EdgeArrowHeadProgram;
}(edge_1.EdgeProgram));
exports.default = EdgeArrowHeadProgram;

},{"../../../utils":39,"../shaders/edge.arrowHead.frag.glsl.js":24,"../shaders/edge.arrowHead.vert.glsl.js":25,"./common/edge":16}],21:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Sigma.js WebGL Renderer Edge Program
 * =====================================
 *
 * Program rendering edges as thick lines but with a twist: the end of edge
 * does not sit in the middle of target node but instead stays by some margin.
 *
 * This is useful when combined with arrows to draw directed edges.
 * @module
 */
var edge_rectangle_1 = __importDefault(require("./edge.rectangle"));
var edge_clamped_vert_glsl_1 = __importDefault(require("../shaders/edge.clamped.vert.glsl.js"));
var utils_1 = require("../../../utils");
var UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;
var EdgeClampedProgram = /** @class */ (function (_super) {
    __extends(EdgeClampedProgram, _super);
    function EdgeClampedProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EdgeClampedProgram.prototype.getDefinition = function () {
        return __assign(__assign({}, _super.prototype.getDefinition.call(this)), { ARRAY_ITEMS_PER_VERTEX: 6, VERTEX_SHADER_SOURCE: edge_clamped_vert_glsl_1.default, ATTRIBUTES: [
                { name: "a_position", size: 2, type: FLOAT },
                { name: "a_normal", size: 2, type: FLOAT },
                { name: "a_color", size: 4, type: UNSIGNED_BYTE, normalized: true },
                { name: "a_radius", size: 1, type: FLOAT },
            ] });
    };
    EdgeClampedProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {
        var thickness = data.size || 1;
        var x1 = sourceData.x;
        var y1 = sourceData.y;
        var x2 = targetData.x;
        var y2 = targetData.y;
        var color = (0, utils_1.floatColor)(data.color);
        // Computing normals
        var dx = x2 - x1;
        var dy = y2 - y1;
        var radius = targetData.size || 1;
        var len = dx * dx + dy * dy;
        var n1 = 0;
        var n2 = 0;
        if (len) {
            len = 1 / Math.sqrt(len);
            n1 = -dy * len * thickness;
            n2 = dx * len * thickness;
        }
        var array = this.array;
        // First point
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        array[i++] = 0;
        // First point flipped
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = color;
        array[i++] = 0;
        // Second point
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        array[i++] = radius;
        // Second point flipped
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = color;
        array[i] = -radius;
    };
    return EdgeClampedProgram;
}(edge_rectangle_1.default));
exports.default = EdgeClampedProgram;

},{"../../../utils":39,"../shaders/edge.clamped.vert.glsl.js":26,"./edge.rectangle":22}],22:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../../../utils");
var edge_1 = require("./common/edge");
var edge_rectangle_vert_glsl_1 = __importDefault(require("../shaders/edge.rectangle.vert.glsl.js"));
var edge_rectangle_frag_glsl_1 = __importDefault(require("../shaders/edge.rectangle.frag.glsl.js"));
var UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;
var UNIFORMS = ["u_matrix", "u_zoomRatio", "u_sizeRatio", "u_correctionRatio"];
var EdgeRectangleProgram = /** @class */ (function (_super) {
    __extends(EdgeRectangleProgram, _super);
    function EdgeRectangleProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EdgeRectangleProgram.prototype.getDefinition = function () {
        return {
            VERTICES: 4,
            ARRAY_ITEMS_PER_VERTEX: 5,
            VERTEX_SHADER_SOURCE: edge_rectangle_vert_glsl_1.default,
            FRAGMENT_SHADER_SOURCE: edge_rectangle_frag_glsl_1.default,
            UNIFORMS: UNIFORMS,
            ATTRIBUTES: [
                { name: "a_position", size: 2, type: FLOAT },
                { name: "a_normal", size: 2, type: FLOAT },
                { name: "a_color", size: 4, type: UNSIGNED_BYTE, normalized: true },
            ],
        };
    };
    EdgeRectangleProgram.prototype.reallocateIndices = function () {
        var l = this.verticesCount;
        var size = l + l / 2;
        var indices = new this.IndicesArray(size);
        for (var i = 0, c = 0; i < l; i += 4) {
            indices[c++] = i;
            indices[c++] = i + 1;
            indices[c++] = i + 2;
            indices[c++] = i + 2;
            indices[c++] = i + 1;
            indices[c++] = i + 3;
        }
        this.indicesArray = indices;
    };
    EdgeRectangleProgram.prototype.processVisibleItem = function (i, sourceData, targetData, data) {
        var thickness = data.size || 1;
        var x1 = sourceData.x;
        var y1 = sourceData.y;
        var x2 = targetData.x;
        var y2 = targetData.y;
        var color = (0, utils_1.floatColor)(data.color);
        // Computing normals
        var dx = x2 - x1;
        var dy = y2 - y1;
        var len = dx * dx + dy * dy;
        var n1 = 0;
        var n2 = 0;
        if (len) {
            len = 1 / Math.sqrt(len);
            n1 = -dy * len * thickness;
            n2 = dx * len * thickness;
        }
        var array = this.array;
        // First point
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        // First point flipped
        array[i++] = x1;
        array[i++] = y1;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i++] = color;
        // Second point
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = n1;
        array[i++] = n2;
        array[i++] = color;
        // Second point flipped
        array[i++] = x2;
        array[i++] = y2;
        array[i++] = -n1;
        array[i++] = -n2;
        array[i] = color;
    };
    EdgeRectangleProgram.prototype.draw = function (params) {
        var gl = this.gl;
        var _a = this.uniformLocations, u_matrix = _a.u_matrix, u_zoomRatio = _a.u_zoomRatio, u_correctionRatio = _a.u_correctionRatio, u_sizeRatio = _a.u_sizeRatio;
        gl.uniformMatrix3fv(u_matrix, false, params.matrix);
        gl.uniform1f(u_zoomRatio, params.zoomRatio);
        gl.uniform1f(u_sizeRatio, params.sizeRatio);
        gl.uniform1f(u_correctionRatio, params.correctionRatio);
        if (!this.indicesArray)
            throw new Error("EdgeRectangleProgram: indicesArray should be allocated when drawing!");
        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);
    };
    return EdgeRectangleProgram;
}(edge_1.EdgeProgram));
exports.default = EdgeRectangleProgram;

},{"../../../utils":39,"../shaders/edge.rectangle.frag.glsl.js":27,"../shaders/edge.rectangle.vert.glsl.js":28,"./common/edge":16}],23:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../../../utils");
var node_1 = require("./common/node");
var node_point_vert_glsl_1 = __importDefault(require("../shaders/node.point.vert.glsl.js"));
var node_point_frag_glsl_1 = __importDefault(require("../shaders/node.point.frag.glsl.js"));
var UNSIGNED_BYTE = WebGLRenderingContext.UNSIGNED_BYTE, FLOAT = WebGLRenderingContext.FLOAT;
var UNIFORMS = ["u_sizeRatio", "u_pixelRatio", "u_matrix"];
var NodePointProgram = /** @class */ (function (_super) {
    __extends(NodePointProgram, _super);
    function NodePointProgram() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NodePointProgram.prototype.getDefinition = function () {
        return {
            VERTICES: 1,
            ARRAY_ITEMS_PER_VERTEX: 4,
            VERTEX_SHADER_SOURCE: node_point_vert_glsl_1.default,
            FRAGMENT_SHADER_SOURCE: node_point_frag_glsl_1.default,
            UNIFORMS: UNIFORMS,
            ATTRIBUTES: [
                { name: "a_position", size: 2, type: FLOAT },
                { name: "a_size", size: 1, type: FLOAT },
                { name: "a_color", size: 4, type: UNSIGNED_BYTE, normalized: true },
            ],
        };
    };
    NodePointProgram.prototype.processVisibleItem = function (i, data) {
        var array = this.array;
        array[i++] = data.x;
        array[i++] = data.y;
        array[i++] = data.size;
        array[i] = (0, utils_1.floatColor)(data.color);
    };
    NodePointProgram.prototype.draw = function (params) {
        var gl = this.gl;
        var _a = this.uniformLocations, u_sizeRatio = _a.u_sizeRatio, u_pixelRatio = _a.u_pixelRatio, u_matrix = _a.u_matrix;
        gl.uniform1f(u_sizeRatio, params.sizeRatio);
        gl.uniform1f(u_pixelRatio, params.pixelRatio);
        gl.uniformMatrix3fv(u_matrix, false, params.matrix);
        gl.drawArrays(gl.POINTS, 0, this.verticesCount);
    };
    return NodePointProgram;
}(node_1.NodeProgram));
exports.default = NodePointProgram;

},{"../../../utils":39,"../shaders/node.point.frag.glsl.js":29,"../shaders/node.point.vert.glsl.js":30,"./common/node":17}],24:[function(require,module,exports){
(()=>{"use strict";var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const r="precision mediump float;\n\nvarying vec4 v_color;\n\nvoid main(void) {\n  gl_FragColor = v_color;\n}\n";module.exports=o})();
},{}],25:[function(require,module,exports){
(()=>{"use strict";var e={d:(a,n)=>{for(var t in n)e.o(n,t)&&!e.o(a,t)&&Object.defineProperty(a,t,{enumerable:!0,get:n[t]})},o:(e,a)=>Object.prototype.hasOwnProperty.call(e,a),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},a={};e.r(a),e.d(a,{default:()=>n});const n="attribute vec2 a_position;\nattribute vec2 a_normal;\nattribute float a_radius;\nattribute vec4 a_color;\nattribute vec3 a_barycentric;\n\nuniform mat3 u_matrix;\nuniform float u_sizeRatio;\nuniform float u_correctionRatio;\n\nvarying vec4 v_color;\n\nconst float minThickness = 1.7;\nconst float bias = 255.0 / 254.0;\nconst float arrowHeadWidthLengthRatio = 0.66;\nconst float arrowHeadLengthThicknessRatio = 2.5;\n\nvoid main() {\n  float normalLength = length(a_normal);\n  vec2 unitNormal = a_normal / normalLength;\n\n  // These first computations are taken from edge.vert.glsl and\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\n  // happening:\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\n  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\n  float webGLArrowHeadHalfWidth = webGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\n\n  float da = a_barycentric.x;\n  float db = a_barycentric.y;\n  float dc = a_barycentric.z;\n\n  vec2 delta = vec2(\n      da * (webGLNodeRadius * unitNormal.y)\n    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadHalfWidth * unitNormal.x)\n    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadHalfWidth * unitNormal.x),\n\n      da * (-webGLNodeRadius * unitNormal.x)\n    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadHalfWidth * unitNormal.y)\n    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadHalfWidth * unitNormal.y)\n  );\n\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\n\n  gl_Position = vec4(position, 0, 1);\n\n  // Extract the color:\n  v_color = a_color;\n  v_color.a *= bias;\n}\n";module.exports=a})();
},{}],26:[function(require,module,exports){
(()=>{"use strict";var e={d:(o,n)=>{for(var t in n)e.o(n,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:n[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>n});const n="attribute vec4 a_color;\nattribute vec2 a_normal;\nattribute vec2 a_position;\nattribute float a_radius;\n\nuniform mat3 u_matrix;\nuniform float u_zoomRatio;\nuniform float u_sizeRatio;\nuniform float u_correctionRatio;\n\nvarying vec4 v_color;\nvarying vec2 v_normal;\nvarying float v_thickness;\n\nconst float minThickness = 1.7;\nconst float bias = 255.0 / 254.0;\nconst float arrowHeadLengthThicknessRatio = 2.5;\n\nvoid main() {\n  float normalLength = length(a_normal);\n  vec2 unitNormal = a_normal / normalLength;\n\n  // These first computations are taken from edge.vert.glsl. Please read it to\n  // get better comments on what's happening:\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\n\n  // Here, we move the point to leave space for the arrow head:\n  float direction = sign(a_radius);\n  float webGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\n  float webGLArrowHeadLength = webGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\n\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (webGLNodeRadius + webGLArrowHeadLength);\n\n  // Here is the proper position of the vertex\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * webGLThickness + compensationVector, 1)).xy, 0, 1);\n\n  v_thickness = webGLThickness / u_zoomRatio;\n\n  v_normal = unitNormal;\n  v_color = a_color;\n  v_color.a *= bias;\n}\n";module.exports=o})();
},{}],27:[function(require,module,exports){
(()=>{"use strict";var e={d:(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>t});const t="precision mediump float;\n\nvarying vec4 v_color;\nvarying vec2 v_normal;\nvarying float v_thickness;\n\nconst float feather = 0.001;\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\n\nvoid main(void) {\n  float dist = length(v_normal) * v_thickness;\n\n  float t = smoothstep(\n    v_thickness - feather,\n    v_thickness,\n    dist\n  );\n\n  gl_FragColor = mix(v_color, transparent, t);\n}\n";module.exports=n})();
},{}],28:[function(require,module,exports){
(()=>{"use strict";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o='attribute vec4 a_color;\nattribute vec2 a_normal;\nattribute vec2 a_position;\n\nuniform mat3 u_matrix;\nuniform float u_sizeRatio;\nuniform float u_zoomRatio;\nuniform float u_correctionRatio;\n\nvarying vec4 v_color;\nvarying vec2 v_normal;\nvarying float v_thickness;\n\nconst float minThickness = 1.7;\nconst float bias = 255.0 / 254.0;\n\nvoid main() {\n  float normalLength = length(a_normal);\n  vec2 unitNormal = a_normal / normalLength;\n\n  // We require edges to be at least `minThickness` pixels thick *on screen*\n  // (so we need to compensate the size ratio):\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\n\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\n  // referential (in a ([0, 1], [0, 1]) space), using our "magic" correction\n  // ratio:\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\n\n  // Here is the proper position of the vertex\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * webGLThickness, 1)).xy, 0, 1);\n\n  // For the fragment shader though, we need a thickness that takes the "magic"\n  // correction ratio into account (as in webGLThickness), but so that the\n  // antialiasing effect does not depend on the zoom level. So here\'s yet\n  // another thickness version:\n  v_thickness = webGLThickness / u_zoomRatio;\n\n  v_normal = unitNormal;\n  v_color = a_color;\n  v_color.a *= bias;\n}\n';module.exports=n})();
},{}],29:[function(require,module,exports){
(()=>{"use strict";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o="precision mediump float;\n\nvarying vec4 v_color;\nvarying float v_border;\n\nconst float radius = 0.5;\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\n\nvoid main(void) {\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\n  float dist = radius - length(m);\n\n  float t = 0.0;\n  if (dist > v_border)\n    t = 1.0;\n  else if (dist > 0.0)\n    t = dist / v_border;\n\n  gl_FragColor = mix(transparent, v_color, t);\n}\n";module.exports=n})();
},{}],30:[function(require,module,exports){
(()=>{"use strict";var o={d:(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(o,t)=>Object.prototype.hasOwnProperty.call(o,t),r:o=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})}},t={};o.r(t),o.d(t,{default:()=>e});const e="attribute vec2 a_position;\nattribute float a_size;\nattribute vec4 a_color;\n\nuniform float u_sizeRatio;\nuniform float u_pixelRatio;\nuniform mat3 u_matrix;\n\nvarying vec4 v_color;\nvarying float v_border;\n\nconst float bias = 255.0 / 254.0;\n\nvoid main() {\n  gl_Position = vec4(\n    (u_matrix * vec3(a_position, 1)).xy,\n    0,\n    1\n  );\n\n  // Multiply the point size twice:\n  //  - x SCALING_RATIO to correct the canvas scaling\n  //  - x 2 to correct the formulae\n  gl_PointSize = a_size / u_sizeRatio * u_pixelRatio * 2.0;\n\n  v_border = (0.5 / a_size) * u_sizeRatio;\n\n  // Extract the color:\n  v_color = a_color;\n  v_color.a *= bias;\n}\n";module.exports=t})();
},{}],31:[function(require,module,exports){
"use strict";
/**
 * Sigma.js Shader Utils
 * ======================
 *
 * Code used to load sigma's shaders.
 * @module
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;
/**
 * Function used to load a shader.
 */
function loadShader(type, gl, source) {
    var glType = type === "VERTEX" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;
    // Creating the shader
    var shader = gl.createShader(glType);
    if (shader === null) {
        throw new Error("loadShader: error while creating the shader");
    }
    // Loading source
    gl.shaderSource(shader, source);
    // Compiling the shader
    gl.compileShader(shader);
    // Retrieving compilation status
    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
    // Throwing if something went awry
    if (!successfullyCompiled) {
        var infoLog = gl.getShaderInfoLog(shader);
        gl.deleteShader(shader);
        throw new Error("loadShader: error while compiling the shader:\n".concat(infoLog, "\n").concat(source));
    }
    return shader;
}
function loadVertexShader(gl, source) {
    return loadShader("VERTEX", gl, source);
}
exports.loadVertexShader = loadVertexShader;
function loadFragmentShader(gl, source) {
    return loadShader("FRAGMENT", gl, source);
}
exports.loadFragmentShader = loadFragmentShader;
/**
 * Function used to load a program.
 */
function loadProgram(gl, shaders) {
    var program = gl.createProgram();
    if (program === null) {
        throw new Error("loadProgram: error while creating the program.");
    }
    var i, l;
    // Attaching the shaders
    for (i = 0, l = shaders.length; i < l; i++)
        gl.attachShader(program, shaders[i]);
    gl.linkProgram(program);
    // Checking status
    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);
    if (!successfullyLinked) {
        gl.deleteProgram(program);
        throw new Error("loadProgram: error while linking the program.");
    }
    return program;
}
exports.loadProgram = loadProgram;

},{}],32:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveSettings = exports.validateSettings = exports.DEFAULT_EDGE_PROGRAM_CLASSES = exports.DEFAULT_NODE_PROGRAM_CLASSES = exports.DEFAULT_SETTINGS = void 0;
var utils_1 = require("./utils");
var label_1 = __importDefault(require("./rendering/canvas/label"));
var hover_1 = __importDefault(require("./rendering/canvas/hover"));
var edge_label_1 = __importDefault(require("./rendering/canvas/edge-label"));
var node_point_1 = __importDefault(require("./rendering/webgl/programs/node.point"));
var edge_rectangle_1 = __importDefault(require("./rendering/webgl/programs/edge.rectangle"));
var edge_arrow_1 = __importDefault(require("./rendering/webgl/programs/edge.arrow"));
exports.DEFAULT_SETTINGS = {
    // Performance
    hideEdgesOnMove: false,
    hideLabelsOnMove: false,
    renderLabels: true,
    renderEdgeLabels: false,
    enableEdgeClickEvents: false,
    enableEdgeWheelEvents: false,
    enableEdgeHoverEvents: false,
    // Component rendering
    defaultNodeColor: "#999",
    defaultNodeType: "circle",
    defaultEdgeColor: "#ccc",
    defaultEdgeType: "line",
    labelFont: "Arial",
    labelSize: 14,
    labelWeight: "normal",
    labelColor: { color: "#000" },
    edgeLabelFont: "Arial",
    edgeLabelSize: 14,
    edgeLabelWeight: "normal",
    edgeLabelColor: { attribute: "color" },
    stagePadding: 30,
    zoomToSizeRatioFunction: Math.sqrt,
    itemSizesReference: "screen",
    // Labels
    labelDensity: 1,
    labelGridCellSize: 100,
    labelRenderedSizeThreshold: 6,
    // Reducers
    nodeReducer: null,
    edgeReducer: null,
    // Features
    zIndex: false,
    minCameraRatio: null,
    maxCameraRatio: null,
    // Renderers
    labelRenderer: label_1.default,
    hoverRenderer: hover_1.default,
    edgeLabelRenderer: edge_label_1.default,
    // Lifecycle
    allowInvalidContainer: false,
    // Program classes
    nodeProgramClasses: {},
    nodeHoverProgramClasses: {},
    edgeProgramClasses: {},
};
exports.DEFAULT_NODE_PROGRAM_CLASSES = {
    circle: node_point_1.default,
};
exports.DEFAULT_EDGE_PROGRAM_CLASSES = {
    arrow: edge_arrow_1.default,
    line: edge_rectangle_1.default,
};
function validateSettings(settings) {
    if (typeof settings.labelDensity !== "number" || settings.labelDensity < 0) {
        throw new Error("Settings: invalid `labelDensity`. Expecting a positive number.");
    }
    var minCameraRatio = settings.minCameraRatio, maxCameraRatio = settings.maxCameraRatio;
    if (typeof minCameraRatio === "number" && typeof maxCameraRatio === "number" && maxCameraRatio < minCameraRatio) {
        throw new Error("Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.");
    }
}
exports.validateSettings = validateSettings;
function resolveSettings(settings) {
    var resolvedSettings = (0, utils_1.assign)({}, exports.DEFAULT_SETTINGS, settings);
    resolvedSettings.nodeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_NODE_PROGRAM_CLASSES, resolvedSettings.nodeProgramClasses);
    resolvedSettings.edgeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_EDGE_PROGRAM_CLASSES, resolvedSettings.edgeProgramClasses);
    return resolvedSettings;
}
exports.resolveSettings = resolveSettings;

},{"./rendering/canvas/edge-label":13,"./rendering/canvas/hover":14,"./rendering/canvas/label":15,"./rendering/webgl/programs/edge.arrow":19,"./rendering/webgl/programs/edge.rectangle":22,"./rendering/webgl/programs/node.point":23,"./utils":39}],33:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var extend_1 = __importDefault(require("@yomguithereal/helpers/extend"));
var camera_1 = __importDefault(require("./core/camera"));
var mouse_1 = __importDefault(require("./core/captors/mouse"));
var quadtree_1 = __importDefault(require("./core/quadtree"));
var types_1 = require("./types");
var utils_1 = require("./utils");
var labels_1 = require("./core/labels");
var settings_1 = require("./settings");
var touch_1 = __importDefault(require("./core/captors/touch"));
var matrices_1 = require("./utils/matrices");
var edge_collisions_1 = require("./utils/edge-collisions");
/**
 * Constants.
 */
var X_LABEL_MARGIN = 150;
var Y_LABEL_MARGIN = 50;
/**
 * Important functions.
 */
function applyNodeDefaults(settings, key, data) {
    if (!data.hasOwnProperty("x") || !data.hasOwnProperty("y"))
        throw new Error("Sigma: could not find a valid position (x, y) for node \"".concat(key, "\". All your nodes must have a number \"x\" and \"y\". Maybe your forgot to apply a layout or your \"nodeReducer\" is not returning the correct data?"));
    if (!data.color)
        data.color = settings.defaultNodeColor;
    if (!data.label && data.label !== "")
        data.label = null;
    if (data.label !== undefined && data.label !== null)
        data.label = "" + data.label;
    else
        data.label = null;
    if (!data.size)
        data.size = 2;
    if (!data.hasOwnProperty("hidden"))
        data.hidden = false;
    if (!data.hasOwnProperty("highlighted"))
        data.highlighted = false;
    if (!data.hasOwnProperty("forceLabel"))
        data.forceLabel = false;
    if (!data.type || data.type === "")
        data.type = settings.defaultNodeType;
    if (!data.zIndex)
        data.zIndex = 0;
    return data;
}
function applyEdgeDefaults(settings, key, data) {
    if (!data.color)
        data.color = settings.defaultEdgeColor;
    if (!data.label)
        data.label = "";
    if (!data.size)
        data.size = 0.5;
    if (!data.hasOwnProperty("hidden"))
        data.hidden = false;
    if (!data.hasOwnProperty("forceLabel"))
        data.forceLabel = false;
    if (!data.type || data.type === "")
        data.type = settings.defaultEdgeType;
    if (!data.zIndex)
        data.zIndex = 0;
    return data;
}
/**
 * Main class.
 *
 * @constructor
 * @param {Graph}       graph     - Graph to render.
 * @param {HTMLElement} container - DOM container in which to render.
 * @param {object}      settings  - Optional settings.
 */
var Sigma = /** @class */ (function (_super) {
    __extends(Sigma, _super);
    function Sigma(graph, container, settings) {
        if (settings === void 0) { settings = {}; }
        var _this = _super.call(this) || this;
        _this.elements = {};
        _this.canvasContexts = {};
        _this.webGLContexts = {};
        _this.activeListeners = {};
        _this.quadtree = new quadtree_1.default();
        _this.labelGrid = new labels_1.LabelGrid();
        _this.nodeDataCache = {};
        _this.edgeDataCache = {};
        _this.nodesWithForcedLabels = [];
        _this.edgesWithForcedLabels = [];
        _this.nodeExtent = { x: [0, 1], y: [0, 1] };
        _this.matrix = (0, matrices_1.identity)();
        _this.invMatrix = (0, matrices_1.identity)();
        _this.correctionRatio = 1;
        _this.customBBox = null;
        _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({
            x: [0, 1],
            y: [0, 1],
        });
        // Cache:
        _this.graphToViewportRatio = 1;
        // Starting dimensions and pixel ratio
        _this.width = 0;
        _this.height = 0;
        _this.pixelRatio = (0, utils_1.getPixelRatio)();
        // State
        _this.displayedNodeLabels = new Set();
        _this.displayedEdgeLabels = new Set();
        _this.highlightedNodes = new Set();
        _this.hoveredNode = null;
        _this.hoveredEdge = null;
        _this.renderFrame = null;
        _this.renderHighlightedNodesFrame = null;
        _this.needToProcess = false;
        _this.checkEdgesEventsFrame = null;
        // Programs
        _this.nodePrograms = {};
        _this.nodeHoverPrograms = {};
        _this.edgePrograms = {};
        // Resolving settings
        _this.settings = (0, settings_1.resolveSettings)(settings);
        // Validating
        (0, settings_1.validateSettings)(_this.settings);
        (0, utils_1.validateGraph)(graph);
        if (!(container instanceof HTMLElement))
            throw new Error("Sigma: container should be an html element.");
        // Properties
        _this.graph = graph;
        _this.container = container;
        // Initializing contexts
        _this.createWebGLContext("edges", { preserveDrawingBuffer: true });
        _this.createCanvasContext("edgeLabels");
        _this.createWebGLContext("nodes");
        _this.createCanvasContext("labels");
        _this.createCanvasContext("hovers");
        _this.createWebGLContext("hoverNodes");
        _this.createCanvasContext("mouse");
        // Blending
        for (var key in _this.webGLContexts) {
            var gl = _this.webGLContexts[key];
            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
            gl.enable(gl.BLEND);
        }
        // Loading programs
        for (var type in _this.settings.nodeProgramClasses) {
            var NodeProgramClass = _this.settings.nodeProgramClasses[type];
            _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this);
            var NodeHoverProgram = NodeProgramClass;
            if (type in _this.settings.nodeHoverProgramClasses) {
                NodeHoverProgram = _this.settings.nodeHoverProgramClasses[type];
            }
            _this.nodeHoverPrograms[type] = new NodeHoverProgram(_this.webGLContexts.hoverNodes, _this);
        }
        for (var type in _this.settings.edgeProgramClasses) {
            var EdgeProgramClass = _this.settings.edgeProgramClasses[type];
            _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this);
        }
        // Initial resize
        _this.resize();
        // Initializing the camera
        _this.camera = new camera_1.default();
        // Binding camera events
        _this.bindCameraHandlers();
        // Initializing captors
        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);
        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);
        // Binding event handlers
        _this.bindEventHandlers();
        // Binding graph handlers
        _this.bindGraphHandlers();
        // Trigger eventual settings-related things
        _this.handleSettingsUpdate();
        // Processing data for the first time & render
        _this.refresh();
        return _this;
    }
    /**---------------------------------------------------------------------------
     * Internal methods.
     **---------------------------------------------------------------------------
     */
    /**
     * Internal function used to create a canvas element.
     * @param  {string} id - Context's id.
     * @return {Sigma}
     */
    Sigma.prototype.createCanvas = function (id) {
        var canvas = (0, utils_1.createElement)("canvas", {
            position: "absolute",
        }, {
            class: "sigma-".concat(id),
        });
        this.elements[id] = canvas;
        this.container.appendChild(canvas);
        return canvas;
    };
    /**
     * Internal function used to create a canvas context and add the relevant
     * DOM elements.
     *
     * @param  {string} id - Context's id.
     * @return {Sigma}
     */
    Sigma.prototype.createCanvasContext = function (id) {
        var canvas = this.createCanvas(id);
        var contextOptions = {
            preserveDrawingBuffer: false,
            antialias: false,
        };
        this.canvasContexts[id] = canvas.getContext("2d", contextOptions);
        return this;
    };
    /**
     * Internal function used to create a canvas context and add the relevant
     * DOM elements.
     *
     * @param  {string}  id      - Context's id.
     * @param  {object?} options - #getContext params to override (optional)
     * @return {Sigma}
     */
    Sigma.prototype.createWebGLContext = function (id, options) {
        var canvas = this.createCanvas(id);
        var contextOptions = __assign({ preserveDrawingBuffer: false, antialias: false }, (options || {}));
        var context;
        // First we try webgl2 for an easy performance boost
        context = canvas.getContext("webgl2", contextOptions);
        // Else we fall back to webgl
        if (!context)
            context = canvas.getContext("webgl", contextOptions);
        // Edge, I am looking right at you...
        if (!context)
            context = canvas.getContext("experimental-webgl", contextOptions);
        this.webGLContexts[id] = context;
        return this;
    };
    /**
     * Method binding camera handlers.
     *
     * @return {Sigma}
     */
    Sigma.prototype.bindCameraHandlers = function () {
        var _this = this;
        this.activeListeners.camera = function () {
            _this.scheduleRender();
        };
        this.camera.on("updated", this.activeListeners.camera);
        return this;
    };
    /**
     * Method unbinding camera handlers.
     *
     * @return {Sigma}
     */
    Sigma.prototype.unbindCameraHandlers = function () {
        this.camera.removeListener("updated", this.activeListeners.camera);
        return this;
    };
    /**
     * Method that checks whether or not a node collides with a given position.
     */
    Sigma.prototype.mouseIsOnNode = function (_a, _b, size) {
        var x = _a.x, y = _a.y;
        var nodeX = _b.x, nodeY = _b.y;
        return (x > nodeX - size &&
            x < nodeX + size &&
            y > nodeY - size &&
            y < nodeY + size &&
            Math.sqrt(Math.pow(x - nodeX, 2) + Math.pow(y - nodeY, 2)) < size);
    };
    /**
     * Method that returns all nodes in quad at a given position.
     */
    Sigma.prototype.getQuadNodes = function (position) {
        var mouseGraphPosition = this.viewportToFramedGraph(position);
        return this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);
    };
    /**
     * Method that returns the closest node to a given position.
     */
    Sigma.prototype.getNodeAtPosition = function (position) {
        var x = position.x, y = position.y;
        var quadNodes = this.getQuadNodes(position);
        // We will hover the node whose center is closest to mouse
        var minDistance = Infinity, nodeAtPosition = null;
        for (var i = 0, l = quadNodes.length; i < l; i++) {
            var node = quadNodes[i];
            var data = this.nodeDataCache[node];
            var nodePosition = this.framedGraphToViewport(data);
            var size = this.scaleSize(data.size);
            if (!data.hidden && this.mouseIsOnNode(position, nodePosition, size)) {
                var distance = Math.sqrt(Math.pow(x - nodePosition.x, 2) + Math.pow(y - nodePosition.y, 2));
                // TODO: sort by min size also for cases where center is the same
                if (distance < minDistance) {
                    minDistance = distance;
                    nodeAtPosition = node;
                }
            }
        }
        return nodeAtPosition;
    };
    /**
     * Method binding event handlers.
     *
     * @return {Sigma}
     */
    Sigma.prototype.bindEventHandlers = function () {
        var _this = this;
        // Handling window resize
        this.activeListeners.handleResize = function () {
            _this.scheduleRender();
        };
        window.addEventListener("resize", this.activeListeners.handleResize);
        // Handling mouse move
        this.activeListeners.handleMove = function (e) {
            var baseEvent = {
                event: e,
                preventSigmaDefault: function () {
                    e.preventSigmaDefault();
                },
            };
            var nodeToHover = _this.getNodeAtPosition(e);
            if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {
                // Handling passing from one node to the other directly
                if (_this.hoveredNode)
                    _this.emit("leaveNode", __assign(__assign({}, baseEvent), { node: _this.hoveredNode }));
                _this.hoveredNode = nodeToHover;
                _this.emit("enterNode", __assign(__assign({}, baseEvent), { node: nodeToHover }));
                _this.scheduleHighlightedNodesRender();
                return;
            }
            // Checking if the hovered node is still hovered
            if (_this.hoveredNode) {
                var data = _this.nodeDataCache[_this.hoveredNode];
                var pos = _this.framedGraphToViewport(data);
                var size = _this.scaleSize(data.size);
                if (!_this.mouseIsOnNode(e, pos, size)) {
                    var node = _this.hoveredNode;
                    _this.hoveredNode = null;
                    _this.emit("leaveNode", __assign(__assign({}, baseEvent), { node: node }));
                    _this.scheduleHighlightedNodesRender();
                    return;
                }
            }
            if (_this.settings.enableEdgeHoverEvents === true) {
                _this.checkEdgeHoverEvents(baseEvent);
            }
            else if (_this.settings.enableEdgeHoverEvents === "debounce") {
                if (!_this.checkEdgesEventsFrame)
                    _this.checkEdgesEventsFrame = (0, utils_1.requestFrame)(function () {
                        _this.checkEdgeHoverEvents(baseEvent);
                        _this.checkEdgesEventsFrame = null;
                    });
            }
        };
        // Handling click
        var createMouseListener = function (eventType) {
            return function (e) {
                var baseEvent = {
                    event: e,
                    preventSigmaDefault: function () {
                        e.preventSigmaDefault();
                    },
                };
                var isFakeSigmaMouseEvent = e.original.isFakeSigmaMouseEvent;
                var nodeAtPosition = isFakeSigmaMouseEvent ? _this.getNodeAtPosition(e) : _this.hoveredNode;
                if (nodeAtPosition)
                    return _this.emit("".concat(eventType, "Node"), __assign(__assign({}, baseEvent), { node: nodeAtPosition }));
                if (eventType === "wheel" ? _this.settings.enableEdgeWheelEvents : _this.settings.enableEdgeClickEvents) {
                    var edge = _this.getEdgeAtPoint(e.x, e.y);
                    if (edge)
                        return _this.emit("".concat(eventType, "Edge"), __assign(__assign({}, baseEvent), { edge: edge }));
                }
                return _this.emit("".concat(eventType, "Stage"), baseEvent);
            };
        };
        this.activeListeners.handleClick = createMouseListener("click");
        this.activeListeners.handleRightClick = createMouseListener("rightClick");
        this.activeListeners.handleDoubleClick = createMouseListener("doubleClick");
        this.activeListeners.handleWheel = createMouseListener("wheel");
        this.activeListeners.handleDown = createMouseListener("down");
        this.mouseCaptor.on("mousemove", this.activeListeners.handleMove);
        this.mouseCaptor.on("click", this.activeListeners.handleClick);
        this.mouseCaptor.on("rightClick", this.activeListeners.handleRightClick);
        this.mouseCaptor.on("doubleClick", this.activeListeners.handleDoubleClick);
        this.mouseCaptor.on("wheel", this.activeListeners.handleWheel);
        this.mouseCaptor.on("mousedown", this.activeListeners.handleDown);
        // TODO
        // Deal with Touch captor events
        return this;
    };
    /**
     * Method binding graph handlers
     *
     * @return {Sigma}
     */
    Sigma.prototype.bindGraphHandlers = function () {
        var _this = this;
        var graph = this.graph;
        this.activeListeners.graphUpdate = function () {
            _this.scheduleRefresh();
        };
        this.activeListeners.dropNodeGraphUpdate = function (e) {
            delete _this.nodeDataCache[e.key];
            if (_this.hoveredNode === e.key)
                _this.hoveredNode = null;
            _this.activeListeners.graphUpdate();
        };
        this.activeListeners.dropEdgeGraphUpdate = function (e) {
            delete _this.edgeDataCache[e.key];
            if (_this.hoveredEdge === e.key)
                _this.hoveredEdge = null;
            _this.activeListeners.graphUpdate();
        };
        this.activeListeners.clearEdgesGraphUpdate = function () {
            _this.edgeDataCache = {};
            _this.hoveredEdge = null;
            _this.activeListeners.graphUpdate();
        };
        this.activeListeners.clearGraphUpdate = function () {
            _this.nodeDataCache = {};
            _this.hoveredNode = null;
            _this.activeListeners.clearEdgesGraphUpdate();
        };
        graph.on("nodeAdded", this.activeListeners.graphUpdate);
        graph.on("nodeDropped", this.activeListeners.dropNodeGraphUpdate);
        graph.on("nodeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.on("eachNodeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.on("edgeAdded", this.activeListeners.graphUpdate);
        graph.on("edgeDropped", this.activeListeners.dropEdgeGraphUpdate);
        graph.on("edgeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.on("eachEdgeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.on("edgesCleared", this.activeListeners.clearEdgesGraphUpdate);
        graph.on("cleared", this.activeListeners.clearGraphUpdate);
        return this;
    };
    /**
     * Method used to unbind handlers from the graph.
     *
     * @return {undefined}
     */
    Sigma.prototype.unbindGraphHandlers = function () {
        var graph = this.graph;
        graph.removeListener("nodeAdded", this.activeListeners.graphUpdate);
        graph.removeListener("nodeDropped", this.activeListeners.dropNodeGraphUpdate);
        graph.removeListener("nodeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.removeListener("eachNodeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.removeListener("edgeAdded", this.activeListeners.graphUpdate);
        graph.removeListener("edgeDropped", this.activeListeners.dropEdgeGraphUpdate);
        graph.removeListener("edgeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.removeListener("eachEdgeAttributesUpdated", this.activeListeners.graphUpdate);
        graph.removeListener("edgesCleared", this.activeListeners.clearEdgesGraphUpdate);
        graph.removeListener("cleared", this.activeListeners.clearGraphUpdate);
    };
    /**
     * Method dealing with "leaveEdge" and "enterEdge" events.
     *
     * @return {Sigma}
     */
    Sigma.prototype.checkEdgeHoverEvents = function (payload) {
        var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(payload.event.x, payload.event.y);
        if (edgeToHover !== this.hoveredEdge) {
            if (this.hoveredEdge)
                this.emit("leaveEdge", __assign(__assign({}, payload), { edge: this.hoveredEdge }));
            if (edgeToHover)
                this.emit("enterEdge", __assign(__assign({}, payload), { edge: edgeToHover }));
            this.hoveredEdge = edgeToHover;
        }
        return this;
    };
    /**
     * Method looking for an edge colliding with a given point at (x, y). Returns
     * the key of the edge if any, or null else.
     */
    Sigma.prototype.getEdgeAtPoint = function (x, y) {
        var e_1, _a;
        var _this = this;
        var _b = this, edgeDataCache = _b.edgeDataCache, nodeDataCache = _b.nodeDataCache;
        // Check first that pixel is colored:
        // Note that mouse positions must be corrected by pixel ratio to correctly
        // index the drawing buffer.
        if (!(0, edge_collisions_1.isPixelColored)(this.webGLContexts.edges, x * this.pixelRatio, y * this.pixelRatio))
            return null;
        // Check for each edge if it collides with the point:
        var _c = this.viewportToGraph({ x: x, y: y }), graphX = _c.x, graphY = _c.y;
        // To translate edge thicknesses to the graph system, we observe by how much
        // the length of a non-null edge is transformed to between the graph system
        // and the viewport system:
        var transformationRatio = 0;
        this.graph.someEdge(function (key, _, sourceId, targetId, _a, _b) {
            var xs = _a.x, ys = _a.y;
            var xt = _b.x, yt = _b.y;
            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)
                return false;
            if (xs !== xt || ys !== yt) {
                var graphLength = Math.sqrt(Math.pow(xt - xs, 2) + Math.pow(yt - ys, 2));
                var _c = _this.graphToViewport({ x: xs, y: ys }), vp_xs = _c.x, vp_ys = _c.y;
                var _d = _this.graphToViewport({ x: xt, y: yt }), vp_xt = _d.x, vp_yt = _d.y;
                var viewportLength = Math.sqrt(Math.pow(vp_xt - vp_xs, 2) + Math.pow(vp_yt - vp_ys, 2));
                transformationRatio = graphLength / viewportLength;
                return true;
            }
        });
        // If no non-null edge has been found, return null:
        if (!transformationRatio)
            return null;
        // Now we can look for matching edges:
        var edges = this.graph.filterEdges(function (key, edgeAttributes, sourceId, targetId, sourcePosition, targetPosition) {
            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)
                return false;
            if ((0, edge_collisions_1.doEdgeCollideWithPoint)(graphX, graphY, sourcePosition.x, sourcePosition.y, targetPosition.x, targetPosition.y, 
            // Adapt the edge size to the zoom ratio:
            _this.scaleSize(edgeDataCache[key].size * transformationRatio))) {
                return true;
            }
        });
        if (edges.length === 0)
            return null; // no edges found
        // if none of the edges have a zIndex, selected the most recently created one to match the rendering order
        var selectedEdge = edges[edges.length - 1];
        // otherwise select edge with highest zIndex
        var highestZIndex = -Infinity;
        try {
            for (var edges_1 = __values(edges), edges_1_1 = edges_1.next(); !edges_1_1.done; edges_1_1 = edges_1.next()) {
                var edge = edges_1_1.value;
                var zIndex = this.graph.getEdgeAttribute(edge, "zIndex");
                if (zIndex >= highestZIndex) {
                    selectedEdge = edge;
                    highestZIndex = zIndex;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (edges_1_1 && !edges_1_1.done && (_a = edges_1.return)) _a.call(edges_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return selectedEdge;
    };
    /**
     * Method used to process the whole graph's data.
     *
     * @return {Sigma}
     */
    Sigma.prototype.process = function () {
        var _this = this;
        var graph = this.graph;
        var settings = this.settings;
        var dimensions = this.getDimensions();
        var nodeZExtent = [Infinity, -Infinity];
        var edgeZExtent = [Infinity, -Infinity];
        // Clearing the quad
        this.quadtree.clear();
        // Resetting the label grid
        // TODO: it's probably better to do this explicitly or on resizes for layout and anims
        this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);
        // Clear the highlightedNodes
        this.highlightedNodes = new Set();
        // Computing extents
        this.nodeExtent = (0, utils_1.graphExtent)(graph);
        // Resetting `forceLabel` indices
        this.nodesWithForcedLabels = [];
        this.edgesWithForcedLabels = [];
        // NOTE: it is important to compute this matrix after computing the node's extent
        // because #.getGraphDimensions relies on it
        var nullCamera = new camera_1.default();
        var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), this.getDimensions(), this.getGraphDimensions(), this.getSetting("stagePadding") || 0);
        // Rescaling function
        this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);
        var nodesPerPrograms = {};
        var nodes = graph.nodes();
        for (var i = 0, l = nodes.length; i < l; i++) {
            var node = nodes[i];
            // Node display data resolution:
            //   1. First we get the node's attributes
            //   2. We optionally reduce them using the function provided by the user
            //      Note that this function must return a total object and won't be merged
            //   3. We apply our defaults, while running some vital checks
            //   4. We apply the normalization function
            // We shallow copy node data to avoid dangerous behaviors from reducers
            var attr = Object.assign({}, graph.getNodeAttributes(node));
            if (settings.nodeReducer)
                attr = settings.nodeReducer(node, attr);
            var data = applyNodeDefaults(this.settings, node, attr);
            nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;
            this.nodeDataCache[node] = data;
            this.normalizationFunction.applyTo(data);
            if (data.forceLabel)
                this.nodesWithForcedLabels.push(node);
            if (this.settings.zIndex) {
                if (data.zIndex < nodeZExtent[0])
                    nodeZExtent[0] = data.zIndex;
                if (data.zIndex > nodeZExtent[1])
                    nodeZExtent[1] = data.zIndex;
            }
        }
        for (var type in this.nodePrograms) {
            if (!this.nodePrograms.hasOwnProperty(type)) {
                throw new Error("Sigma: could not find a suitable program for node type \"".concat(type, "\"!"));
            }
            this.nodePrograms[type].reallocate(nodesPerPrograms[type] || 0);
            // We reset that count here, so that we can reuse it while calling the Program#process methods:
            nodesPerPrograms[type] = 0;
        }
        // Handling node z-index
        // TODO: z-index needs us to compute display data before hand
        if (this.settings.zIndex && nodeZExtent[0] !== nodeZExtent[1])
            nodes = (0, utils_1.zIndexOrdering)(nodeZExtent, function (node) { return _this.nodeDataCache[node].zIndex; }, nodes);
        var normalizationRatio = this.normalizationFunction.ratio;
        for (var i = 0, l = nodes.length; i < l; i++) {
            var node = nodes[i];
            var data = this.nodeDataCache[node];
            this.quadtree.add(node, data.x, 1 - data.y, this.scaleSize(data.size, 1) / normalizationRatio);
            if (typeof data.label === "string" && !data.hidden)
                this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, { matrix: nullCameraMatrix }));
            var nodeProgram = this.nodePrograms[data.type];
            if (!nodeProgram)
                throw new Error("Sigma: could not find a suitable program for node type \"".concat(data.type, "\"!"));
            nodeProgram.process(nodesPerPrograms[data.type]++, data);
            // Save the node in the highlighted set if needed
            if (data.highlighted && !data.hidden)
                this.highlightedNodes.add(node);
        }
        this.labelGrid.organize();
        var edgesPerPrograms = {};
        var edges = graph.edges();
        for (var i = 0, l = edges.length; i < l; i++) {
            var edge = edges[i];
            // Edge display data resolution:
            //   1. First we get the edge's attributes
            //   2. We optionally reduce them using the function provided by the user
            //      Note that this function must return a total object and won't be merged
            //   3. We apply our defaults, while running some vital checks
            // We shallow copy edge data to avoid dangerous behaviors from reducers
            var attr = Object.assign({}, graph.getEdgeAttributes(edge));
            if (settings.edgeReducer)
                attr = settings.edgeReducer(edge, attr);
            var data = applyEdgeDefaults(this.settings, edge, attr);
            edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;
            this.edgeDataCache[edge] = data;
            if (data.forceLabel && !data.hidden)
                this.edgesWithForcedLabels.push(edge);
            if (this.settings.zIndex) {
                if (data.zIndex < edgeZExtent[0])
                    edgeZExtent[0] = data.zIndex;
                if (data.zIndex > edgeZExtent[1])
                    edgeZExtent[1] = data.zIndex;
            }
        }
        for (var type in this.edgePrograms) {
            if (!this.edgePrograms.hasOwnProperty(type)) {
                throw new Error("Sigma: could not find a suitable program for edge type \"".concat(type, "\"!"));
            }
            this.edgePrograms[type].reallocate(edgesPerPrograms[type] || 0);
            // We reset that count here, so that we can reuse it while calling the Program#process methods:
            edgesPerPrograms[type] = 0;
        }
        // Handling edge z-index
        if (this.settings.zIndex && edgeZExtent[0] !== edgeZExtent[1])
            edges = (0, utils_1.zIndexOrdering)(edgeZExtent, function (edge) { return _this.edgeDataCache[edge].zIndex; }, edges);
        for (var i = 0, l = edges.length; i < l; i++) {
            var edge = edges[i];
            var data = this.edgeDataCache[edge];
            var extremities = graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];
            this.edgePrograms[data.type].process(edgesPerPrograms[data.type]++, sourceData, targetData, data);
        }
        return this;
    };
    /**
     * Method that backports potential settings updates where it's needed.
     * @private
     */
    Sigma.prototype.handleSettingsUpdate = function () {
        this.camera.minRatio = this.settings.minCameraRatio;
        this.camera.maxRatio = this.settings.maxCameraRatio;
        this.camera.setState(this.camera.validateState(this.camera.getState()));
        return this;
    };
    /**
     * Method used to render labels.
     *
     * @return {Sigma}
     */
    Sigma.prototype.renderLabels = function () {
        if (!this.settings.renderLabels)
            return this;
        var cameraState = this.camera.getState();
        // Selecting labels to draw
        var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);
        (0, extend_1.default)(labelsToDisplay, this.nodesWithForcedLabels);
        this.displayedNodeLabels = new Set();
        // Drawing labels
        var context = this.canvasContexts.labels;
        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {
            var node = labelsToDisplay[i];
            var data = this.nodeDataCache[node];
            // If the node was already drawn (like if it is eligible AND has
            // `forceLabel`), we don't want to draw it again
            // NOTE: we can do better probably
            if (this.displayedNodeLabels.has(node))
                continue;
            // If the node is hidden, we don't need to display its label obviously
            if (data.hidden)
                continue;
            var _a = this.framedGraphToViewport(data), x = _a.x, y = _a.y;
            // NOTE: we can cache the labels we need to render until the camera's ratio changes
            var size = this.scaleSize(data.size);
            // Is node big enough?
            if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold)
                continue;
            // Is node actually on screen (with some margin)
            // NOTE: we used to rely on the quadtree for this, but the coordinates
            // conversion make it unreliable and at that point we already converted
            // to viewport coordinates and since the label grid already culls the
            // number of potential labels to display this looks like a good
            // performance compromise.
            // NOTE: labelGrid.getLabelsToDisplay could probably optimize by not
            // considering cells obviously outside of the range of the current
            // view rectangle.
            if (x < -X_LABEL_MARGIN ||
                x > this.width + X_LABEL_MARGIN ||
                y < -Y_LABEL_MARGIN ||
                y > this.height + Y_LABEL_MARGIN)
                continue;
            // Because displayed edge labels depend directly on actually rendered node
            // labels, we need to only add to this.displayedNodeLabels nodes whose label
            // is rendered.
            // This makes this.displayedNodeLabels depend on viewport, which might become
            // an issue once we start memoizing getLabelsToDisplay.
            this.displayedNodeLabels.add(node);
            this.settings.labelRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), this.settings);
        }
        return this;
    };
    /**
     * Method used to render edge labels, based on which node labels were
     * rendered.
     *
     * @return {Sigma}
     */
    Sigma.prototype.renderEdgeLabels = function () {
        if (!this.settings.renderEdgeLabels)
            return this;
        var context = this.canvasContexts.edgeLabels;
        // Clearing
        context.clearRect(0, 0, this.width, this.height);
        var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({
            graph: this.graph,
            hoveredNode: this.hoveredNode,
            displayedNodeLabels: this.displayedNodeLabels,
            highlightedNodes: this.highlightedNodes,
        }).concat(this.edgesWithForcedLabels);
        var displayedLabels = new Set();
        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {
            var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edge];
            // If the edge was already drawn (like if it is eligible AND has
            // `forceLabel`), we don't want to draw it again
            if (displayedLabels.has(edge))
                continue;
            // If the edge is hidden we don't need to display its label
            // NOTE: the test on sourceData & targetData is probably paranoid at this point?
            if (edgeData.hidden || sourceData.hidden || targetData.hidden) {
                continue;
            }
            this.settings.edgeLabelRenderer(context, __assign(__assign({ key: edge }, edgeData), { size: this.scaleSize(edgeData.size) }), __assign(__assign(__assign({ key: extremities[0] }, sourceData), this.framedGraphToViewport(sourceData)), { size: this.scaleSize(sourceData.size) }), __assign(__assign(__assign({ key: extremities[1] }, targetData), this.framedGraphToViewport(targetData)), { size: this.scaleSize(targetData.size) }), this.settings);
            displayedLabels.add(edge);
        }
        this.displayedEdgeLabels = displayedLabels;
        return this;
    };
    /**
     * Method used to render the highlighted nodes.
     *
     * @return {Sigma}
     */
    Sigma.prototype.renderHighlightedNodes = function () {
        var _this = this;
        var context = this.canvasContexts.hovers;
        // Clearing
        context.clearRect(0, 0, this.width, this.height);
        // Rendering
        var render = function (node) {
            var data = _this.nodeDataCache[node];
            var _a = _this.framedGraphToViewport(data), x = _a.x, y = _a.y;
            var size = _this.scaleSize(data.size);
            _this.settings.hoverRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), _this.settings);
        };
        var nodesToRender = [];
        if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {
            nodesToRender.push(this.hoveredNode);
        }
        this.highlightedNodes.forEach(function (node) {
            // The hovered node has already been highlighted
            if (node !== _this.hoveredNode)
                nodesToRender.push(node);
        });
        // Draw labels:
        nodesToRender.forEach(function (node) { return render(node); });
        // Draw WebGL nodes on top of the labels:
        var nodesPerPrograms = {};
        // 1. Count nodes per type:
        nodesToRender.forEach(function (node) {
            var type = _this.nodeDataCache[node].type;
            nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;
        });
        // 2. Allocate for each type for the proper number of nodes
        for (var type in this.nodeHoverPrograms) {
            this.nodeHoverPrograms[type].reallocate(nodesPerPrograms[type] || 0);
            // Also reset count, to use when rendering:
            nodesPerPrograms[type] = 0;
        }
        // 3. Process all nodes to render:
        nodesToRender.forEach(function (node) {
            var data = _this.nodeDataCache[node];
            _this.nodeHoverPrograms[data.type].process(nodesPerPrograms[data.type]++, data);
        });
        // 4. Clear hovered nodes layer:
        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);
        // 5. Render:
        for (var type in this.nodeHoverPrograms) {
            var program = this.nodeHoverPrograms[type];
            program.render({
                matrix: this.matrix,
                width: this.width,
                height: this.height,
                pixelRatio: this.pixelRatio,
                zoomRatio: this.camera.ratio,
                sizeRatio: 1 / this.scaleSize(),
                correctionRatio: this.correctionRatio,
            });
        }
    };
    /**
     * Method used to schedule a hover render.
     *
     */
    Sigma.prototype.scheduleHighlightedNodesRender = function () {
        var _this = this;
        if (this.renderHighlightedNodesFrame || this.renderFrame)
            return;
        this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function () {
            // Resetting state
            _this.renderHighlightedNodesFrame = null;
            // Rendering
            _this.renderHighlightedNodes();
            _this.renderEdgeLabels();
        });
    };
    /**
     * Method used to render.
     *
     * @return {Sigma}
     */
    Sigma.prototype.render = function () {
        var _this = this;
        this.emit("beforeRender");
        var exitRender = function () {
            _this.emit("afterRender");
            return _this;
        };
        // If a render was scheduled, we cancel it
        if (this.renderFrame) {
            (0, utils_1.cancelFrame)(this.renderFrame);
            this.renderFrame = null;
        }
        // First we need to resize
        this.resize();
        // Do we need to reprocess data?
        if (this.needToProcess)
            this.process();
        this.needToProcess = false;
        // Clearing the canvases
        this.clear();
        // If we have no nodes we can stop right there
        if (!this.graph.order)
            return exitRender();
        // TODO: improve this heuristic or move to the captor itself?
        // TODO: deal with the touch captor here as well
        var mouseCaptor = this.mouseCaptor;
        var moving = this.camera.isAnimated() ||
            mouseCaptor.isMoving ||
            mouseCaptor.draggedEvents ||
            mouseCaptor.currentWheelDirection;
        // Then we need to extract a matrix from the camera
        var cameraState = this.camera.getState();
        var viewportDimensions = this.getDimensions();
        var graphDimensions = this.getGraphDimensions();
        var padding = this.getSetting("stagePadding") || 0;
        this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);
        this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);
        this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);
        this.graphToViewportRatio = this.getGraphToViewportRatio();
        // [jacomyal]
        // This comment is related to the one above the `getMatrixImpact` definition:
        // - `this.correctionRatio` is somehow not completely explained
        // - `this.graphToViewportRatio` is the ratio of a distance in the viewport divided by the same distance in the
        //   graph
        // - `this.normalizationFunction.ratio` is basically `Math.max(graphDX, graphDY)`
        // And now, I observe that if I multiply these three ratios, I have something constant, which value remains 2, even
        // when I change the graph, the viewport or the camera. It might be useful later so I prefer to let this comment:
        // console.log(this.graphToViewportRatio * this.correctionRatio * this.normalizationFunction.ratio * 2);
        var params = {
            matrix: this.matrix,
            width: this.width,
            height: this.height,
            pixelRatio: this.pixelRatio,
            zoomRatio: this.camera.ratio,
            sizeRatio: 1 / this.scaleSize(),
            correctionRatio: this.correctionRatio,
        };
        // Drawing nodes
        for (var type in this.nodePrograms) {
            var program = this.nodePrograms[type];
            program.render(params);
        }
        // Drawing edges
        if (!this.settings.hideEdgesOnMove || !moving) {
            for (var type in this.edgePrograms) {
                var program = this.edgePrograms[type];
                program.render(params);
            }
        }
        // Do not display labels on move per setting
        if (this.settings.hideLabelsOnMove && moving)
            return exitRender();
        this.renderLabels();
        this.renderEdgeLabels();
        this.renderHighlightedNodes();
        return exitRender();
    };
    /**---------------------------------------------------------------------------
     * Public API.
     **---------------------------------------------------------------------------
     */
    /**
     * Method returning the renderer's camera.
     *
     * @return {Camera}
     */
    Sigma.prototype.getCamera = function () {
        return this.camera;
    };
    /**
     * Method setting the renderer's camera.
     *
     * @param  {Camera} camera - New camera.
     * @return {Sigma}
     */
    Sigma.prototype.setCamera = function (camera) {
        this.unbindCameraHandlers();
        this.camera = camera;
        this.bindCameraHandlers();
    };
    /**
     * Method returning the container DOM element.
     *
     * @return {HTMLElement}
     */
    Sigma.prototype.getContainer = function () {
        return this.container;
    };
    /**
     * Method returning the renderer's graph.
     *
     * @return {Graph}
     */
    Sigma.prototype.getGraph = function () {
        return this.graph;
    };
    /**
     * Method used to set the renderer's graph.
     *
     * @return {Graph}
     */
    Sigma.prototype.setGraph = function (graph) {
        if (graph === this.graph)
            return;
        // Unbinding handlers on the current graph
        this.unbindGraphHandlers();
        // Clearing the graph data caches
        this.nodeDataCache = {};
        this.edgeDataCache = {};
        // Cleaning renderer state tied to the current graph
        this.displayedNodeLabels.clear();
        this.displayedEdgeLabels.clear();
        this.highlightedNodes.clear();
        this.hoveredNode = null;
        this.hoveredEdge = null;
        this.nodesWithForcedLabels.length = 0;
        this.edgesWithForcedLabels.length = 0;
        if (this.checkEdgesEventsFrame !== null) {
            (0, utils_1.cancelFrame)(this.checkEdgesEventsFrame);
            this.checkEdgesEventsFrame = null;
        }
        // Installing new graph
        this.graph = graph;
        // Binding new handlers
        this.bindGraphHandlers();
        // Re-rendering now to avoid discrepancies from now to next frame
        this.refresh();
    };
    /**
     * Method returning the mouse captor.
     *
     * @return {MouseCaptor}
     */
    Sigma.prototype.getMouseCaptor = function () {
        return this.mouseCaptor;
    };
    /**
     * Method returning the touch captor.
     *
     * @return {TouchCaptor}
     */
    Sigma.prototype.getTouchCaptor = function () {
        return this.touchCaptor;
    };
    /**
     * Method returning the current renderer's dimensions.
     *
     * @return {Dimensions}
     */
    Sigma.prototype.getDimensions = function () {
        return { width: this.width, height: this.height };
    };
    /**
     * Method returning the current graph's dimensions.
     *
     * @return {Dimensions}
     */
    Sigma.prototype.getGraphDimensions = function () {
        var extent = this.customBBox || this.nodeExtent;
        return {
            width: extent.x[1] - extent.x[0] || 1,
            height: extent.y[1] - extent.y[0] || 1,
        };
    };
    /**
     * Method used to get all the sigma node attributes.
     * It's usefull for example to get the position of a node
     * and to get values that are set by the nodeReducer
     *
     * @param  {string} key - The node's key.
     * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found
     */
    Sigma.prototype.getNodeDisplayData = function (key) {
        var node = this.nodeDataCache[key];
        return node ? Object.assign({}, node) : undefined;
    };
    /**
     * Method used to get all the sigma edge attributes.
     * It's usefull for example to get values that are set by the edgeReducer.
     *
     * @param  {string} key - The edge's key.
     * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found
     */
    Sigma.prototype.getEdgeDisplayData = function (key) {
        var edge = this.edgeDataCache[key];
        return edge ? Object.assign({}, edge) : undefined;
    };
    /**
     * Method used to get the set of currently displayed node labels.
     *
     * @return {Set<string>} A set of node keys whose label is displayed.
     */
    Sigma.prototype.getNodeDisplayedLabels = function () {
        return new Set(this.displayedNodeLabels);
    };
    /**
     * Method used to get the set of currently displayed edge labels.
     *
     * @return {Set<string>} A set of edge keys whose label is displayed.
     */
    Sigma.prototype.getEdgeDisplayedLabels = function () {
        return new Set(this.displayedEdgeLabels);
    };
    /**
     * Method returning a copy of the settings collection.
     *
     * @return {Settings} A copy of the settings collection.
     */
    Sigma.prototype.getSettings = function () {
        return __assign({}, this.settings);
    };
    /**
     * Method returning the current value for a given setting key.
     *
     * @param  {string} key - The setting key to get.
     * @return {any} The value attached to this setting key or undefined if not found
     */
    Sigma.prototype.getSetting = function (key) {
        return this.settings[key];
    };
    /**
     * Method setting the value of a given setting key. Note that this will schedule
     * a new render next frame.
     *
     * @param  {string} key - The setting key to set.
     * @param  {any}    value - The value to set.
     * @return {Sigma}
     */
    Sigma.prototype.setSetting = function (key, value) {
        this.settings[key] = value;
        (0, settings_1.validateSettings)(this.settings);
        this.handleSettingsUpdate();
        this.scheduleRefresh();
        return this;
    };
    /**
     * Method updating the value of a given setting key using the provided function.
     * Note that this will schedule a new render next frame.
     *
     * @param  {string}   key     - The setting key to set.
     * @param  {function} updater - The update function.
     * @return {Sigma}
     */
    Sigma.prototype.updateSetting = function (key, updater) {
        this.settings[key] = updater(this.settings[key]);
        (0, settings_1.validateSettings)(this.settings);
        this.handleSettingsUpdate();
        this.scheduleRefresh();
        return this;
    };
    /**
     * Method used to resize the renderer.
     *
     * @return {Sigma}
     */
    Sigma.prototype.resize = function () {
        var previousWidth = this.width, previousHeight = this.height;
        this.width = this.container.offsetWidth;
        this.height = this.container.offsetHeight;
        this.pixelRatio = (0, utils_1.getPixelRatio)();
        if (this.width === 0) {
            if (this.settings.allowInvalidContainer)
                this.width = 1;
            else
                throw new Error("Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.");
        }
        if (this.height === 0) {
            if (this.settings.allowInvalidContainer)
                this.height = 1;
            else
                throw new Error("Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.");
        }
        // If nothing has changed, we can stop right here
        if (previousWidth === this.width && previousHeight === this.height)
            return this;
        this.emit("resize");
        // Sizing dom elements
        for (var id in this.elements) {
            var element = this.elements[id];
            element.style.width = this.width + "px";
            element.style.height = this.height + "px";
        }
        // Sizing canvas contexts
        for (var id in this.canvasContexts) {
            this.elements[id].setAttribute("width", this.width * this.pixelRatio + "px");
            this.elements[id].setAttribute("height", this.height * this.pixelRatio + "px");
            if (this.pixelRatio !== 1)
                this.canvasContexts[id].scale(this.pixelRatio, this.pixelRatio);
        }
        // Sizing WebGL contexts
        for (var id in this.webGLContexts) {
            this.elements[id].setAttribute("width", this.width * this.pixelRatio + "px");
            this.elements[id].setAttribute("height", this.height * this.pixelRatio + "px");
            this.webGLContexts[id].viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);
        }
        return this;
    };
    /**
     * Method used to clear all the canvases.
     *
     * @return {Sigma}
     */
    Sigma.prototype.clear = function () {
        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);
        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);
        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);
        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);
        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);
        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);
        return this;
    };
    /**
     * Method used to refresh, i.e. force the renderer to fully reprocess graph
     * data and render.
     *
     * @return {Sigma}
     */
    Sigma.prototype.refresh = function () {
        this.needToProcess = true;
        this.render();
        return this;
    };
    /**
     * Method used to schedule a render at the next available frame.
     * This method can be safely called on a same frame because it basically
     * debounce refresh to the next frame.
     *
     * @return {Sigma}
     */
    Sigma.prototype.scheduleRender = function () {
        var _this = this;
        if (!this.renderFrame) {
            this.renderFrame = (0, utils_1.requestFrame)(function () {
                _this.render();
            });
        }
        return this;
    };
    /**
     * Method used to schedule a refresh (i.e. fully reprocess graph data and render)
     * at the next available frame.
     * This method can be safely called on a same frame because it basically
     * debounce refresh to the next frame.
     *
     * @return {Sigma}
     */
    Sigma.prototype.scheduleRefresh = function () {
        this.needToProcess = true;
        this.scheduleRender();
        return this;
    };
    /**
     * Method used to (un)zoom, while preserving the position of a viewport point.
     * Used for instance to zoom "on the mouse cursor".
     *
     * @param viewportTarget
     * @param newRatio
     * @return {CameraState}
     */
    Sigma.prototype.getViewportZoomedState = function (viewportTarget, newRatio) {
        var _a = this.camera.getState(), ratio = _a.ratio, angle = _a.angle, x = _a.x, y = _a.y;
        // TODO: handle max zoom
        var ratioDiff = newRatio / ratio;
        var center = {
            x: this.width / 2,
            y: this.height / 2,
        };
        var graphMousePosition = this.viewportToFramedGraph(viewportTarget);
        var graphCenterPosition = this.viewportToFramedGraph(center);
        return {
            angle: angle,
            x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,
            y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,
            ratio: newRatio,
        };
    };
    /**
     * Method returning the abstract rectangle containing the graph according
     * to the camera's state.
     *
     * @return {object} - The view's rectangle.
     */
    Sigma.prototype.viewRectangle = function () {
        // TODO: reduce relative margin?
        var marginX = (0 * this.width) / 8, marginY = (0 * this.height) / 8;
        var p1 = this.viewportToFramedGraph({ x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph({ x: this.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph({ x: 0, y: this.height + marginY });
        return {
            x1: p1.x,
            y1: p1.y,
            x2: p2.x,
            y2: p2.y,
            height: p2.y - h.y,
        };
    };
    /**
     * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows
     * overriding anything that is used to get the translation matrix, or even the matrix itself.
     *
     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest
     * of computations.
     */
    Sigma.prototype.framedGraphToViewport = function (coordinates, override) {
        if (override === void 0) { override = {}; }
        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;
        var matrix = override.matrix
            ? override.matrix
            : recomputeMatrix
                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting("stagePadding") || 0)
                : this.matrix;
        var viewportPos = (0, matrices_1.multiplyVec2)(matrix, coordinates);
        return {
            x: ((1 + viewportPos.x) * this.width) / 2,
            y: ((1 - viewportPos.y) * this.height) / 2,
        };
    };
    /**
     * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows
     * overriding anything that is used to get the translation matrix, or even the matrix itself.
     *
     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest
     * of computations.
     */
    Sigma.prototype.viewportToFramedGraph = function (coordinates, override) {
        if (override === void 0) { override = {}; }
        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;
        var invMatrix = override.matrix
            ? override.matrix
            : recomputeMatrix
                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting("stagePadding") || 0, true)
                : this.invMatrix;
        var res = (0, matrices_1.multiplyVec2)(invMatrix, {
            x: (coordinates.x / this.width) * 2 - 1,
            y: 1 - (coordinates.y / this.height) * 2,
        });
        if (isNaN(res.x))
            res.x = 0;
        if (isNaN(res.y))
            res.y = 0;
        return res;
    };
    /**
     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the
     * stage) to the graph system (the reference system of data as they are in the given graph instance).
     *
     * This method accepts an optional camera which can be useful if you need to translate coordinates
     * based on a different view than the one being currently being displayed on screen.
     *
     * @param {Coordinates}                  viewportPoint
     * @param {CoordinateConversionOverride} override
     */
    Sigma.prototype.viewportToGraph = function (viewportPoint, override) {
        if (override === void 0) { override = {}; }
        return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));
    };
    /**
     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in
     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).
     *
     * This method accepts an optional camera which can be useful if you need to translate coordinates
     * based on a different view than the one being currently being displayed on screen.
     *
     * @param {Coordinates}                  graphPoint
     * @param {CoordinateConversionOverride} override
     */
    Sigma.prototype.graphToViewport = function (graphPoint, override) {
        if (override === void 0) { override = {}; }
        return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);
    };
    /**
     * Method returning the distance multiplier between the graph system and the
     * viewport system.
     */
    Sigma.prototype.getGraphToViewportRatio = function () {
        var graphP1 = { x: 0, y: 0 };
        var graphP2 = { x: 1, y: 1 };
        var graphD = Math.sqrt(Math.pow(graphP1.x - graphP2.x, 2) + Math.pow(graphP1.y - graphP2.y, 2));
        var viewportP1 = this.graphToViewport(graphP1);
        var viewportP2 = this.graphToViewport(graphP2);
        var viewportD = Math.sqrt(Math.pow(viewportP1.x - viewportP2.x, 2) + Math.pow(viewportP1.y - viewportP2.y, 2));
        return viewportD / graphD;
    };
    /**
     * Method returning the graph's bounding box.
     *
     * @return {{ x: Extent, y: Extent }}
     */
    Sigma.prototype.getBBox = function () {
        return (0, utils_1.graphExtent)(this.graph);
    };
    /**
     * Method returning the graph's custom bounding box, if any.
     *
     * @return {{ x: Extent, y: Extent } | null}
     */
    Sigma.prototype.getCustomBBox = function () {
        return this.customBBox;
    };
    /**
     * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.
     *
     * @return {Sigma}
     */
    Sigma.prototype.setCustomBBox = function (customBBox) {
        this.customBBox = customBBox;
        this.scheduleRender();
        return this;
    };
    /**
     * Method used to shut the container & release event listeners.
     *
     * @return {undefined}
     */
    Sigma.prototype.kill = function () {
        // Emitting "kill" events so that plugins and such can cleanup
        this.emit("kill");
        // Releasing events
        this.removeAllListeners();
        // Releasing camera handlers
        this.unbindCameraHandlers();
        // Releasing DOM events & captors
        window.removeEventListener("resize", this.activeListeners.handleResize);
        this.mouseCaptor.kill();
        this.touchCaptor.kill();
        // Releasing graph handlers
        this.unbindGraphHandlers();
        // Releasing cache & state
        this.quadtree = new quadtree_1.default();
        this.nodeDataCache = {};
        this.edgeDataCache = {};
        this.nodesWithForcedLabels = [];
        this.edgesWithForcedLabels = [];
        this.highlightedNodes.clear();
        // Clearing frames
        if (this.renderFrame) {
            (0, utils_1.cancelFrame)(this.renderFrame);
            this.renderFrame = null;
        }
        if (this.renderHighlightedNodesFrame) {
            (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);
            this.renderHighlightedNodesFrame = null;
        }
        // Destroying canvases
        var container = this.container;
        while (container.firstChild)
            container.removeChild(container.firstChild);
    };
    /**
     * Method used to scale the given size according to the camera's ratio, i.e.
     * zooming state.
     *
     * @param  {number?} size -        The size to scale (node size, edge thickness etc.).
     * @param  {number?} cameraRatio - A camera ratio (defaults to the actual camera ratio).
     * @return {number}              - The scaled size.
     */
    Sigma.prototype.scaleSize = function (size, cameraRatio) {
        if (size === void 0) { size = 1; }
        if (cameraRatio === void 0) { cameraRatio = this.camera.ratio; }
        return ((size / this.settings.zoomToSizeRatioFunction(cameraRatio)) *
            (this.getSetting("itemSizesReference") === "positions" ? cameraRatio * this.graphToViewportRatio : 1));
    };
    /**
     * Method that returns the collection of all used canvases.
     * At the moment, the instantiated canvases are the following, and in the
     * following order in the DOM:
     * - `edges`
     * - `nodes`
     * - `edgeLabels`
     * - `labels`
     * - `hovers`
     * - `hoverNodes`
     * - `mouse`
     *
     * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.
     */
    Sigma.prototype.getCanvases = function () {
        return __assign({}, this.elements);
    };
    return Sigma;
}(types_1.TypedEventEmitter));
exports.default = Sigma;

},{"./core/camera":6,"./core/captors/mouse":8,"./core/captors/touch":9,"./core/labels":10,"./core/quadtree":11,"./settings":32,"./types":34,"./utils":39,"./utils/edge-collisions":38,"./utils/matrices":40,"@yomguithereal/helpers/extend":3}],34:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypedEventEmitter = void 0;
/**
 * Sigma.js Types
 * ===============
 *
 * Various type declarations used throughout the library.
 * @module
 */
var events_1 = require("events");
var TypedEventEmitter = /** @class */ (function (_super) {
    __extends(TypedEventEmitter, _super);
    function TypedEventEmitter() {
        var _this = _super.call(this) || this;
        _this.rawEmitter = _this;
        return _this;
    }
    return TypedEventEmitter;
}(events_1.EventEmitter));
exports.TypedEventEmitter = TypedEventEmitter;

},{"events":41}],35:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;
var index_1 = require("./index");
var easings_1 = __importDefault(require("./easings"));
exports.ANIMATE_DEFAULTS = {
    easing: "quadraticInOut",
    duration: 150,
};
/**
 * Function used to animate the nodes.
 */
function animateNodes(graph, targets, opts, callback) {
    var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);
    var easing = typeof options.easing === "function" ? options.easing : easings_1.default[options.easing];
    var start = Date.now();
    var startPositions = {};
    for (var node in targets) {
        var attrs = targets[node];
        startPositions[node] = {};
        for (var k in attrs)
            startPositions[node][k] = graph.getNodeAttribute(node, k);
    }
    var frame = null;
    var step = function () {
        frame = null;
        var p = (Date.now() - start) / options.duration;
        if (p >= 1) {
            // Animation is done
            for (var node in targets) {
                var attrs = targets[node];
                // We use given values to avoid precision issues and for convenience
                for (var k in attrs)
                    graph.setNodeAttribute(node, k, attrs[k]);
            }
            if (typeof callback === "function")
                callback();
            return;
        }
        p = easing(p);
        for (var node in targets) {
            var attrs = targets[node];
            var s = startPositions[node];
            for (var k in attrs)
                graph.setNodeAttribute(node, k, attrs[k] * p + s[k] * (1 - p));
        }
        frame = (0, index_1.requestFrame)(step);
    };
    step();
    return function () {
        if (frame)
            (0, index_1.cancelFrame)(frame);
    };
}
exports.animateNodes = animateNodes;

},{"./easings":37,"./index":39}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HTML_COLORS = void 0;
exports.HTML_COLORS = {
    black: "#000000",
    silver: "#C0C0C0",
    gray: "#808080",
    grey: "#808080",
    white: "#FFFFFF",
    maroon: "#800000",
    red: "#FF0000",
    purple: "#800080",
    fuchsia: "#FF00FF",
    green: "#008000",
    lime: "#00FF00",
    olive: "#808000",
    yellow: "#FFFF00",
    navy: "#000080",
    blue: "#0000FF",
    teal: "#008080",
    aqua: "#00FFFF",
    darkblue: "#00008B",
    mediumblue: "#0000CD",
    darkgreen: "#006400",
    darkcyan: "#008B8B",
    deepskyblue: "#00BFFF",
    darkturquoise: "#00CED1",
    mediumspringgreen: "#00FA9A",
    springgreen: "#00FF7F",
    cyan: "#00FFFF",
    midnightblue: "#191970",
    dodgerblue: "#1E90FF",
    lightseagreen: "#20B2AA",
    forestgreen: "#228B22",
    seagreen: "#2E8B57",
    darkslategray: "#2F4F4F",
    darkslategrey: "#2F4F4F",
    limegreen: "#32CD32",
    mediumseagreen: "#3CB371",
    turquoise: "#40E0D0",
    royalblue: "#4169E1",
    steelblue: "#4682B4",
    darkslateblue: "#483D8B",
    mediumturquoise: "#48D1CC",
    indigo: "#4B0082",
    darkolivegreen: "#556B2F",
    cadetblue: "#5F9EA0",
    cornflowerblue: "#6495ED",
    rebeccapurple: "#663399",
    mediumaquamarine: "#66CDAA",
    dimgray: "#696969",
    dimgrey: "#696969",
    slateblue: "#6A5ACD",
    olivedrab: "#6B8E23",
    slategray: "#708090",
    slategrey: "#708090",
    lightslategray: "#778899",
    lightslategrey: "#778899",
    mediumslateblue: "#7B68EE",
    lawngreen: "#7CFC00",
    chartreuse: "#7FFF00",
    aquamarine: "#7FFFD4",
    skyblue: "#87CEEB",
    lightskyblue: "#87CEFA",
    blueviolet: "#8A2BE2",
    darkred: "#8B0000",
    darkmagenta: "#8B008B",
    saddlebrown: "#8B4513",
    darkseagreen: "#8FBC8F",
    lightgreen: "#90EE90",
    mediumpurple: "#9370DB",
    darkviolet: "#9400D3",
    palegreen: "#98FB98",
    darkorchid: "#9932CC",
    yellowgreen: "#9ACD32",
    sienna: "#A0522D",
    brown: "#A52A2A",
    darkgray: "#A9A9A9",
    darkgrey: "#A9A9A9",
    lightblue: "#ADD8E6",
    greenyellow: "#ADFF2F",
    paleturquoise: "#AFEEEE",
    lightsteelblue: "#B0C4DE",
    powderblue: "#B0E0E6",
    firebrick: "#B22222",
    darkgoldenrod: "#B8860B",
    mediumorchid: "#BA55D3",
    rosybrown: "#BC8F8F",
    darkkhaki: "#BDB76B",
    mediumvioletred: "#C71585",
    indianred: "#CD5C5C",
    peru: "#CD853F",
    chocolate: "#D2691E",
    tan: "#D2B48C",
    lightgray: "#D3D3D3",
    lightgrey: "#D3D3D3",
    thistle: "#D8BFD8",
    orchid: "#DA70D6",
    goldenrod: "#DAA520",
    palevioletred: "#DB7093",
    crimson: "#DC143C",
    gainsboro: "#DCDCDC",
    plum: "#DDA0DD",
    burlywood: "#DEB887",
    lightcyan: "#E0FFFF",
    lavender: "#E6E6FA",
    darksalmon: "#E9967A",
    violet: "#EE82EE",
    palegoldenrod: "#EEE8AA",
    lightcoral: "#F08080",
    khaki: "#F0E68C",
    aliceblue: "#F0F8FF",
    honeydew: "#F0FFF0",
    azure: "#F0FFFF",
    sandybrown: "#F4A460",
    wheat: "#F5DEB3",
    beige: "#F5F5DC",
    whitesmoke: "#F5F5F5",
    mintcream: "#F5FFFA",
    ghostwhite: "#F8F8FF",
    salmon: "#FA8072",
    antiquewhite: "#FAEBD7",
    linen: "#FAF0E6",
    lightgoldenrodyellow: "#FAFAD2",
    oldlace: "#FDF5E6",
    magenta: "#FF00FF",
    deeppink: "#FF1493",
    orangered: "#FF4500",
    tomato: "#FF6347",
    hotpink: "#FF69B4",
    coral: "#FF7F50",
    darkorange: "#FF8C00",
    lightsalmon: "#FFA07A",
    orange: "#FFA500",
    lightpink: "#FFB6C1",
    pink: "#FFC0CB",
    gold: "#FFD700",
    peachpuff: "#FFDAB9",
    navajowhite: "#FFDEAD",
    moccasin: "#FFE4B5",
    bisque: "#FFE4C4",
    mistyrose: "#FFE4E1",
    blanchedalmond: "#FFEBCD",
    papayawhip: "#FFEFD5",
    lavenderblush: "#FFF0F5",
    seashell: "#FFF5EE",
    cornsilk: "#FFF8DC",
    lemonchiffon: "#FFFACD",
    floralwhite: "#FFFAF0",
    snow: "#FFFAFA",
    lightyellow: "#FFFFE0",
    ivory: "#FFFFF0",
};

},{}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;
/**
 * Sigma.js Easings
 * =================
 *
 * Handy collection of easing functions.
 * @module
 */
var linear = function (k) { return k; };
exports.linear = linear;
var quadraticIn = function (k) { return k * k; };
exports.quadraticIn = quadraticIn;
var quadraticOut = function (k) { return k * (2 - k); };
exports.quadraticOut = quadraticOut;
var quadraticInOut = function (k) {
    if ((k *= 2) < 1)
        return 0.5 * k * k;
    return -0.5 * (--k * (k - 2) - 1);
};
exports.quadraticInOut = quadraticInOut;
var cubicIn = function (k) { return k * k * k; };
exports.cubicIn = cubicIn;
var cubicOut = function (k) { return --k * k * k + 1; };
exports.cubicOut = cubicOut;
var cubicInOut = function (k) {
    if ((k *= 2) < 1)
        return 0.5 * k * k * k;
    return 0.5 * ((k -= 2) * k * k + 2);
};
exports.cubicInOut = cubicInOut;
var easings = {
    linear: exports.linear,
    quadraticIn: exports.quadraticIn,
    quadraticOut: exports.quadraticOut,
    quadraticInOut: exports.quadraticInOut,
    cubicIn: exports.cubicIn,
    cubicOut: exports.cubicOut,
    cubicInOut: exports.cubicInOut,
};
exports.default = easings;

},{}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.doEdgeCollideWithPoint = exports.isPixelColored = void 0;
/**
 * This helper returns true is the pixel at (x,y) in the given WebGL context is
 * colored, and false else.
 */
function isPixelColored(gl, x, y) {
    var pixels = new Uint8Array(4);
    gl.readPixels(x, gl.drawingBufferHeight - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);
    return pixels[3] > 0;
}
exports.isPixelColored = isPixelColored;
/**
 * This helper checks whether or not a point (x, y) collides with an
 * edge, connecting a source (xS, yS) to a target (xT, yT) with a thickness in
 * pixels.
 */
function doEdgeCollideWithPoint(x, y, xS, yS, xT, yT, thickness) {
    // Check first if point is out of the rectangle which opposite corners are the
    // source and the target, rectangle we expand by `thickness` in every
    // directions:
    if (x < xS - thickness && x < xT - thickness)
        return false;
    if (y < yS - thickness && y < yT - thickness)
        return false;
    if (x > xS + thickness && x > xT + thickness)
        return false;
    if (y > yS + thickness && y > yT + thickness)
        return false;
    // Check actual collision now: Since we now the point is in this big rectangle
    // we "just" need to check that the distance between the point and the line
    // connecting the source and the target is less than `thickness`:
    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line
    var distance = Math.abs((xT - xS) * (yS - y) - (xS - x) * (yT - yS)) / Math.sqrt(Math.pow(xT - xS, 2) + Math.pow(yT - yS, 2));
    return distance < thickness / 2;
}
exports.doEdgeCollideWithPoint = doEdgeCollideWithPoint;

},{}],39:[function(require,module,exports){
"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;
var is_graph_1 = __importDefault(require("graphology-utils/is-graph"));
var matrices_1 = require("./matrices");
var data_1 = require("./data");
/**
 * Checks whether the given value is a plain object.
 *
 * @param  {mixed}   value - Target value.
 * @return {boolean}
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types
function isPlainObject(value) {
    return typeof value === "object" && value !== null && value.constructor === Object;
}
exports.isPlainObject = isPlainObject;
/**
 * Helper to use Object.assign with more than two objects.
 *
 * @param  {object} target       - First object.
 * @param  {object} [...objects] - Objects to merge.
 * @return {object}
 */
function assign(target) {
    var objects = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
    }
    target = target || {};
    for (var i = 0, l = objects.length; i < l; i++) {
        var o = objects[i];
        if (!o)
            continue;
        Object.assign(target, o);
    }
    return target;
}
exports.assign = assign;
/**
 * Very simple recursive Object.assign-like function.
 *
 * @param  {object} target       - First object.
 * @param  {object} [...objects] - Objects to merge.
 * @return {object}
 */
function assignDeep(target) {
    var objects = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        objects[_i - 1] = arguments[_i];
    }
    target = target || {};
    for (var i = 0, l = objects.length; i < l; i++) {
        var o = objects[i];
        if (!o)
            continue;
        for (var k in o) {
            if (isPlainObject(o[k])) {
                target[k] = assignDeep(target[k], o[k]);
            }
            else {
                target[k] = o[k];
            }
        }
    }
    return target;
}
exports.assignDeep = assignDeep;
/**
 * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame "work" in Node.js, for unit tests:
 */
exports.requestFrame = typeof requestAnimationFrame !== "undefined"
    ? function (callback) { return requestAnimationFrame(callback); }
    : function (callback) { return setTimeout(callback, 0); };
exports.cancelFrame = typeof cancelAnimationFrame !== "undefined"
    ? function (requestID) { return cancelAnimationFrame(requestID); }
    : function (requestID) { return clearTimeout(requestID); };
/**
 * Function used to create DOM elements easily.
 *
 * @param  {string} tag        - Tag name of the element to create.
 * @param  {object} style      - Styles map.
 * @param  {object} attributes - Attributes map.
 * @return {HTMLElement}
 */
function createElement(tag, style, attributes) {
    var element = document.createElement(tag);
    if (style) {
        for (var k in style) {
            element.style[k] = style[k];
        }
    }
    if (attributes) {
        for (var k in attributes) {
            element.setAttribute(k, attributes[k]);
        }
    }
    return element;
}
exports.createElement = createElement;
/**
 * Function returning the browser's pixel ratio.
 *
 * @return {number}
 */
function getPixelRatio() {
    if (typeof window.devicePixelRatio !== "undefined")
        return window.devicePixelRatio;
    return 1;
}
exports.getPixelRatio = getPixelRatio;
/**
 * Function returning the graph's node extent in x & y.
 *
 * @param  {Graph}
 * @return {object}
 */
function graphExtent(graph) {
    if (!graph.order)
        return { x: [0, 1], y: [0, 1] };
    var xMin = Infinity;
    var xMax = -Infinity;
    var yMin = Infinity;
    var yMax = -Infinity;
    graph.forEachNode(function (_, attr) {
        var x = attr.x, y = attr.y;
        if (x < xMin)
            xMin = x;
        if (x > xMax)
            xMax = x;
        if (y < yMin)
            yMin = y;
        if (y > yMax)
            yMax = y;
    });
    return { x: [xMin, xMax], y: [yMin, yMax] };
}
exports.graphExtent = graphExtent;
function createNormalizationFunction(extent) {
    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];
    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;
    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))
        ratio = 1;
    if (isNaN(dX))
        dX = 0;
    if (isNaN(dY))
        dY = 0;
    var fn = function (data) {
        return {
            x: 0.5 + (data.x - dX) / ratio,
            y: 0.5 + (data.y - dY) / ratio,
        };
    };
    // TODO: possibility to apply this in batch over array of indices
    fn.applyTo = function (data) {
        data.x = 0.5 + (data.x - dX) / ratio;
        data.y = 0.5 + (data.y - dY) / ratio;
    };
    fn.inverse = function (data) {
        return {
            x: dX + ratio * (data.x - 0.5),
            y: dY + ratio * (data.y - 0.5),
        };
    };
    fn.ratio = ratio;
    return fn;
}
exports.createNormalizationFunction = createNormalizationFunction;
/**
 * Function ordering the given elements in reverse z-order so they drawn
 * the correct way.
 *
 * @param  {number}   extent   - [min, max] z values.
 * @param  {function} getter   - Z attribute getter function.
 * @param  {array}    elements - The array to sort.
 * @return {array} - The sorted array.
 */
function zIndexOrdering(extent, getter, elements) {
    // If k is > n, we'll use a standard sort
    return elements.sort(function (a, b) {
        var zA = getter(a) || 0, zB = getter(b) || 0;
        if (zA < zB)
            return -1;
        if (zA > zB)
            return 1;
        return 0;
    });
    // TODO: counting sort optimization
}
exports.zIndexOrdering = zIndexOrdering;
/**
 * WebGL utils
 * ===========
 */
/**
 * Memoized function returning a float-encoded color from various string
 * formats describing colors.
 */
var INT8 = new Int8Array(4);
var INT32 = new Int32Array(INT8.buffer, 0, 1);
var FLOAT32 = new Float32Array(INT8.buffer, 0, 1);
var RGBA_TEST_REGEX = /^\s*rgba?\s*\(/;
var RGBA_EXTRACT_REGEX = /^\s*rgba?\s*\(\s*([0-9]*)\s*,\s*([0-9]*)\s*,\s*([0-9]*)(?:\s*,\s*(.*)?)?\)\s*$/;
function parseColor(val) {
    var r = 0; // byte
    var g = 0; // byte
    var b = 0; // byte
    var a = 1; // float
    // Handling hexadecimal notation
    if (val[0] === "#") {
        if (val.length === 4) {
            r = parseInt(val.charAt(1) + val.charAt(1), 16);
            g = parseInt(val.charAt(2) + val.charAt(2), 16);
            b = parseInt(val.charAt(3) + val.charAt(3), 16);
        }
        else {
            r = parseInt(val.charAt(1) + val.charAt(2), 16);
            g = parseInt(val.charAt(3) + val.charAt(4), 16);
            b = parseInt(val.charAt(5) + val.charAt(6), 16);
        }
        if (val.length === 9) {
            a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;
        }
    }
    // Handling rgb notation
    else if (RGBA_TEST_REGEX.test(val)) {
        var match = val.match(RGBA_EXTRACT_REGEX);
        if (match) {
            r = +match[1];
            g = +match[2];
            b = +match[3];
            if (match[4])
                a = +match[4];
        }
    }
    return { r: r, g: g, b: b, a: a };
}
exports.parseColor = parseColor;
var FLOAT_COLOR_CACHE = {};
for (var htmlColor in data_1.HTML_COLORS) {
    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);
    // Replicating cache for hex values for free
    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];
}
function floatArrayColor(val) {
    val = data_1.HTML_COLORS[val] || val;
    // NOTE: this variant is not cached because it is mostly used for uniforms
    var _a = parseColor(val), r = _a.r, g = _a.g, b = _a.b, a = _a.a;
    return new Float32Array([r / 255, g / 255, b / 255, a]);
}
exports.floatArrayColor = floatArrayColor;
function floatColor(val) {
    // If the color is already computed, we yield it
    if (typeof FLOAT_COLOR_CACHE[val] !== "undefined")
        return FLOAT_COLOR_CACHE[val];
    var parsed = parseColor(val);
    var r = parsed.r, g = parsed.g, b = parsed.b;
    var a = parsed.a;
    a = (a * 255) | 0;
    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;
    var color = FLOAT32[0];
    FLOAT_COLOR_CACHE[val] = color;
    return color;
}
exports.floatColor = floatColor;
/**
 * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This
 * helps dealing with quadtree in particular.
 * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two
 * nodes "touching" opposite sides of the graph, with the camera being at its default state.
 *
 * This function determines this ratio.
 */
function getCorrectionRatio(viewportDimensions, graphDimensions) {
    var viewportRatio = viewportDimensions.height / viewportDimensions.width;
    var graphRatio = graphDimensions.height / graphDimensions.width;
    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage
    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:
    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {
        return 1;
    }
    // Else, we need to fit the graph inside the stage:
    // 1. If the graph is "squarer" (ie. with a ratio closer to 1), we need to make the largest sides touch;
    // 2. If the stage is "squarer", we need to make the smallest sides touch.
    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));
}
exports.getCorrectionRatio = getCorrectionRatio;
/**
 * Function returning a matrix from the current state of the camera.
 */
// TODO: it's possible to optimize this drastically!
function matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {
    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;
    var width = viewportDimensions.width, height = viewportDimensions.height;
    var matrix = (0, matrices_1.identity)();
    var smallestDimension = Math.min(width, height) - 2 * padding;
    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);
    if (!inverse) {
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));
    }
    else {
        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));
        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));
    }
    return matrix;
}
exports.matrixFromCamera = matrixFromCamera;
/**
 * All these transformations we apply on the matrix to get it rescale the graph
 * as we want make it very hard to get pixel-perfect distances in WebGL. This
 * function returns a factor that properly cancels the matrix effect on lengths.
 *
 * [jacomyal]
 * To be fully honest, I can't really explain happens here... I notice that the
 * following ratio works (ie. it correctly compensates the matrix impact on all
 * camera states I could try):
 * > `R = size(V) / size(M * V) / W`
 * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works
 * as well with H and a vector that transforms into something parallel to (Oy).
 *
 * Also, note that we use `angle` and not `-angle` (that would seem logical,
 * since we want to anticipate the rotation), because of the fact that in WebGL,
 * the image is vertically swapped.
 */
function getMatrixImpact(matrix, cameraState, viewportDimensions) {
    var _a = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _a.x, y = _a.y;
    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;
}
exports.getMatrixImpact = getMatrixImpact;
/**
 * Function extracting the color at the given pixel.
 */
function extractPixel(gl, x, y, array) {
    var data = array || new Uint8Array(4);
    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);
    return data;
}
exports.extractPixel = extractPixel;
/**
 * Function used to know whether given webgl context can use 32 bits indices.
 */
function canUse32BitsIndices(gl) {
    var webgl2 = typeof WebGL2RenderingContext !== "undefined" && gl instanceof WebGL2RenderingContext;
    return webgl2 || !!gl.getExtension("OES_element_index_uint");
}
exports.canUse32BitsIndices = canUse32BitsIndices;
/**
 * Check if the graph variable is a valid graph, and if sigma can render it.
 */
function validateGraph(graph) {
    // check if it's a valid graphology instance
    if (!(0, is_graph_1.default)(graph))
        throw new Error("Sigma: invalid graph instance.");
    // check if nodes have x/y attributes
    graph.forEachNode(function (key, attributes) {
        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {
            throw new Error("Sigma: Coordinates of node ".concat(key, " are invalid. A node must have a numeric 'x' and 'y' attribute."));
        }
    });
}
exports.validateGraph = validateGraph;

},{"./data":36,"./matrices":40,"graphology-utils/is-graph":4}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;
function identity() {
    return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);
}
exports.identity = identity;
// TODO: optimize
function scale(m, x, y) {
    m[0] = x;
    m[4] = typeof y === "number" ? y : x;
    return m;
}
exports.scale = scale;
function rotate(m, r) {
    var s = Math.sin(r), c = Math.cos(r);
    m[0] = c;
    m[1] = s;
    m[3] = -s;
    m[4] = c;
    return m;
}
exports.rotate = rotate;
function translate(m, x, y) {
    m[6] = x;
    m[7] = y;
    return m;
}
exports.translate = translate;
function multiply(a, b) {
    var a00 = a[0], a01 = a[1], a02 = a[2];
    var a10 = a[3], a11 = a[4], a12 = a[5];
    var a20 = a[6], a21 = a[7], a22 = a[8];
    var b00 = b[0], b01 = b[1], b02 = b[2];
    var b10 = b[3], b11 = b[4], b12 = b[5];
    var b20 = b[6], b21 = b[7], b22 = b[8];
    a[0] = b00 * a00 + b01 * a10 + b02 * a20;
    a[1] = b00 * a01 + b01 * a11 + b02 * a21;
    a[2] = b00 * a02 + b01 * a12 + b02 * a22;
    a[3] = b10 * a00 + b11 * a10 + b12 * a20;
    a[4] = b10 * a01 + b11 * a11 + b12 * a21;
    a[5] = b10 * a02 + b11 * a12 + b12 * a22;
    a[6] = b20 * a00 + b21 * a10 + b22 * a20;
    a[7] = b20 * a01 + b21 * a11 + b22 * a21;
    a[8] = b20 * a02 + b21 * a12 + b22 * a22;
    return a;
}
exports.multiply = multiply;
function multiplyVec2(a, b, z) {
    if (z === void 0) { z = 1; }
    var a00 = a[0];
    var a01 = a[1];
    var a10 = a[3];
    var a11 = a[4];
    var a20 = a[6];
    var a21 = a[7];
    var b0 = b.x;
    var b1 = b.y;
    return { x: b0 * a00 + b1 * a10 + a20 * z, y: b0 * a01 + b1 * a11 + a21 * z };
}
exports.multiplyVec2 = multiplyVec2;

},{}],41:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

},{}]},{},[2]);
